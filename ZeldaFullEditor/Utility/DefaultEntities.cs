using System;

namespace ZeldaFullEditor
{
	public static class DefaultEntities
	{
		public static string GetNameFromVanillaList<T>(this T[] list, int id) where T : EntityName
		{
			return GetObjectFromVanillaList(list, id).Name;
		}
		
		public static T GetObjectFromVanillaList<T>(this T[] list, int id) where T : EntityName
		{
			int b = Array.FindIndex(list, s => s.ID == id);
			return list[b];
		}

		public static readonly DungeonName[] ListOfDungeons =
		{
			new DungeonName(0x00, "Sewers"),
			new DungeonName(0x02, "Hyrule Castle"),
			new DungeonName(0x04, "Eastern Palace"),
			new DungeonName(0x06, "Desert Palace"),
			new DungeonName(0x08, "Agahnim's Tower"),
			new DungeonName(0x0A, "Swamp Palace"),
			new DungeonName(0x0C, "Palace of Darkness"),
			new DungeonName(0x0E, "Misery Mire"),
			new DungeonName(0x10, "Skull Woods"),
			new DungeonName(0x12, "Ice Palace"),
			new DungeonName(0x14, "Tower of Hera"),
			new DungeonName(0x16, "Thieves' Town"),
			new DungeonName(0x18, "Turtle Rock"),
			new DungeonName(0x1A, "Ganon's Tower"),
			new DungeonName(0xFF, "Cave"),
		};

		public static readonly OverworldScreenName[] ListOfOverworldScreens =
		{
			new OverworldScreenName(0x00, "Lost Woods"),
			new OverworldScreenName(0x01, "Lost Woods"),
			new OverworldScreenName(0x02, "Lumberjacks"),
			new OverworldScreenName(0x03, "West Death Mountain"),
			new OverworldScreenName(0x04, "West Death Mountain"),
			new OverworldScreenName(0x05, "East Death Mountain"),
			new OverworldScreenName(0x06, "East Death Mountain"),
			new OverworldScreenName(0x07, "Turtle Rock Portalway"),
			new OverworldScreenName(0x08, "Lost Woods"),
			new OverworldScreenName(0x09, "Lost Woods"),
			new OverworldScreenName(0x0A, "Death Mountain Foot"),
			new OverworldScreenName(0x0B, "West Death Mountain"),
			new OverworldScreenName(0x0C, "West Death Mountain"),
			new OverworldScreenName(0x0D, "East Death Mountain"),
			new OverworldScreenName(0x0E, "East Death Mountain"),
			new OverworldScreenName(0x0F, "Waterfall of Wishing"),
			new OverworldScreenName(0x10, "Lost Woods Alcove"),
			new OverworldScreenName(0x11, "North of Kakariko"),
			new OverworldScreenName(0x12, "Northwest Pond"),
			new OverworldScreenName(0x13, "Sanctuary"),
			new OverworldScreenName(0x14, "Graveyard"),
			new OverworldScreenName(0x15, "Hylia River Bend"),
			new OverworldScreenName(0x16, "Potion Shop"),
			new OverworldScreenName(0x17, "Octorok Pit"),
			new OverworldScreenName(0x18, "Kakariko Village"),
			new OverworldScreenName(0x19, "Kakariko Village"),
			new OverworldScreenName(0x1A, "Kakariko Orchard"),
			new OverworldScreenName(0x1B, "Hyrule Castle"),
			new OverworldScreenName(0x1C, "Hyrule Castle"),
			new OverworldScreenName(0x1D, "Hylia River Peninsula"),
			new OverworldScreenName(0x1E, "Eastern Ruins"),
			new OverworldScreenName(0x1F, "Eastern Ruins"),
			new OverworldScreenName(0x20, "Kakariko Village"),
			new OverworldScreenName(0x21, "Kakariko Village"),
			new OverworldScreenName(0x22, "Smith's House"),
			new OverworldScreenName(0x23, "Hyrule Castle"),
			new OverworldScreenName(0x24, "Hyrule Castle"),
			new OverworldScreenName(0x25, "Boulder Field"),
			new OverworldScreenName(0x26, "Eastern Ruins"),
			new OverworldScreenName(0x27, "Eastern Ruins"),
			new OverworldScreenName(0x28, "Racing Game"),
			new OverworldScreenName(0x29, "South of Kakariko"),
			new OverworldScreenName(0x2A, "Haunted Grove"),
			new OverworldScreenName(0x2B, "West of Link's House"),
			new OverworldScreenName(0x2C, "Link's House"),
			new OverworldScreenName(0x2D, "Eastern Bridge"),
			new OverworldScreenName(0x2E, "Lake Hylia River Bend"),
			new OverworldScreenName(0x2F, "Eastern Portalway"),
			new OverworldScreenName(0x30, "Desert"),
			new OverworldScreenName(0x31, "Desert"),
			new OverworldScreenName(0x32, "Haunted Grove Entrance"),
			new OverworldScreenName(0x33, "Marshlands Portalway"),
			new OverworldScreenName(0x34, "Marshlands Totems"),
			new OverworldScreenName(0x35, "Lake Hylia"),
			new OverworldScreenName(0x36, "Lake Hylia"),
			new OverworldScreenName(0x37, "Lake Hylia River End"),
			new OverworldScreenName(0x38, "Desert"),
			new OverworldScreenName(0x39, "Desert"),
			new OverworldScreenName(0x3A, "Desert Pass"),
			new OverworldScreenName(0x3B, "Marshlands Dam Entrance"),
			new OverworldScreenName(0x3C, "Marshlands Ravine"),
			new OverworldScreenName(0x3D, "Lake Hylia"),
			new OverworldScreenName(0x3E, "Lake Hylia"),
			new OverworldScreenName(0x3F, "Lake Hylia Waterfall"),
			new OverworldScreenName(0x40, "Skull Woods"),
			new OverworldScreenName(0x41, "Skull Woods"),
			new OverworldScreenName(0x42, "Dark Lumberjacks"),
			new OverworldScreenName(0x43, "West Dark Death Mountain"),
			new OverworldScreenName(0x44, "West Dark Death Mountain"),
			new OverworldScreenName(0x45, "East Dark Death Mountain"),
			new OverworldScreenName(0x46, "East Dark Death Mountain"),
			new OverworldScreenName(0x47, "Turtle Rock"),
			new OverworldScreenName(0x48, "Skull Woods"),
			new OverworldScreenName(0x49, "Skull Woods"),
			new OverworldScreenName(0x4A, "Bumper Ledge"),
			new OverworldScreenName(0x4B, "West Dark Death Mountain"),
			new OverworldScreenName(0x4C, "West Dark Death Mountain"),
			new OverworldScreenName(0x4D, "East Dark Death Mountain"),
			new OverworldScreenName(0x4E, "East Dark Death Mountain"),
			new OverworldScreenName(0x4F, "Lake of Bad Omens"),
			new OverworldScreenName(0x50, "Skull Woods Alcove"),
			new OverworldScreenName(0x51, "North of Outcasts"),
			new OverworldScreenName(0x52, "Dark Northwest Pond"),
			new OverworldScreenName(0x53, "Dark Sanctuary"),
			new OverworldScreenName(0x54, "Dark Graveyard"),
			new OverworldScreenName(0x55, "Dark Hylia River Bend"),
			new OverworldScreenName(0x56, "Dark Northeast Shop"),
			new OverworldScreenName(0x57, "Dark Octorok Pit"),
			new OverworldScreenName(0x58, "Village of Outcasts"),
			new OverworldScreenName(0x59, "Village of Outcasts"),
			new OverworldScreenName(0x5A, "Outcasts Orchard"),
			new OverworldScreenName(0x5B, "Pyramid of Power"),
			new OverworldScreenName(0x5C, "Pyramid of Power"),
			new OverworldScreenName(0x5D, "Dark Hylia River Peninsula"),
			new OverworldScreenName(0x5E, "Palace of Darkness Maze"),
			new OverworldScreenName(0x5F, "Palace of Darkness Maze"),
			new OverworldScreenName(0x60, "Village of Outcasts"),
			new OverworldScreenName(0x61, "Village of Outcasts"),
			new OverworldScreenName(0x62, "Stake Puzzle"),
			new OverworldScreenName(0x63, "Pyramid of Power"),
			new OverworldScreenName(0x64, "Pyramid of Power"),
			new OverworldScreenName(0x65, "Boulder Field"),
			new OverworldScreenName(0x66, "Palace of Darkness Maze"),
			new OverworldScreenName(0x67, "Palace of Darkness Maze"),
			new OverworldScreenName(0x68, "Digging Game"),
			new OverworldScreenName(0x69, "South of Outcasts"),
			new OverworldScreenName(0x6A, "Stumpy Grove"),
			new OverworldScreenName(0x6B, "West of Bomb Shoppe"),
			new OverworldScreenName(0x6C, "Bomb Shoppe"),
			new OverworldScreenName(0x6D, "Hammer Bridge"),
			new OverworldScreenName(0x6E, "Dark Lake Hylia River Bend"),
			new OverworldScreenName(0x6F, "East Dark World Portalway"),
			new OverworldScreenName(0x70, "Misery Mire"),
			new OverworldScreenName(0x71, "Misery Mire"),
			new OverworldScreenName(0x72, "Stumpy Grove Entrance"),
			new OverworldScreenName(0x73, "Swamplands Portalway"),
			new OverworldScreenName(0x74, "Swamplands Totems"),
			new OverworldScreenName(0x75, "Dark Lake Hylia"),
			new OverworldScreenName(0x76, "Dark Lake Hylia"),
			new OverworldScreenName(0x77, "Dark Lake Hylia River End"),
			new OverworldScreenName(0x78, "Misery Mire"),
			new OverworldScreenName(0x79, "Misery Mire"),
			new OverworldScreenName(0x7A, "West of Swamplands"),
			new OverworldScreenName(0x7B, "Swamplands Palace Entrance"),
			new OverworldScreenName(0x7C, "Swamplands Ravine"),
			new OverworldScreenName(0x7D, "Dark Lake Hylia"),
			new OverworldScreenName(0x7E, "Dark Lake Hylia"),
			new OverworldScreenName(0x7F, "Dark Lake Hylia Waterfall"),
			new OverworldScreenName(0x80, "Master Sword Pedestal/Hobo bridge"),
			new OverworldScreenName(0x81, "Zora's Domain"),
			new OverworldScreenName(0x82, "Unused"),
			new OverworldScreenName(0x83, "Unused"),
			new OverworldScreenName(0x84, "Unused"),
			new OverworldScreenName(0x85, "Unused"),
			new OverworldScreenName(0x86, "Unused"),
			new OverworldScreenName(0x87, "Unused"),
			new OverworldScreenName(0x88, "Triforce room"),
			new OverworldScreenName(0x89, "Unused"),
			new OverworldScreenName(0x8A, "Unused"),
			new OverworldScreenName(0x8B, "Unused"),
			new OverworldScreenName(0x8C, "Unused"),
			new OverworldScreenName(0x8D, "Unused"),
			new OverworldScreenName(0x8E, "Unused"),
			new OverworldScreenName(0x8F, "Unused"),
			new OverworldScreenName(0x90, "Unused"),
			new OverworldScreenName(0x91, "Unused"),
			new OverworldScreenName(0x92, "Unused"),
			new OverworldScreenName(0x93, "Triforce room curtains"),
			new OverworldScreenName(0x94, "Hobo bridge shadow overlay"),
			new OverworldScreenName(0x95, "DM overlay"),
			new OverworldScreenName(0x96, "Pyramid background/No overlay"),
			new OverworldScreenName(0x97, "Grove fog overlay"),
			new OverworldScreenName(0x98, "Unused"),
			new OverworldScreenName(0x99, "Unused"),
			new OverworldScreenName(0x9A, "Unused"),
			new OverworldScreenName(0x9B, "Unused"),
			new OverworldScreenName(0x9C, "Dark DM overlay"),
			new OverworldScreenName(0x9D, "Woods fog overlay"),
			new OverworldScreenName(0x9E, "Lost woods clear overlay"),
			new OverworldScreenName(0x9F, "Rain"),
			new OverworldScreenName(0xA0, "Unused"),
			new OverworldScreenName(0xA1, "Unused"),
			new OverworldScreenName(0xA2, "Unused"),
			new OverworldScreenName(0xA3, "Unused"),
			new OverworldScreenName(0xA4, "Unused"),
			new OverworldScreenName(0xA5, "Unused"),
			new OverworldScreenName(0xA6, "Unused"),
			new OverworldScreenName(0xA7, "Unused"),
			new OverworldScreenName(0xA8, "Unused"),
			new OverworldScreenName(0xA9, "Unused"),
			new OverworldScreenName(0xAA, "Unused"),
			new OverworldScreenName(0xAB, "Unused"),
			new OverworldScreenName(0xAC, "Unused"),
			new OverworldScreenName(0xAD, "Unused"),
			new OverworldScreenName(0xAE, "Unused"),
			new OverworldScreenName(0xAF, "Unused"),
			new OverworldScreenName(0xB0, "Unused"),
			new OverworldScreenName(0xB1, "Unused"),
			new OverworldScreenName(0xB2, "Unused"),
			new OverworldScreenName(0xB3, "Unused"),
			new OverworldScreenName(0xB4, "Unused"),
			new OverworldScreenName(0xB5, "Garbage overlay"),
			new OverworldScreenName(0xB6, "Unused"),
			new OverworldScreenName(0xB7, "Unused"),
			new OverworldScreenName(0xB8, "Unused"),
			new OverworldScreenName(0xB9, "Unused"),
			new OverworldScreenName(0xBA, "Unused"),
			new OverworldScreenName(0xBB, "Unused"),
			new OverworldScreenName(0xBC, "Unused"),
			new OverworldScreenName(0xBD, "Unused"),
			new OverworldScreenName(0xBE, "Garbage overlay that scrolls"),
			new OverworldScreenName(0xBF, "Unused"),
			new OverworldScreenName(0xC0, "Unused"),
			new OverworldScreenName(0xC1, "Unused"),
			new OverworldScreenName(0xC2, "Unused"),
			new OverworldScreenName(0xC3, "Unused"),
			new OverworldScreenName(0xC4, "Unused"),
			new OverworldScreenName(0xC5, "Unused"),
			new OverworldScreenName(0xC6, "Unused"),
			new OverworldScreenName(0xC7, "Unused"),
			new OverworldScreenName(0xC8, "Unused"),
			new OverworldScreenName(0xC9, "Unused"),
			new OverworldScreenName(0xCA, "Unused"),
			new OverworldScreenName(0xCB, "Unused"),
			new OverworldScreenName(0xCC, "Unused"),
			new OverworldScreenName(0xCD, "Unused"),
			new OverworldScreenName(0xCE, "Unused"),
			new OverworldScreenName(0xCF, "Unused"),
			new OverworldScreenName(0xD0, "Unused"),
			new OverworldScreenName(0xD1, "Unused"),
			new OverworldScreenName(0xD2, "Unused"),
			new OverworldScreenName(0xD3, "Unused"),
			new OverworldScreenName(0xD4, "Unused"),
			new OverworldScreenName(0xD5, "Unused"),
			new OverworldScreenName(0xD6, "Unused"),
			new OverworldScreenName(0xD7, "Unused"),
			new OverworldScreenName(0xD8, "Unused"),
			new OverworldScreenName(0xD9, "Unused"),
			new OverworldScreenName(0xDA, "Unused"),
			new OverworldScreenName(0xDB, "Unused"),
			new OverworldScreenName(0xDC, "Unused"),
			new OverworldScreenName(0xDD, "Unused"),
			new OverworldScreenName(0xDE, "Unused"),
			new OverworldScreenName(0xDF, "Unused"),
			new OverworldScreenName(0xE0, "Unused"),
			new OverworldScreenName(0xE1, "Unused"),
			new OverworldScreenName(0xE2, "Unused"),
			new OverworldScreenName(0xE3, "Unused"),
			new OverworldScreenName(0xE4, "Unused"),
			new OverworldScreenName(0xE5, "Unused"),
			new OverworldScreenName(0xE6, "Unused"),
			new OverworldScreenName(0xE7, "Unused"),
			new OverworldScreenName(0xE8, "Unused"),
			new OverworldScreenName(0xE9, "Unused"),
			new OverworldScreenName(0xEA, "Unused"),
			new OverworldScreenName(0xEB, "Unused"),
			new OverworldScreenName(0xEC, "Unused"),
			new OverworldScreenName(0xED, "Unused"),
			new OverworldScreenName(0xEE, "Unused"),
			new OverworldScreenName(0xEF, "Unused"),
			new OverworldScreenName(0xF0, "Unused"),
			new OverworldScreenName(0xF1, "Unused"),
			new OverworldScreenName(0xF2, "Unused"),
			new OverworldScreenName(0xF3, "Unused"),
			new OverworldScreenName(0xF4, "Unused"),
			new OverworldScreenName(0xF5, "Unused"),
			new OverworldScreenName(0xF6, "Unused"),
			new OverworldScreenName(0xF7, "Unused"),
			new OverworldScreenName(0xF8, "Unused"),
			new OverworldScreenName(0xF9, "Unused"),
			new OverworldScreenName(0xFA, "Unused"),
			new OverworldScreenName(0xFB, "Unused"),
			new OverworldScreenName(0xFC, "Unused"),
			new OverworldScreenName(0xFD, "Unused"),
			new OverworldScreenName(0xFE, "Unused"),
			new OverworldScreenName(0xFF, "Unused"),
		};

		public static readonly RoomName[] ListOfRoomNames =
		{
			new RoomName(0x000, "Ganon fight"),
			new RoomName(0x001, "Hyrule Castle - Back"),
			new RoomName(0x002, "Hyrule Castle - sanctuary back"),
			new RoomName(0x003, "Houlihan room"),
			new RoomName(0x004, "Turtle Rock - Crystaroller"),
			new RoomName(0x005, "Empty room"),
			new RoomName(0x006, "Swamp Palace - Arrghus"),
			new RoomName(0x007, "Tower of Hera - Moldorm"),
			new RoomName(0x008, "Fairy east of Sanctuary - Top"),
			new RoomName(0x009, "Palace of Darkness - Shooter room"),
			new RoomName(0x00A, "Palace of Darkness - Stalfos basement"),
			new RoomName(0x00B, "Palace of Darkness - Monster truck room"),
			new RoomName(0x00C, "Ganon's Tower - Lobby"),
			new RoomName(0x00D, "Ganon's Tower - Agahnim 2"),
			new RoomName(0x00E, "Ice Palace - Entrance"),
			new RoomName(0x00F, "Empty room - Map Null"),
			new RoomName(0x010, "Ganon fight fall"),
			new RoomName(0x011, "Hyrule Castle - End of Sewers"),
			new RoomName(0x012, "Hyrule Castle - Sanctuary"),
			new RoomName(0x013, "Turtle Rock - Pokeys 1"),
			new RoomName(0x014, "Turtle Rock - Lava Pipes"),
			new RoomName(0x015, "Turtle Rock - Cold Pipes"),
			new RoomName(0x016, "Swamp Palace - Current room"),
			new RoomName(0x017, "Tower of Hera - Floor 5"),
			new RoomName(0x018, "Fairy east of Sanctuary - Bottom"),
			new RoomName(0x019, "Palace of Darkness - Dark maze"),
			new RoomName(0x01A, "Palace of Darkness - Falling bridge"),
			new RoomName(0x01B, "Palace of Darkness - Moving wall"),
			new RoomName(0x01C, "Ganon's Tower - Ice Armos"),
			new RoomName(0x01D, "Ganon's Tower - Penultima"),
			new RoomName(0x01E, "Ice Palace - Bombable floor"),
			new RoomName(0x01F, "Ice Palace - Penguin switch"),
			new RoomName(0x020, "Agahnim's Tower - Agahnim"),
			new RoomName(0x021, "Hyrule Castle - Sewers key rat"),
			new RoomName(0x022, "Hyrle Castle - Sewers rat party"),
			new RoomName(0x023, "Turtle Rock - Laser camp entrance"),
			new RoomName(0x024, "Turtle Rock - Big chest"),
			new RoomName(0x025, "Empty room"),
			new RoomName(0x026, "Swamp Palace - Switch statue"),
			new RoomName(0x027, "Tower of Hera - Floor 4"),
			new RoomName(0x028, "Swamp Palace - Lobby"),
			new RoomName(0x029, "Skull Woods - Mothula"),
			new RoomName(0x02A, "Palace of Darkness - Beetle arena"),
			new RoomName(0x02B, "Hookshot cave - Fairies"),
			new RoomName(0x02C, "Palace of Darkness - Sexy statue"),
			new RoomName(0x02D, "Room of Death"),
			new RoomName(0x02E, "Ice Palace - Penguins' chest"),
			new RoomName(0x02F, "Kakariko well"),
			new RoomName(0x030, "Agahnim's Tower - Sacrificial altar"),
			new RoomName(0x031, "Tower of Hera - Floor 3"),
			new RoomName(0x032, "Hyrule Castle - Sewers cross"),
			new RoomName(0x033, "Desert Palace - Lanmolas"),
			new RoomName(0x034, "Swamp Palace - West wing blocks"),
			new RoomName(0x035, "Swamp Palace - West wing flood"),
			new RoomName(0x036, "Swamp Palace - Big chest lobby"),
			new RoomName(0x037, "Swamp Palace - East wing flood"),
			new RoomName(0x038, "Swamp Palace - East wing hall"),
			new RoomName(0x039, "Skull Woods - Fall to boss"),
			new RoomName(0x03A, "Palace of Darkness - Main lobby"),
			new RoomName(0x03B, "Palace of Darkness - Hellway"),
			new RoomName(0x03C, "Hookshot cave - Booty room"),
			new RoomName(0x03D, "Ganon's Tower - Torches 2"),
			new RoomName(0x03E, "Ice Palace - Conveyor room"),
			new RoomName(0x03F, "Ice Palace - HP room"),
			new RoomName(0x040, "Agahnim's Tower - Cat walk"),
			new RoomName(0x041, "Hyrule Castle - Secret Sewers"),
			new RoomName(0x042, "Hyrule Castle - Sewers snake orgy"),
			new RoomName(0x043, "Desert Palace - Moving wall"),
			new RoomName(0x044, "Thieves' Town - Basement conveyors"),
			new RoomName(0x045, "Thieves' Town - Basement prison"),
			new RoomName(0x046, "Swamp Palace - Split O"),
			new RoomName(0x047, "Empty room"),
			new RoomName(0x048, "Empty room"),
			new RoomName(0x049, "Skull Woods - Torches"),
			new RoomName(0x04A, "Palace of Darkness - Entrance"),
			new RoomName(0x04B, "Palace of Darkness - Mimics warp"),
			new RoomName(0x04C, "Ganon's Tower - Bumpy conveyors"),
			new RoomName(0x04D, "Ganon's Tower - Moldorm 2"),
			new RoomName(0x04E, "Ice Palace - IPBJ"),
			new RoomName(0x04F, "Ice Palace - Clone with fairies"),
			new RoomName(0x050, "Hyrule Castle - West wing back"),
			new RoomName(0x051, "Hyrule Castle - Throne room"),
			new RoomName(0x052, "Hyrule Castle - East wing back"),
			new RoomName(0x053, "Desert Palace - Popo genocide"),
			new RoomName(0x054, "Swamp Palace - Pick a hole"),
			new RoomName(0x055, "Hyrule Castle - Secret tunnel"),
			new RoomName(0x056, "Skull Woods - West exit"),
			new RoomName(0x057, "Skull Woods - Statue puzzle"),
			new RoomName(0x058, "Skull Woods - Exploding wall"),
			new RoomName(0x059, "Skull Woods - Bridges"),
			new RoomName(0x05A, "Palace of Darkness - Helmasaur"),
			new RoomName(0x05B, "Ganon's Tower - Spike pegs"),
			new RoomName(0x05C, "Ganon's Tower - Cannon bridge"),
			new RoomName(0x05D, "Ganon's Tower - Gauntlets 1, 2, 3"),
			new RoomName(0x05E, "Ice Palace - Crossroads"),
			new RoomName(0x05F, "Ice Palace - Spiked floor"),
			new RoomName(0x060, "Hyrule Castle - East wing entrance"),
			new RoomName(0x061, "Hyrule Castle - Lobby"),
			new RoomName(0x062, "Hyrule Castle - West wing entrance"),
			new RoomName(0x063, "Desert Palace - Back entrance"),
			new RoomName(0x064, "Thieves' Town - Attic west"),
			new RoomName(0x065, "Thieves' Town - Attic east"),
			new RoomName(0x066, "Swamp Palace - Waterfalls"),
			new RoomName(0x067, "Skull Woods - Firebars"),
			new RoomName(0x068, "Skull Woods - Bumper room"),
			new RoomName(0x069, "Empty room"),
			new RoomName(0x06A, "Palace of Darkness - Dark rupees"),
			new RoomName(0x06B, "Ganon's Tower - Mimics fights"),
			new RoomName(0x06C, "Ganon's Tower - Lanmolas 2"),
			new RoomName(0x06D, "Ganon's Tower - Gauntlets 4, 5"),
			new RoomName(0x06E, "Ice Palace - Penguin lineup"),
			new RoomName(0x06F, "Empty room"),
			new RoomName(0x070, "Hyrule Castle - Prison airlock"),
			new RoomName(0x071, "Hyrule Castle - Guarded chests"),
			new RoomName(0x072, "Hyrule Castle - Basement entrance"),
			new RoomName(0x073, "Desert Palace - Big chest"),
			new RoomName(0x074, "Desert Palace - North hall"),
			new RoomName(0x075, "Desert Palace - Cannon hall"),
			new RoomName(0x076, "Swamp Palace - Drainage rooms"),
			new RoomName(0x077, "Tower of Hera - Lobby"),
			new RoomName(0x078, "Empty room"),
			new RoomName(0x079, "Empty room"),
			new RoomName(0x07A, "Empty room"),
			new RoomName(0x07B, "Ganon's Tower - Conveyor trolls"),
			new RoomName(0x07C, "Ganon's Tower - Falling basement bridge"),
			new RoomName(0x07D, "Ganon's Tower - Warp room A"),
			new RoomName(0x07E, "Ice Palace - Ice hall"),
			new RoomName(0x07F, "Ice Palace - Bari party"),
			new RoomName(0x080, "Hyrule Castle - Basement prison"),
			new RoomName(0x081, "Hyrule Castle - Basement bridge"),
			new RoomName(0x082, "Hyrule Castle - Basement pit"),
			new RoomName(0x083, "Desert Palace - West entrance"),
			new RoomName(0x084, "Desert Palace - Main lobby"),
			new RoomName(0x085, "Desert Palace - East entrance"),
			new RoomName(0x086, "Empty room"),
			new RoomName(0x087, "Tower of Hera - Floor 1"),
			new RoomName(0x088, "Empty room"),
			new RoomName(0x089, "Eastern Palace - Fairies"),
			new RoomName(0x08A, "Empty room"),
			new RoomName(0x08B, "Ganon's Tower - Pit block"),
			new RoomName(0x08C, "Ganon's Tower - Basement junction"),
			new RoomName(0x08D, "Ganon's Tower - Tile room puzzles"),
			new RoomName(0x08E, "Ice Palce - Blob party"),
			new RoomName(0x08F, "Empty room"),
			new RoomName(0x090, "Misery Mire - Vitreous"),
			new RoomName(0x091, "Misery Mire - Basement blobs"),
			new RoomName(0x092, "Misery Mire - Dark room pegs"),
			new RoomName(0x093, "Misery Mire - Dark room shooters"),
			new RoomName(0x094, "Empty room"),
			new RoomName(0x095, "Ganon's Tower - Falling guard bridge"),
			new RoomName(0x096, "Ganon's Tower - Torches 1"),
			new RoomName(0x097, "Mirey Mire - Moving wall"),
			new RoomName(0x098, "Misery Mire - Entrance"),
			new RoomName(0x099, "Eastern Palace - Dark eyegores"),
			new RoomName(0x09A, "Empty room"),
			new RoomName(0x09B, "Ganon's Tower - Warp room B"),
			new RoomName(0x09C, "Ganon's Tower - Invisible maze"),
			new RoomName(0x09D, "Ganon's Tower - E"),
			new RoomName(0x09E, "Ice Palace - Puzzle junction"),
			new RoomName(0x09F, "Ice Palace - Pottery hunt"),
			new RoomName(0x0A0, "Misery Mire - Penultima"),
			new RoomName(0x0A1, "Misery Mire - Fish room"),
			new RoomName(0x0A2, "Miser Mire - Bridges"),
			new RoomName(0x0A3, "Misery Mire - Waluigi bridge"),
			new RoomName(0x0A4, "Turtle Rock - Trinexx"),
			new RoomName(0x0A5, "Ganon's Tower - Wizzrobe fights"),
			new RoomName(0x0A6, "Ganon's Tower - Moldorm fall"),
			new RoomName(0x0A7, "Tower of Hera - Fairies"),
			new RoomName(0x0A8, "Eastern Palace - Stalfos room"),
			new RoomName(0x0A9, "Eastern Palace - Big chest"),
			new RoomName(0x0AA, "Eastern Palace - East hall"),
			new RoomName(0x0AB, "Thieves' Town - Spike room"),
			new RoomName(0x0AC, "Thieves' Town - Blind"),
			new RoomName(0x0AD, "Empty room"),
			new RoomName(0x0AE, "Ice Palace - Iced T"),
			new RoomName(0x0AF, "Ice Palace - Shittiest room"),
			new RoomName(0x0B0, "Agahnim's Tower - Circle of pots"),
			new RoomName(0x0B1, "Misery Mire - Hourglass"),
			new RoomName(0x0B2, "Misery Mire - Sluggula junction"),
			new RoomName(0x0B3, "Misery Mire - Spike chest"),
			new RoomName(0x0B4, "Turtle Rock - End of the line"),
			new RoomName(0x0B5, "Turtle Rock - Dark maze"),
			new RoomName(0x0B6, "Turtle Rock - Chomps"),
			new RoomName(0x0B7, "Turtle Rock - Roller chests"),
			new RoomName(0x0B8, "Eastern Palace - Antifairy chest"),
			new RoomName(0x0B9, "Eastern Palace - Cannon hall"),
			new RoomName(0x0BA, "Eastern Palace - Dark switch"),
			new RoomName(0x0BB, "Thieves' Town - Hellway"),
			new RoomName(0x0BC, "Thieves' Town - Toilet"),
			new RoomName(0x0BD, "Empty room"),
			new RoomName(0x0BE, "Ice Palace - Block switch"),
			new RoomName(0x0BF, "Ice Palace - Clone with switch"),
			new RoomName(0x0C0, "Agahnim's Tower - Dark pits"),
			new RoomName(0x0C1, "Misery Mire - Tile room"),
			new RoomName(0x0C2, "Misery Mire - Main lobby"),
			new RoomName(0x0C3, "Misery Mire - Falling bridge"),
			new RoomName(0x0C4, "Turtle Rock - Peg puzzle"),
			new RoomName(0x0C5, "Turtle Rock - Laser strip"),
			new RoomName(0x0C6, "Turtle Rock - Main lobby"),
			new RoomName(0x0C7, "Turtle Rock - Torch puzzle"),
			new RoomName(0x0C8, "Eastern Palace - Armos Knights"),
			new RoomName(0x0C9, "Eastern Palace - Entrance"),
			new RoomName(0x0CA, "Debug room"),
			new RoomName(0x0CB, "Thieves' Town - Northwest lobby"),
			new RoomName(0x0CC, "Thieves' Town - Northeast lobby"),
			new RoomName(0x0CD, "Empty room"),
			new RoomName(0x0CE, "Ice Palace - Fall to boss"),
			new RoomName(0x0CF, "Empty room"),
			new RoomName(0x0D0, "Agahnim's Tower - Dark maze"),
			new RoomName(0x0D1, "Misery Mire - Wall puzzle weekends"),
			new RoomName(0x0D2, "Misery Mire - Entry gauntlet"),
			new RoomName(0x0D3, "Empty room"),
			new RoomName(0x0D4, "Empty room"),
			new RoomName(0x0D5, "Turtle Rock - Laser bridge"),
			new RoomName(0x0D6, "Turtle Rock - Entrance"),
			new RoomName(0x0D7, "Empty room"),
			new RoomName(0x0D8, "Eastern Palace - Gauntlet"),
			new RoomName(0x0D9, "Eastern Palace - Cannon room"),
			new RoomName(0x0DA, "Eastern Palace - Upstairs antifairies"),
			new RoomName(0x0DB, "Thieves' Town - Southwest lobby"),
			new RoomName(0x0DC, "Thieves' Town - Southeast lobby"),
			new RoomName(0x0DD, "Empty room"),
			new RoomName(0x0DE, "Ice Palace - Kholdstare"),
			new RoomName(0x0DF, "Paradox Cave - Summit exit"),
			new RoomName(0x0E0, "Agahnim's Tower - Entrance"),
			new RoomName(0x0E1, "Lost Woods cave"),
			new RoomName(0x0E2, "Lumberjack Bumpkins' cave"),
			new RoomName(0x0E3, "Magic bat cave"),
			new RoomName(0x0E4, "Old Man's house cave"),
			new RoomName(0x0E5, "Old Man's house cave east"),
			new RoomName(0x0E6, "Death Mountain Descent - West"),
			new RoomName(0x0E7, "Death Mountain Descent - East"),
			new RoomName(0x0E8, "Superbunny cave - Top"),
			new RoomName(0x0E9, "Empty room"),
			new RoomName(0x0EA, "Spectacle Rock cave - Top"),
			new RoomName(0x0EB, "Bumper cave - Top"),
			new RoomName(0x0EC, "Empty room"),
			new RoomName(0x0ED, "Death Mountain fairy cave - Top"),
			new RoomName(0x0EE, "Spiral cave - top"),
			new RoomName(0x0EF, "Paradox cave - Moldorm chests"),
			new RoomName(0x0F0, "Lost Old Man's cave - West"),
			new RoomName(0x0F1, "Lost Old Man's cave - East"),
			new RoomName(0x0F2, "Sahasrahla's house - West"),
			new RoomName(0x0F3, "Sahasrahla's house - East"),
			new RoomName(0x0F4, "Feuding brothers - West"),
			new RoomName(0x0F5, "Feuding brothers - East"),
			new RoomName(0x0F6, "Empty room"),
			new RoomName(0x0F7, "Empty room"),
			new RoomName(0x0F8, "Superbunny cave - Bottom"),
			new RoomName(0x0F9, "Spectacle Rock cave - Bottom, west"),
			new RoomName(0x0FA, "Spectacle Rock cave - Bottom, East"),
			new RoomName(0x0FB, "Bumper cave - Bottom"),
			new RoomName(0x0FC, "Empty room"),
			new RoomName(0x0FD, "Death Mountain fairy cave - Bottom"),
			new RoomName(0x0FE, "Spiral cave - Bottom"),
			new RoomName(0x0FF, "Paradox cave - Shop"),
			new RoomName(0x100, "Boring chest game"),
			new RoomName(0x101, "Kakariko houses"),
			new RoomName(0x102, "Sick kid's house"),
			new RoomName(0x103, "Kakariko hospitality facilities"),
			new RoomName(0x104, "Link's house"),
			new RoomName(0x105, "Sahasrahlah's hideout"),
			new RoomName(0x106, "Fun chest game"),
			new RoomName(0x107, "Library and secret pots"),
			new RoomName(0x108, "Chicken hut"),
			new RoomName(0x109, "Potion shop"),
			new RoomName(0x10A, "Aginah's hideout"),
			new RoomName(0x10B, "Dam control room"),
			new RoomName(0x10C, "Mimic cave"),
			new RoomName(0x10D, "Mire shed"),
			new RoomName(0x10E, "Two hints"),
			new RoomName(0x10F, "Dark World shop"),
			new RoomName(0x110, "Dark World shop"),
			new RoomName(0x111, "Arrow game"),
			new RoomName(0x112, "Dark sanc and shop"),
			new RoomName(0x113, "King's tomb"),
			new RoomName(0x114, "Waterfall fairy and Watto"),
			new RoomName(0x115, "Pond of Happiness"),
			new RoomName(0x116, "Fat Fairy"),
			new RoomName(0x117, "Spike Cave"),
			new RoomName(0x118, "Unfun chest game"),
			new RoomName(0x119, "Blind's hideout - Upstairs"),
			new RoomName(0x11A, "Broccoli's hideout"),
			new RoomName(0x11B, "Grove and Grave caves"),
			new RoomName(0x11C, "Bomb shop and C-house"),
			new RoomName(0x11D, "Blind's hideout - Basement"),
			new RoomName(0x11E, "Fairies and Thief cave"),
			new RoomName(0x11F, "Not notable shop"),
			new RoomName(0x120, "Ice cave"),
			new RoomName(0x121, "Dwarven smithery"),
			new RoomName(0x122, "Fortune Tellers x2"),
			new RoomName(0x123, "Mini moldorm cave"),
			new RoomName(0x124, "Rich pots and Bonk rocks"),
			new RoomName(0x125, "Small rupee cache and Mini spike cave"),
			new RoomName(0x126, "Big fairy and Checkerboard cave"),
			new RoomName(0x127, "Stake puzzle and unused spike cave"),
		};

		public static readonly SpriteName[] ListOfSprites =
		{
			new SpriteName(0x00, "Raven"),
			new SpriteName(0x01, "Vulture"),
			new SpriteName(0x02, "Stalfos head"),
			new SpriteName(0x03, "Null"),
			new SpriteName(0x04, "Correct pull switch"),
			new SpriteName(0x05, "Correct pull switch (unused)"),
			new SpriteName(0x06, "Wrong pull switch"),
			new SpriteName(0x07, "Wrong pull switch (unused)"),
			new SpriteName(0x08, "Octorok"),
			new SpriteName(0x09, "Moldorm"),
			new SpriteName(0x0A, "Octorok (4-way)"),
			new SpriteName(0x0B, "Cucco"),
			new SpriteName(0x0C, "Octorok stone"),
			new SpriteName(0x0D, "Buzzblob"),
			new SpriteName(0x0E, "Snapdragon"),
			new SpriteName(0x0F, "Octoballoon"),
			new SpriteName(0x10, "Octobaby"),
			new SpriteName(0x11, "Hinox"),
			new SpriteName(0x12, "Moblin"),
			new SpriteName(0x13, "Mini helmasaur"),
			new SpriteName(0x14, "Thieves' Town grate"),
			new SpriteName(0x15, "Antifairy"),
			new SpriteName(0x16, "Sahasrahla / Aginah"),
			new SpriteName(0x17, "Hoarder"),
			new SpriteName(0x18, "Mini moldorm"),
			new SpriteName(0x19, "Poe"),
			new SpriteName(0x1A, "Smithy"),
			new SpriteName(0x1B, "Arrow"),
			new SpriteName(0x1C, "Statue"),
			new SpriteName(0x1D, "Flute quest"),
			new SpriteName(0x1E, "Crystal switch"),
			new SpriteName(0x1F, "Sick kid"),
			new SpriteName(0x20, "Sluggula"),
			new SpriteName(0x21, "Water switch"),
			new SpriteName(0x22, "Ropa"),
			new SpriteName(0x23, "Red bari"),
			new SpriteName(0x24, "Blue bari"),
			new SpriteName(0x25, "Talking tree"),
			new SpriteName(0x26, "Hardhat beetle"),
			new SpriteName(0x27, "Deadrock"),
			new SpriteName(0x28, "Dark World hint"),
			new SpriteName(0x29, "Adult"),
			new SpriteName(0x2A, "Sweeping lady"),
			new SpriteName(0x2B, "Hobo"),
			new SpriteName(0x2C, "Lumberjacks"),
			new SpriteName(0x2D, "Telepathic tile (unused)"),
			new SpriteName(0x2E, "Flute kid"),
			new SpriteName(0x2F, "Race game lady"),
			new SpriteName(0x30, "Race game guy"),
			new SpriteName(0x31, "Fortune teller"),
			new SpriteName(0x32, "Argue bros"),
			new SpriteName(0x33, "Rupee pull"),
			new SpriteName(0x34, "Young snitch"),
			new SpriteName(0x35, "Innkeeper"),
			new SpriteName(0x36, "Witch"),
			new SpriteName(0x37, "Waterfall"),
			new SpriteName(0x38, "Eye statue"),
			new SpriteName(0x39, "Locksmith"),
			new SpriteName(0x3A, "Magic bat"),
			new SpriteName(0x3B, "Bonk item"),
			new SpriteName(0x3C, "Child"),
			new SpriteName(0x3D, "Old snitch"),
			new SpriteName(0x3E, "Hoarder"),
			new SpriteName(0x3F, "Tutorial guard"),
			new SpriteName(0x40, "Lightning gate"),
			new SpriteName(0x41, "Blue guard"),
			new SpriteName(0x42, "Green guard"),
			new SpriteName(0x43, "Red spear guard"),
			new SpriteName(0x44, "Charging blue guard"),
			new SpriteName(0x45, "Charging red guard"),
			new SpriteName(0x46, "Blue archer"),
			new SpriteName(0x47, "Green bush guard"),
			new SpriteName(0x48, "Red javelin guard"),
			new SpriteName(0x49, "Red bush guard"),
			new SpriteName(0x4A, "Bomb guard"),
			new SpriteName(0x4B, "Green knife guard"),
			new SpriteName(0x4C, "Geldman"),
			new SpriteName(0x4D, "Toppo"),
			new SpriteName(0x4E, "Popo"),
			new SpriteName(0x4F, "Popo"),
			new SpriteName(0x50, "Cannonball"),
			new SpriteName(0x51, "Armos statue"),
			new SpriteName(0x52, "King Zora"),
			new SpriteName(0x53, "Armos Knight"),
			new SpriteName(0x54, "Lanmolas"),
			new SpriteName(0x55, "Zora (fire ball)"),
			new SpriteName(0x56, "Zora"),
			new SpriteName(0x57, "Desert statue"),
			new SpriteName(0x58, "Crab"),
			new SpriteName(0x59, "Lost woods bird"),
			new SpriteName(0x5A, "Lost woods squirrel"),
			new SpriteName(0x5B, "Spark (clockwise)"),
			new SpriteName(0x5C, "Spark (counterclockwise)"),
			new SpriteName(0x5D, "Roller (vertical, down)"),
			new SpriteName(0x5E, "Roller (vertical, up)"),
			new SpriteName(0x5F, "Roller (horizontal, right)"),
			new SpriteName(0x60, "Roller (horizontal, left)"),
			new SpriteName(0x61, "Beamos"),
			new SpriteName(0x62, "Mastersword"),
			new SpriteName(0x63, "Debirando"),
			new SpriteName(0x64, "Debirando"),
			new SpriteName(0x65, "Archery guy"),
			new SpriteName(0x66, "Wall cannon (vertical, left)"),
			new SpriteName(0x67, "Wall cannon (vertical, right)"),
			new SpriteName(0x68, "Wall cannon (horizontal, top)"),
			new SpriteName(0x69, "Wall cannon (horizontal, bottom)"),
			new SpriteName(0x6A, "Ball n chain"),
			new SpriteName(0x6B, "Cannon guard"),
			new SpriteName(0x6C, "Mirror portal"),
			new SpriteName(0x6D, "Rat / cricket"),
			new SpriteName(0x6E, "Snake"),
			new SpriteName(0x6F, "Keese"),
			new SpriteName(0x70, "King Helmasaur fireball"),
			new SpriteName(0x71, "Leever"),
			new SpriteName(0x72, "Faerie pond trigger"),
			new SpriteName(0x73, "Uncle / Priest"),
			new SpriteName(0x74, "Running man"),
			new SpriteName(0x75, "Bottle merchant"),
			new SpriteName(0x76, "Zelda"),
			new SpriteName(0x77, "Antifairy"),
			new SpriteName(0x78, "Sahasrahla's wife"),
			new SpriteName(0x79, "Bee"),
			new SpriteName(0x7A, "Agahnim"),
			new SpriteName(0x7B, "Agahnim's balls"),
			new SpriteName(0x7C, "Green stalfos"),
			new SpriteName(0x7D, "Big spike"),
			new SpriteName(0x7E, "Firebar (clockwise)"),
			new SpriteName(0x7F, "Firebar (counterclockwise)"),
			new SpriteName(0x80, "Firesnake"),
			new SpriteName(0x81, "Hover"),
			new SpriteName(0x82, "Antifairy circle"),
			new SpriteName(0x83, "Green eyegore/mimic"),
			new SpriteName(0x84, "Red eyegore/mimic"),
			new SpriteName(0x85, "Yellow stalfos"),
			new SpriteName(0x86, "Kodongo"),
			new SpriteName(0x87, "Kondongo fire"),
			new SpriteName(0x88, "Mothula"),
			new SpriteName(0x89, "Mothula beam"),
			new SpriteName(0x8A, "Spike block"),
			new SpriteName(0x8B, "Gibdo"),
			new SpriteName(0x8C, "Arrghus"),
			new SpriteName(0x8D, "Arrghi"),
			new SpriteName(0x8E, "Terrorpin"),
			new SpriteName(0x8F, "Blob"),
			new SpriteName(0x90, "Wallmaster"),
			new SpriteName(0x91, "Stalfos knight"),
			new SpriteName(0x92, "King Helmasaur"),
			new SpriteName(0x93, "Bumper"),
			new SpriteName(0x94, "Pirogusu"),
			new SpriteName(0x95, "Laser eye (left)"),
			new SpriteName(0x96, "Laser eye (right)"),
			new SpriteName(0x97, "Laser eye (top)"),
			new SpriteName(0x98, "Laser eye (bottom)"),
			new SpriteName(0x99, "Pengator"),
			new SpriteName(0x9A, "Kyameron"),
			new SpriteName(0x9B, "Wizzrobe"),
			new SpriteName(0x9C, "Zoro"),
			new SpriteName(0x9D, "Babasu"),
			new SpriteName(0x9E, "Haunted grove ostritch"),
			new SpriteName(0x9F, "Haunted grove rabbit"),
			new SpriteName(0xA0, "Haunted grove bird"),
			new SpriteName(0xA1, "Freezor"),
			new SpriteName(0xA2, "Kholdstare"),
			new SpriteName(0xA3, "Kholdstare's shell"),
			new SpriteName(0xA4, "Falling ice"),
			new SpriteName(0xA5, "Blue zazak"),
			new SpriteName(0xA6, "Red zazak"),
			new SpriteName(0xA7, "Stalfos"),
			new SpriteName(0xA8, "Green zirro"),
			new SpriteName(0xA9, "Blue zirro"),
			new SpriteName(0xAA, "Pikit"),
			new SpriteName(0xAB, "Crystal maiden"),
			new SpriteName(0xAC, "Apple"),
			new SpriteName(0xAD, "Old man"),
			new SpriteName(0xAE, "Pipe (down)"),
			new SpriteName(0xAF, "Pipe (up)"),
			new SpriteName(0xB0, "Pipe (right)"),
			new SpriteName(0xB1, "Pipe (left)"),
			new SpriteName(0xB2, "Good bee"),
			new SpriteName(0xB3, "Pedestal plaque"),
			new SpriteName(0xB4, "Purple chest"),
			new SpriteName(0xB5, "Bomb shop guy"),
			new SpriteName(0xB6, "Kiki"),
			new SpriteName(0xB7, "Blind maiden"),
			new SpriteName(0xB8, "Dialogue tester"),
			new SpriteName(0xB9, "Bully / pink ball"),
			new SpriteName(0xBA, "Whirlpool"),
			new SpriteName(0xBB, "Shopkeeper"),
			new SpriteName(0xBC, "Drunkard"),
			new SpriteName(0xBD, "Vitreous"),
			new SpriteName(0xBE, "Vitreous small eye"),
			new SpriteName(0xBF, "Lightning"),
			new SpriteName(0xC0, "Catfish"),
			new SpriteName(0xC1, "Cutscene Agahnim"),
			new SpriteName(0xC2, "Boulder"),
			new SpriteName(0xC3, "Gibo"),
			new SpriteName(0xC4, "Thief"),
			new SpriteName(0xC5, "Medusa"),
			new SpriteName(0xC6, "4-way shooter"),
			new SpriteName(0xC7, "Pokey"),
			new SpriteName(0xC8, "Big faerie"),
			new SpriteName(0xC9, "Tektite"),
			new SpriteName(0xCA, "Chain chomp"),
			new SpriteName(0xCB, "Trinexx rock head"),
			new SpriteName(0xCC, "Trinexx fire head"),
			new SpriteName(0xCD, "Trinexx ice head"),
			new SpriteName(0xCE, "Blind"),
			new SpriteName(0xCF, "Swamola"),
			new SpriteName(0xD0, "Lynel"),
			new SpriteName(0xD1, "Bunnybeam (UW) / Smoke (OW)"),
			new SpriteName(0xD2, "Flopping fish"),
			new SpriteName(0xD3, "Stal"),
			new SpriteName(0xD4, "Landmine"),
			new SpriteName(0xD5, "Dig game guy"),
			new SpriteName(0xD6, "Ganon"),
			new SpriteName(0xD7, "Ganon"),
			new SpriteName(0xD8, "Heart"),
			new SpriteName(0xD9, "Green rupee"),
			new SpriteName(0xDA, "Blue rupee"),
			new SpriteName(0xDB, "Red rupee"),
			new SpriteName(0xDC, "Bomb refill (1)"),
			new SpriteName(0xDD, "Bomb refill (4)"),
			new SpriteName(0xDE, "Bomb refill (8)"),
			new SpriteName(0xDF, "Small magic decanter"),
			new SpriteName(0xE0, "Large magic decanter"),
			new SpriteName(0xE1, "Arrow refill (5)"),
			new SpriteName(0xE2, "Arrow refill (10)"),
			new SpriteName(0xE3, "Faerie"),
			new SpriteName(0xE4, "Small key"),
			new SpriteName(0xE5, "Big key"),
			new SpriteName(0xE6, "Stolen shield"),
			new SpriteName(0xE7, "Mushroom"),
			new SpriteName(0xE8, "Fake master sword"),
			new SpriteName(0xE9, "Magic shop assistant"),
			new SpriteName(0xEA, "Heart container"),
			new SpriteName(0xEB, "Heart piece"),
			new SpriteName(0xEC, "Thrown item"),
			new SpriteName(0xED, "Somaria platform"),
			new SpriteName(0xEE, "Castle mantle"),
			new SpriteName(0xEF, "Somaria platform (unused)"),
			new SpriteName(0xF0, "Somaria platform (unused)"),
			new SpriteName(0xF1, "Somaria platform (unused)"),
			new SpriteName(0xF2, "Medallion tablet"),
			new SpriteName(0xF3, "Position target (OW)"),
			new SpriteName(0xF4, "Boulders (OW)")
		};

		public static readonly ItemReceiptName[] ListOfItemReceipts =
		{
			new ItemReceiptName(0x00, "Fighter sword"),
			new ItemReceiptName(0x01, "Master sword"),
			new ItemReceiptName(0x02, "Tempered sword"),
			new ItemReceiptName(0x03, "Butter sword"),
			new ItemReceiptName(0x04, "Fighter shield"),
			new ItemReceiptName(0x05, "Fire shield"),
			new ItemReceiptName(0x06, "Mirror shield"),
			new ItemReceiptName(0x07, "Fire rod"),
			new ItemReceiptName(0x08, "Ice rod"),
			new ItemReceiptName(0x09, "Hammer"),
			new ItemReceiptName(0x0A, "Hookshot"),
			new ItemReceiptName(0x0B, "Bow"),
			new ItemReceiptName(0x0C, "Boomerang"),
			new ItemReceiptName(0x0D, "Powder"),
			new ItemReceiptName(0x0E, "Bottle refill (bee)"),
			new ItemReceiptName(0x0F, "Bombos"),
			new ItemReceiptName(0x10, "Ether"),
			new ItemReceiptName(0x11, "Quake"),
			new ItemReceiptName(0x12, "Lamp"),
			new ItemReceiptName(0x13, "Shovel"),
			new ItemReceiptName(0x14, "Flute"),
			new ItemReceiptName(0x15, "Somaria"),
			new ItemReceiptName(0x16, "Bottle"),
			new ItemReceiptName(0x17, "Heart piece"),
			new ItemReceiptName(0x18, "Byrna"),
			new ItemReceiptName(0x19, "Cape"),
			new ItemReceiptName(0x1A, "Mirror"),
			new ItemReceiptName(0x1B, "Glove"),
			new ItemReceiptName(0x1C, "Mitts"),
			new ItemReceiptName(0x1D, "Book"),
			new ItemReceiptName(0x1E, "Flippers"),
			new ItemReceiptName(0x1F, "Pearl"),
			new ItemReceiptName(0x20, "Crystal"),
			new ItemReceiptName(0x21, "Net"),
			new ItemReceiptName(0x22, "Blue mail"),
			new ItemReceiptName(0x23, "Red mail"),
			new ItemReceiptName(0x24, "Small key"),
			new ItemReceiptName(0x25, "Compass"),
			new ItemReceiptName(0x26, "Heart container from 4/4"),
			new ItemReceiptName(0x27, "Bomb"),
			new ItemReceiptName(0x28, "3 Bombs"),
			new ItemReceiptName(0x29, "Mushroom"),
			new ItemReceiptName(0x2A, "Red boomerang"),
			new ItemReceiptName(0x2B, "Full bottle (red)"),
			new ItemReceiptName(0x2C, "Full bottle (green)"),
			new ItemReceiptName(0x2D, "Full bottle (blue)"),
			new ItemReceiptName(0x2E, "Potion refill (red)"),
			new ItemReceiptName(0x2F, "Potion refill (green)"),
			new ItemReceiptName(0x30, "Potion refill (blue)"),
			new ItemReceiptName(0x31, "10 Bombs"),
			new ItemReceiptName(0x32, "Big key"),
			new ItemReceiptName(0x33, "Map"),
			new ItemReceiptName(0x34, "1 Rupee"),
			new ItemReceiptName(0x35, "5 Rupees"),
			new ItemReceiptName(0x36, "20 Rupees"),
			new ItemReceiptName(0x37, "Green pendant"),
			new ItemReceiptName(0x38, "Blue pendant"),
			new ItemReceiptName(0x39, "Red pendant"),
			new ItemReceiptName(0x3A, "Tossed bow"),
			new ItemReceiptName(0x3B, "Silvers"),
			new ItemReceiptName(0x3C, "Full bottle (bee)"),
			new ItemReceiptName(0x3D, "Full bottle (fairy)"),
			new ItemReceiptName(0x3E, "Boss hc"),
			new ItemReceiptName(0x3F, "Sanc hc"),
			new ItemReceiptName(0x40, "100 Rupees"),
			new ItemReceiptName(0x41, "50 Rupees"),
			new ItemReceiptName(0x42, "Heart"),
			new ItemReceiptName(0x43, "Arrow"),
			new ItemReceiptName(0x44, "10 Arrows"),
			new ItemReceiptName(0x45, "Small magic"),
			new ItemReceiptName(0x46, "300 Rupees"),
			new ItemReceiptName(0x47, "20 Rupees green"),
			new ItemReceiptName(0x48, "Full bottle (good bee)"),
			new ItemReceiptName(0x49, "Tossed fighter sword"),
			new ItemReceiptName(0x4A, "Bottle refill (good bee)"),
			new ItemReceiptName(0x4B, "Boots"),

			//"Max Bombs(VT)",
			//"Max Arrows(VT)",
			//"Half Magic(VT)",
			//"Quarter Magic(VT)",
			//"L2 master Sword (VT)",
			//"+5 max bombs(VT)",
			//"+10 max bombs(VT)",
			//"+5 max arrows(VT)",
			//"+10 max arrows(VT)",
			//"Trap1(VT)",
			//"Trap2(VT)",
			//"Trap3(VT)",
			//"Silver Arrows(VT)",
			//"Rupoor(VT)",
			//"Null Item?(VT)",
			//"Red Clock(VT)",
			//"Blue Clock(VT)",
			//"Green Clock(VT)",
			//"Progressive Sword(VT)",
			//"Progressive Shield(VT)",
			//"Progressive Armor(VT)",
			//"Progressive Lifting Glove(VT)",
			//"RNG Pool Item (Single)(VT)",
			//"RNG Pool Item (Multi)(VT)" ,// 99
            //"","","","","","","",
			//"Goal Item (Single/Triforce)(VT)", //
            //"Goal Item (Multi/Power Star)(VT)", // 6B
            //"","","",
			//"Escape Map(VT)",
			//"Hyrule Castle Map(VT)",
			//"Eastern Map(VT)",
			//"Desert Map",
			//"Hyrule Castle2 Map(VT)",
			//"Swamp Map(VT)",
			//"Dark Map(VT)",
			//"Mire Map(VT)",
			//"Skull Map(VT)",
			//"Ice Map(VT)",
			//"Hera Map(VT)",
			//"Thieve Map(VT)",
			//"Turtle Map(VT)",
			//"GanonTower Map(VT)",
			//"??? Map(VT)",
			//"??? Map(VT)",
			//"Escape Compass(VT)",
			//"Hyrule Castle Compass(VT)",
			//"Eastern Compass(VT)",
			//"Desert Compass(VT)",
			//"Hyrule Castle2 Compass(VT)",
			//"Swamp Compass(VT)",
			//"Dark Compass(VT)",
			//"Mire Compass(VT)",
			//"Skull Compass(VT)",
			//"Ice Compass(VT)",
			//"Hera Compass(VT)",
			//"Thieve Compass(VT)",
			//"Turtle Compass(VT)",
			//"GanonTower Compass(VT)",
			//"??? Compass(VT)",
			//"??? Compass(VT)",
			//"Escape Big Key(VT)",
			//"Hyrule Castle Big Key(VT)",
			//"Eastern Big Key(VT)",
			//"Desert Big Key(VT)",
			//"Hyrule Castle2 Big Key(VT)",
			//"Swamp Big Key(VT)",
			//"Dark Big Key(VT)",
			//"Mire Big Key(VT)",
			//"Skull Big Key(VT)",
			//"Ice Big Key(VT)",
			//"Hera Big Key(VT)",
			//"Thieve Big Key(VT)",
			//"Turtle Big Key(VT)",
			//"GanonTower Big Key(VT)",
			//"??? Big Key(VT)",
			//"??? Big Key(VT)",
			//"Escape Key(VT)",
			//"Hyrule Castle Key(VT)",
			//"Eastern Key(VT)",
			//"Desert Key(VT)",
			//"Hyrule Castle2 Key(VT)",
			//"Swamp Key(VT)",
			//"Dark Key(VT)",
			//"Mire Key(VT)",
			//"Skull Key(VT)",
			//"Ice Key(VT)",
			//"Hera Key(VT)",
			//"Thieve Key(VT)",
			//"Turtle Key(VT)",
			//"GanonTower Key(VT)",
			//"??? Key(VT)",
			//"??? Key(VT)"
		};

		// TODO rename everything
		public static readonly RoomTagName[] ListOfRoomTags =
		{
			new RoomTagName(0x00, "Nothing"),
			new RoomTagName(0x01, "NW Kill Enemy to Open"),
			new RoomTagName(0x02, "NE Kill Enemy to Open"),
			new RoomTagName(0x03, "SW Kill Enemy to Open"),
			new RoomTagName(0x04, "SE Kill Enemy to Open"),
			new RoomTagName(0x05, "W Kill Enemy to Open"),
			new RoomTagName(0x06, "E Kill Enemy to Open"),
			new RoomTagName(0x07, "N Kill Enemy to Open"),
			new RoomTagName(0x08, "S Kill Enemy to Open"),
			new RoomTagName(0x09, "Clear Quadrant to Open"),
			new RoomTagName(0x0A, "Clear Full Tile to Open"),
			new RoomTagName(0x0B, "NW Push Block to Open"),
			new RoomTagName(0x0C, "NE Push Block to Open"),
			new RoomTagName(0x0D, "SW Push Block to Open"),
			new RoomTagName(0x0E, "SE Push Block to Open"),
			new RoomTagName(0x0F, "W Push Block to Open"),
			new RoomTagName(0x10, "E Push Block to Open"),
			new RoomTagName(0x11, "N Push Block to Open"),
			new RoomTagName(0x12, "S Push Block to Open"),
			new RoomTagName(0x13, "Push Block to Open"),
			new RoomTagName(0x14, "Pull Lever to Open"),
			new RoomTagName(0x15, "Collect Prize to Open"),
			new RoomTagName(0x16, "Hold Switch Open Door"),
			new RoomTagName(0x17, "Toggle Switch to Open Door"),
			new RoomTagName(0x18, "Turn off Water"),
			new RoomTagName(0x19, "Turn on Water"),
			new RoomTagName(0x1A, "Water Gate"),
			new RoomTagName(0x1B, "Water Twin"),
			new RoomTagName(0x1C, "Moving Wall Right"),
			new RoomTagName(0x1D, "Moving Wall Left"),
			new RoomTagName(0x1E, "Crash"),
			new RoomTagName(0x1F, "Crash"),
			new RoomTagName(0x20, "Push Switch Exploding Wall"),
			new RoomTagName(0x21, "Holes 0"),
			new RoomTagName(0x22, "Open Chest (Holes 0)"),
			new RoomTagName(0x23, "Holes 1"),
			new RoomTagName(0x24, "Holes 2"),
			new RoomTagName(0x25, "Defeat Boss for Dungeon Prize"),
			new RoomTagName(0x26, "SE Kill Enemy to Push Block"),
			new RoomTagName(0x27, "Trigger Switch Chest"),
			new RoomTagName(0x28, "Pull Lever Exploding Wall"),
			new RoomTagName(0x29, "NW Kill Enemy for Chest"),
			new RoomTagName(0x2A, "NE Kill Enemy for Chest"),
			new RoomTagName(0x2B, "SW Kill Enemy for Chest"),
			new RoomTagName(0x2C, "SE Kill Enemy for Chest"),
			new RoomTagName(0x2D, "W Kill Enemy for Chest"),
			new RoomTagName(0x2E, "E Kill Enemy for Chest"),
			new RoomTagName(0x2F, "N Kill Enemy for Chest"),
			new RoomTagName(0x30, "S Kill Enemy for Chest"),
			new RoomTagName(0x31, "Clear Quadrant for Chest"),
			new RoomTagName(0x32, "Clear Full Tile for Chest"),
			new RoomTagName(0x33, "Light Torches to Open"),
			new RoomTagName(0x34, "Holes 3"),
			new RoomTagName(0x35, "Holes 4"),
			new RoomTagName(0x36, "Holes 5"),
			new RoomTagName(0x37, "Holes 6"),
			new RoomTagName(0x38, "Agahnim Room"),
			new RoomTagName(0x39, "Holes 7"),
			new RoomTagName(0x3A, "Holes 8"),
			new RoomTagName(0x3B, "Open Chest for Holes 8"),
			new RoomTagName(0x3C, "Push Block for Chest"),
			new RoomTagName(0x3D, "Clear Room for Triforce Door"),
			new RoomTagName(0x3E, "Light Torches for Chest"),
			new RoomTagName(0x3F, "Kill Boss Again")
		};

		public static readonly RoomObjectName[] ListOfSubtype1RoomObjects =
		{
			new RoomObjectName(0x000, "Ceiling ↔"),
			new RoomObjectName(0x001, "Wall (top, north) ↔"),
			new RoomObjectName(0x002, "Wall (top, south) ↔"),
			new RoomObjectName(0x003, "Wall (bottom, north) ↔"),
			new RoomObjectName(0x004, "Wall (bottom, south) ↔"),
			new RoomObjectName(0x005, "Wall columns (north) ↔"),
			new RoomObjectName(0x006, "Wall columns (south) ↔"),
			new RoomObjectName(0x007, "Deep wall (north) ↔"),
			new RoomObjectName(0x008, "Deep wall (south) ↔"),
			new RoomObjectName(0x009, "Diagonal wall A ◤ (top) ↔"),
			new RoomObjectName(0x00A, "Diagonal wall A ◣ (top) ↔"),
			new RoomObjectName(0x00B, "Diagonal wall A ◥ (top) ↔"),
			new RoomObjectName(0x00C, "Diagonal wall A ◢ (top) ↔"),
			new RoomObjectName(0x00D, "Diagonal wall B ◤ (top) ↔"),
			new RoomObjectName(0x00E, "Diagonal wall B ◣ (top) ↔"),
			new RoomObjectName(0x00F, "Diagonal wall B ◥ (top) ↔"),
			new RoomObjectName(0x010, "Diagonal wall B ◢ (top) ↔"),
			new RoomObjectName(0x011, "Diagonal wall C ◤ (top) ↔"),
			new RoomObjectName(0x012, "Diagonal wall C ◣ (top) ↔"),
			new RoomObjectName(0x013, "Diagonal wall C ◥ (top) ↔"),
			new RoomObjectName(0x014, "Diagonal wall C ◢ (top) ↔"),
			new RoomObjectName(0x015, "Diagonal wall A ◤ (bottom) ↔"),
			new RoomObjectName(0x016, "Diagonal wall A ◣ (bottom) ↔"),
			new RoomObjectName(0x017, "Diagonal wall A ◥ (bottom) ↔"),
			new RoomObjectName(0x018, "Diagonal wall A ◢ (bottom) ↔"),
			new RoomObjectName(0x019, "Diagonal wall B ◤ (bottom) ↔"),
			new RoomObjectName(0x01A, "Diagonal wall B ◣ (bottom) ↔"),
			new RoomObjectName(0x01B, "Diagonal wall B ◥ (bottom) ↔"),
			new RoomObjectName(0x01C, "Diagonal wall B ◢ (bottom) ↔"),
			new RoomObjectName(0x01D, "Diagonal wall C ◤ (bottom) ↔"),
			new RoomObjectName(0x01E, "Diagonal wall C ◣ (bottom) ↔"),
			new RoomObjectName(0x01F, "Diagonal wall C ◥ (bottom) ↔"),
			new RoomObjectName(0x020, "Diagonal wall C ◢ (bottom) ↔"),
			new RoomObjectName(0x021, "Platform stairs ↔"),
			new RoomObjectName(0x022, "Rail ↔"),
			new RoomObjectName(0x023, "Pit edge ┏━┓ A (north) ↔"),
			new RoomObjectName(0x024, "Pit edge ┏━┓ B (north) ↔"),
			new RoomObjectName(0x025, "Pit edge ┏━┓ C (north) ↔"),
			new RoomObjectName(0x026, "Pit edge ┏━┓ D (north) ↔"),
			new RoomObjectName(0x027, "Pit edge ┏━┓ E (north) ↔"),
			new RoomObjectName(0x028, "Pit edge ┗━┛ (south) ↔"),
			new RoomObjectName(0x029, "Pit edge ━━━ (south) ↔"),
			new RoomObjectName(0x02A, "Pit edge ━━━ (north) ↔"),
			new RoomObjectName(0x02B, "Pit edge ━━┛ (south) ↔"),
			new RoomObjectName(0x02C, "Pit edge ┗━━ (south) ↔"),
			new RoomObjectName(0x02D, "Pit edge ━━┓ (north) ↔"),
			new RoomObjectName(0x02E, "Pit edge ┏━━ (north) ↔"),
			new RoomObjectName(0x02F, "Rail wall (north) ↔"),
			new RoomObjectName(0x030, "Rail wall (south) ↔"),
			new RoomObjectName(0x031, "Nothing"),
			new RoomObjectName(0x032, "Nothing"),
			new RoomObjectName(0x033, "Carpet ↔"),
			new RoomObjectName(0x034, "Carpet trim ↔"),
			new RoomObjectName(0x035, "Weird door"), // TODO: WEIRD DOOR OBJECT NEEDS INVESTIGATION
			new RoomObjectName(0x036, "Drapes (north) ↔"),
			new RoomObjectName(0x037, "Drapes (west, odd) ↔"),
			new RoomObjectName(0x038, "Statues ↔"),
			new RoomObjectName(0x039, "Columns ↔"),
			new RoomObjectName(0x03A, "Wall decors (north) ↔"),
			new RoomObjectName(0x03B, "Wall decors (south) ↔"),
			new RoomObjectName(0x03C, "Chairs in pairs ↔"),
			new RoomObjectName(0x03D, "Tall torches ↔"),
			new RoomObjectName(0x03E, "Supports (north) ↔"),
			new RoomObjectName(0x03F, "Water edge ┏━┓ (concave) ↔"),
			new RoomObjectName(0x040, "Water edge ┗━┛ (concave) ↔"),
			new RoomObjectName(0x041, "Water edge ┏━┓ (convex) ↔"),
			new RoomObjectName(0x042, "Water edge ┗━┛ (convex) ↔"),
			new RoomObjectName(0x043, "Water edge ┏━┛ (concave) ↔"),
			new RoomObjectName(0x044, "Water edge ┗━┓ (concave) ↔"),
			new RoomObjectName(0x045, "Water edge ┗━┓ (convex) ↔"),
			new RoomObjectName(0x046, "Water edge ┏━┛ (convex) ↔"),
			new RoomObjectName(0x047, "Unknown"), // TODO: NEEDS IN GAME CHECKING
			new RoomObjectName(0x048, "Unknown"), // TODO: NEEDS IN GAME CHECKING
			new RoomObjectName(0x049, "Unknown"), // TODO: NEEDS IN GAME CHECKING
			new RoomObjectName(0x04A, "Unknown"), // TODO: NEEDS IN GAME CHECKING
			new RoomObjectName(0x04B, "Supports (south) ↔"),
			new RoomObjectName(0x04C, "Bar ↔"),
			new RoomObjectName(0x04D, "Shelf A ↔"),
			new RoomObjectName(0x04E, "Shelf B ↔"),
			new RoomObjectName(0x04F, "Shelf C ↔"),
			new RoomObjectName(0x050, "Somaria path ↔"),
			new RoomObjectName(0x051, "Cannon hole A (north) ↔"),
			new RoomObjectName(0x052, "Cannon hole A (south) ↔"),
			new RoomObjectName(0x053, "Pipe path ↔"),
			new RoomObjectName(0x054, "Nothing"),
			new RoomObjectName(0x055, "Wall torches (north) ↔"),
			new RoomObjectName(0x056, "Wall torches (south) ↔"),
			new RoomObjectName(0x057, "Nothing"),
			new RoomObjectName(0x058, "Nothing"),
			new RoomObjectName(0x059, "Nothing"),
			new RoomObjectName(0x05A, "Nothing"),
			new RoomObjectName(0x05B, "Cannon hole B (north) ↔"),
			new RoomObjectName(0x05C, "Cannon hole B (south) ↔"),
			new RoomObjectName(0x05D, "Thick rail ↔"),
			new RoomObjectName(0x05E, "Blocks ↔"),
			new RoomObjectName(0x05F, "Long rail ↔"),
			new RoomObjectName(0x060, "Ceiling ↕"),
			new RoomObjectName(0x061, "Wall (top, west) ↕"),
			new RoomObjectName(0x062, "Wall (top, east) ↕"),
			new RoomObjectName(0x063, "Wall (bottom, west) ↕"),
			new RoomObjectName(0x064, "Wall (bottom, east) ↕"),
			new RoomObjectName(0x065, "Wall columns (west) ↕"),
			new RoomObjectName(0x066, "Wall columns (east) ↕"),
			new RoomObjectName(0x067, "Deep wall (west) ↕"),
			new RoomObjectName(0x068, "Deep wall (east) ↕"),
			new RoomObjectName(0x069, "Rail ↕"),
			new RoomObjectName(0x06A, "Pit edge (west) ↕"),
			new RoomObjectName(0x06B, "Pit edge (east) ↕"),
			new RoomObjectName(0x06C, "Rail wall (west) ↕"),
			new RoomObjectName(0x06D, "Rail wall (east) ↕"),
			new RoomObjectName(0x06E, "Nothing"),
			new RoomObjectName(0x06F, "Nothing"),
			new RoomObjectName(0x070, "Carpet ↕"),
			new RoomObjectName(0x071, "Carpet trim ↕"),
			new RoomObjectName(0x072, "Nothing"),
			new RoomObjectName(0x073, "Drapes (west) ↕"),
			new RoomObjectName(0x074, "Drapes (east) ↕"),
			new RoomObjectName(0x075, "Columns ↕"),
			new RoomObjectName(0x076, "Wall decors (west) ↕"),
			new RoomObjectName(0x077, "Wall decors (east) ↕"),
			new RoomObjectName(0x078, "Supports (west) ↕"),
			new RoomObjectName(0x079, "Water edge (west) ↕"),
			new RoomObjectName(0x07A, "Water edge (east) ↕"),
			new RoomObjectName(0x07B, "Supports (east) ↕"),
			new RoomObjectName(0x07C, "Somaria path ↕"),
			new RoomObjectName(0x07D, "Pipe path ↕"),
			new RoomObjectName(0x07E, "Nothing"),
			new RoomObjectName(0x07F, "Wall torches (west) ↕"),
			new RoomObjectName(0x080, "Wall torches (east) ↕"),
			new RoomObjectName(0x081, "Wall decors tight A (west) ↕"),
			new RoomObjectName(0x082, "Wall decors tight A (east) ↕"),
			new RoomObjectName(0x083, "Wall decors tight B (west) ↕"),
			new RoomObjectName(0x084, "Wall decors tight B (east) ↕"),
			new RoomObjectName(0x085, "Cannon hole (west) ↕"),
			new RoomObjectName(0x086, "Cannon hole (east) ↕"),
			new RoomObjectName(0x087, "Tall torches ↕"),
			new RoomObjectName(0x088, "Thick rail ↕"),
			new RoomObjectName(0x089, "Blocks ↕"),
			new RoomObjectName(0x08A, "Long rail ↕"),
			new RoomObjectName(0x08B, "Jump ledge (west) ↕"),
			new RoomObjectName(0x08C, "Jump ledge (east) ↕"),
			new RoomObjectName(0x08D, "Rug trim (west) ↕"),
			new RoomObjectName(0x08E, "Rug trim (east) ↕"),
			new RoomObjectName(0x08F, "Bar ↕"),
			new RoomObjectName(0x090, "Wall flair (west) ↕"),
			new RoomObjectName(0x091, "Wall flair (east) ↕"),
			new RoomObjectName(0x092, "Blue pegs ↕"),
			new RoomObjectName(0x093, "Orange pegs ↕"),
			new RoomObjectName(0x094, "Invisible floor ↕"),
			new RoomObjectName(0x095, "Fake pots ↕"),
			new RoomObjectName(0x096, "Hammer pegs ↕"),
			new RoomObjectName(0x097, "Nothing"),
			new RoomObjectName(0x098, "Nothing"),
			new RoomObjectName(0x099, "Nothing"),
			new RoomObjectName(0x09A, "Nothing"),
			new RoomObjectName(0x09B, "Nothing"),
			new RoomObjectName(0x09C, "Nothing"),
			new RoomObjectName(0x09D, "Nothing"),
			new RoomObjectName(0x09E, "Nothing"),
			new RoomObjectName(0x09F, "Nothing"),
			new RoomObjectName(0x0A0, "Diagonal ceiling A ◤"),
			new RoomObjectName(0x0A1, "Diagonal ceiling A ◣"),
			new RoomObjectName(0x0A2, "Diagonal ceiling A ◥"),
			new RoomObjectName(0x0A3, "Diagonal ceiling A ◢"),
			new RoomObjectName(0x0A4, "Pit ⇲"),
			new RoomObjectName(0x0A5, "Diagonal layer 2 mask A ◤"),
			new RoomObjectName(0x0A6, "Diagonal layer 2 mask A ◣"),
			new RoomObjectName(0x0A7, "Diagonal layer 2 mask A ◥"),
			new RoomObjectName(0x0A8, "Diagonal layer 2 mask A ◢"),
			new RoomObjectName(0x0A9, "Diagonal layer 2 mask B ◤"), // TODO: VERIFY
			new RoomObjectName(0x0AA, "Diagonal layer 2 mask B ◣"), // TODO: VERIFY
			new RoomObjectName(0x0AB, "Diagonal layer 2 mask B ◥"), // TODO: VERIFY
			new RoomObjectName(0x0AC, "Diagonal layer 2 mask B ◢"), // TODO: VERIFY
			new RoomObjectName(0x0AD, "Nothing"),
			new RoomObjectName(0x0AE, "Nothing"),
			new RoomObjectName(0x0AF, "Nothing"),
			new RoomObjectName(0x0B0, "Jump ledge (north) ↔"),
			new RoomObjectName(0x0B1, "Jump ledge (south) ↔"),
			new RoomObjectName(0x0B2, "Rug ↔"),
			new RoomObjectName(0x0B3, "Rug trim (north) ↔"),
			new RoomObjectName(0x0B4, "Rug trim (south) ↔"),
			new RoomObjectName(0x0B5, "Archery game curtains ↔"),
			new RoomObjectName(0x0B6, "Wall flair (north) ↔"),
			new RoomObjectName(0x0B7, "Wall flair (south) ↔"),
			new RoomObjectName(0x0B8, "Blue pegs ↔"),
			new RoomObjectName(0x0B9, "Orange pegs ↔"),
			new RoomObjectName(0x0BA, "Invisible floor ↔"),
			new RoomObjectName(0x0BB, "Fake pressure plates ↔"),
			new RoomObjectName(0x0BC, "Fake pots ↔"),
			new RoomObjectName(0x0BD, "Hammer pegs ↔"),
			new RoomObjectName(0x0BE, "Nothing"),
			new RoomObjectName(0x0BF, "Nothing"),
			new RoomObjectName(0x0C0, "Ceiling (large) ⇲"),
			new RoomObjectName(0x0C1, "Chest platform (tall) ⇲"),
			new RoomObjectName(0x0C2, "Layer 2 pit mask (large) ⇲"),
			new RoomObjectName(0x0C3, "Layer 2 pit mask (medium) ⇲"),
			new RoomObjectName(0x0C4, "Floor 1 ⇲"),
			new RoomObjectName(0x0C5, "Floor 3 ⇲"),
			new RoomObjectName(0x0C6, "Layer 2 mask (large) ⇲"),
			new RoomObjectName(0x0C7, "Floor 4 ⇲"),
			new RoomObjectName(0x0C8, "Water floor ⇲ "),
			new RoomObjectName(0x0C9, "Flood water (medium) ⇲ "),
			new RoomObjectName(0x0CA, "Conveyor floor ⇲ "),
			new RoomObjectName(0x0CB, "Nothing"),
			new RoomObjectName(0x0CC, "Nothing"),
			new RoomObjectName(0x0CD, "Moving wall (west) ⇲"),
			new RoomObjectName(0x0CE, "Moving wall (east) ⇲"),
			new RoomObjectName(0x0CF, "Nothing"),
			new RoomObjectName(0x0D0, "Nothing"),
			new RoomObjectName(0x0D1, "Icy floor A ⇲"),
			new RoomObjectName(0x0D2, "Icy floor B ⇲"),
			new RoomObjectName(0x0D3, "Moving wall flag"), // TODO: WTF IS THIS?
			new RoomObjectName(0x0D4, "Moving wall flag"), // TODO: WTF IS THIS?
			new RoomObjectName(0x0D5, "Moving wall flag"), // TODO: WTF IS THIS?
			new RoomObjectName(0x0D6, "Moving wall flag"), // TODO: WTF IS THIS?
			new RoomObjectName(0x0D7, "Layer 2 mask (medium) ⇲"),
			new RoomObjectName(0x0D8, "Flood water (large) ⇲"),
			new RoomObjectName(0x0D9, "Layer 2 swim mask ⇲"),
			new RoomObjectName(0x0DA, "Flood water B (large) ⇲"),
			new RoomObjectName(0x0DB, "Floor 2 ⇲"),
			new RoomObjectName(0x0DC, "Chest platform (short) ⇲"),
			new RoomObjectName(0x0DD, "Table / rock ⇲"),
			new RoomObjectName(0x0DE, "Spike blocks ⇲"),
			new RoomObjectName(0x0DF, "Spiked floor ⇲"),
			new RoomObjectName(0x0E0, "Floor 7 ⇲"),
			new RoomObjectName(0x0E1, "Tiled floor ⇲"),
			new RoomObjectName(0x0E2, "Rupee floor ⇲"),
			new RoomObjectName(0x0E3, "Conveyor upwards ⇲"),
			new RoomObjectName(0x0E4, "Conveyor downwards ⇲"),
			new RoomObjectName(0x0E5, "Conveyor leftwards ⇲"),
			new RoomObjectName(0x0E6, "Conveyor rightwards ⇲"),
			new RoomObjectName(0x0E7, "Heavy current water ⇲"),
			new RoomObjectName(0x0E8, "Floor 10 ⇲"),
			new RoomObjectName(0x0E9, "Nothing"),
			new RoomObjectName(0x0EA, "Nothing"),
			new RoomObjectName(0x0EB, "Nothing"),
			new RoomObjectName(0x0EC, "Nothing"),
			new RoomObjectName(0x0ED, "Nothing"),
			new RoomObjectName(0x0EE, "Nothing"),
			new RoomObjectName(0x0EF, "Nothing"),
			new RoomObjectName(0x0F0, "Nothing"),
			new RoomObjectName(0x0F1, "Nothing"),
			new RoomObjectName(0x0F2, "Nothing"),
			new RoomObjectName(0x0F3, "Nothing"),
			new RoomObjectName(0x0F4, "Nothing"),
			new RoomObjectName(0x0F5, "Nothing"),
			new RoomObjectName(0x0F6, "Nothing"),
			new RoomObjectName(0x0F7, "Nothing"),
		};

		public static readonly RoomObjectName[] ListOfSubtype2RoomObjects =
		{
			new RoomObjectName(0x100, "Corner (top, concave) ▛"),
			new RoomObjectName(0x101, "Corner (top, concave) ▙"),
			new RoomObjectName(0x102, "Corner (top, concave) ▜"),
			new RoomObjectName(0x103, "Corner (top, concave) ▟"),
			new RoomObjectName(0x104, "Corner (top, convex) ▟"),
			new RoomObjectName(0x105, "Corner (top, convex) ▜"),
			new RoomObjectName(0x106, "Corner (top, convex) ▙"),
			new RoomObjectName(0x107, "Corner (top, convex) ▛"),
			new RoomObjectName(0x108, "Corner (bottom, concave) ▛"),
			new RoomObjectName(0x109, "Corner (bottom, concave) ▙"),
			new RoomObjectName(0x10A, "Corner (bottom, concave) ▜"),
			new RoomObjectName(0x10B, "Corner (bottom, concave) ▟"),
			new RoomObjectName(0x10C, "Corner (bottom, convex) ▟"),
			new RoomObjectName(0x10D, "Corner (bottom, convex) ▜"),
			new RoomObjectName(0x10E, "Corner (bottom, convex) ▙"),
			new RoomObjectName(0x10F, "Corner (bottom, convex) ▛"),
			new RoomObjectName(0x110, "Kinked corner north (bottom) ▜"),
			new RoomObjectName(0x111, "Kinked corner south (bottom) ▟"),
			new RoomObjectName(0x112, "Kinked corner north (bottom) ▛"),
			new RoomObjectName(0x113, "Kinked corner south (bottom) ▙"),
			new RoomObjectName(0x114, "Kinked corner west (bottom) ▙"),
			new RoomObjectName(0x115, "Kinked corner west (bottom) ▛"),
			new RoomObjectName(0x116, "Kinked corner east (bottom) ▟"),
			new RoomObjectName(0x117, "Kinked corner east (bottom) ▜"),
			new RoomObjectName(0x118, "Deep corner (concave) ▛"),
			new RoomObjectName(0x119, "Deep corner (concave) ▙"),
			new RoomObjectName(0x11A, "Deep corner (concave) ▜"),
			new RoomObjectName(0x11B, "Deep corner (concave) ▟"),
			new RoomObjectName(0x11C, "Large brazier"),
			new RoomObjectName(0x11D, "Statue"),
			new RoomObjectName(0x11E, "Star tile (disabled)"),
			new RoomObjectName(0x11F, "Star tile (enabled)"),
			new RoomObjectName(0x120, "Small torch (lit)"),
			new RoomObjectName(0x121, "Barrel"),
			new RoomObjectName(0x122, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x123, "Table"),
			new RoomObjectName(0x124, "Fairy statue"),
			new RoomObjectName(0x125, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x126, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x127, "Chair"),
			new RoomObjectName(0x128, "Bed"),
			new RoomObjectName(0x129, "Fireplace"),
			new RoomObjectName(0x12A, "Mario portrait"),
			new RoomObjectName(0x12B, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x12C, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x12D, "Interroom stairs (up)"),
			new RoomObjectName(0x12E, "Interroom stairs (down)"),
			new RoomObjectName(0x12F, "Interroom stairs B (down)"),
			new RoomObjectName(0x130, "Intraroom stairs north B"), // TODO: VERIFY LAYER HANDLING
            new RoomObjectName(0x131, "Intraroom stairs north (separate layers)"),
			new RoomObjectName(0x132, "Intraroom stairs north (merged layers)"),
			new RoomObjectName(0x133, "Intraroom stairs north (swim layer)"),
			new RoomObjectName(0x134, "Block"),
			new RoomObjectName(0x135, "Water ladder (north)"),
			new RoomObjectName(0x136, "Water ladder (south)"), // TODO: NEEDS IN GAME VERIFICATION
            new RoomObjectName(0x137, "Dam floodgate"),
			new RoomObjectName(0x138, "Interroom spiral stairs up (top)"),
			new RoomObjectName(0x139, "Interroom spiral stairs down (top)"),
			new RoomObjectName(0x13A, "Interroom spiral stairs up (bottom)"),
			new RoomObjectName(0x13B, "Interroom spiral stairs down (bottom)"),
			new RoomObjectName(0x13C, "Sanctuary wall (north)"),
			new RoomObjectName(0x13D, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x13E, "Pew"),
			new RoomObjectName(0x13F, "Magic bat altar"),
		};

		public static readonly RoomObjectName[] ListOfSubtype3RoomObjects =
		{
			new RoomObjectName(0x200, "Waterfall face (empty)"),
			new RoomObjectName(0x201, "Waterfall face (short)"),
			new RoomObjectName(0x202, "Waterfall face (long)"),
			new RoomObjectName(0x203, "Somaria path endpoint"),
			new RoomObjectName(0x204, "Somaria path intersection ╋"),
			new RoomObjectName(0x205, "Somaria path corner ┏"),
			new RoomObjectName(0x206, "Somaria path corner ┗"),
			new RoomObjectName(0x207, "Somaria path corner ┓"),
			new RoomObjectName(0x208, "Somaria path corner ┛"),
			new RoomObjectName(0x209, "Somaria path intersection ┳"),
			new RoomObjectName(0x20A, "Somaria path intersection ┻"),
			new RoomObjectName(0x20B, "Somaria path intersection ┣"),
			new RoomObjectName(0x20C, "Somaria path intersection ┫"),
			new RoomObjectName(0x20D, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x20E, "Somaria path 2-way endpoint"),
			new RoomObjectName(0x20F, "Somaria path crossover"),
			new RoomObjectName(0x210, "Babasu hole (north)"),
			new RoomObjectName(0x211, "Babasu hole (south)"),
			new RoomObjectName(0x212, "9 blue rupees"),
			new RoomObjectName(0x213, "Telepathy tile"),
			new RoomObjectName(0x214, "Warp door"), // TODO: NEEDS IN GAME VERIFICATION THAT THIS IS USELESS
            new RoomObjectName(0x215, "Kholdstare's shell"),
			new RoomObjectName(0x216, "Hammer peg"),
			new RoomObjectName(0x217, "Prison cell"),
			new RoomObjectName(0x218, "Big key lock"),
			new RoomObjectName(0x219, "Chest"),
			new RoomObjectName(0x21A, "Chest (open)"),
			new RoomObjectName(0x21B, "Intraroom stairs south"), // TODO: VERIFY LAYER HANDLING
            new RoomObjectName(0x21C, "Intraroom stairs south (separate layers)"),
			new RoomObjectName(0x21D, "Intraroom stairs south (merged layers)"),
			new RoomObjectName(0x21E, "Interroom straight stairs up (north, top)"),
			new RoomObjectName(0x21F, "Interroom straight stairs down (north, top)"),
			new RoomObjectName(0x220, "Interroom straight stairs up (south, top)"),
			new RoomObjectName(0x221, "Interroom straight stairs down (south, top)"),
			new RoomObjectName(0x222, "Deep corner (convex) ▟"),
			new RoomObjectName(0x223, "Deep corner (convex) ▜"),
			new RoomObjectName(0x224, "Deep corner (convex) ▙"),
			new RoomObjectName(0x225, "Deep corner (convex) ▛"),
			new RoomObjectName(0x226, "Interroom straight stairs up (north, bottom)"),
			new RoomObjectName(0x227, "Interroom straight stairs down (north, bottom)"),
			new RoomObjectName(0x228, "Interroom straight stairs up (south, bottom)"),
			new RoomObjectName(0x229, "Interroom straight stairs down (south, bottom)"),
			new RoomObjectName(0x22A, "Lamp cones"),
			new RoomObjectName(0x22B, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x22C, "Liftable large block"),
			new RoomObjectName(0x22D, "Agahnim's altar"),
			new RoomObjectName(0x22E, "Agahnim's boss room"),
			new RoomObjectName(0x22F, "Pot"),
			new RoomObjectName(0x230, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x231, "Big chest"),
			new RoomObjectName(0x232, "Big chest (open)"),
			new RoomObjectName(0x233, "Intraroom stairs south (swim layer)"),
			new RoomObjectName(0x234, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x235, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x236, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x237, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x238, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x239, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x23A, "Pipe end (south)"),
			new RoomObjectName(0x23B, "Pipe end (north)"),
			new RoomObjectName(0x23C, "Pipe end (east)"),
			new RoomObjectName(0x23D, "Pipe end (west)"),
			new RoomObjectName(0x23E, "Pipe corner ▛"),
			new RoomObjectName(0x23F, "Pipe corner ▙"),
			new RoomObjectName(0x240, "Pipe corner ▜"),
			new RoomObjectName(0x241, "Pipe corner ▟"),
			new RoomObjectName(0x242, "Pipe-rock intersection ⯊"),
			new RoomObjectName(0x243, "Pipe-rock intersection ⯋"),
			new RoomObjectName(0x244, "Pipe-rock intersection ◖"),
			new RoomObjectName(0x245, "Pipe-rock intersection ◗"),
			new RoomObjectName(0x246, "Pipe crossover"),
			new RoomObjectName(0x247, "Bombable floor"),
			new RoomObjectName(0x248, "Fake bombable floor"),
			new RoomObjectName(0x249, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x24A, "Warp tile"),
			new RoomObjectName(0x24B, "Tool rack"),
			new RoomObjectName(0x24C, "Furnace"),
			new RoomObjectName(0x24D, "Tub (wide)"),
			new RoomObjectName(0x24E, "Anvil"),
			new RoomObjectName(0x24F, "Warp tile (disabled)"),
			new RoomObjectName(0x250, "Pressure plate"),
			new RoomObjectName(0x251, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x252, "Blue peg"),
			new RoomObjectName(0x253, "Orange peg"),
			new RoomObjectName(0x254, "Fortune teller room"),
			new RoomObjectName(0x255, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new RoomObjectName(0x256, "Bar corner ▛"),
			new RoomObjectName(0x257, "Bar corner ▙"),
			new RoomObjectName(0x258, "Bar corner ▜"),
			new RoomObjectName(0x259, "Bar corner ▟"),
			new RoomObjectName(0x25A, "Decorative bowl"),
			new RoomObjectName(0x25B, "Tub (tall)"),
			new RoomObjectName(0x25C, "Bookcase"),
			new RoomObjectName(0x25D, "Range"),
			new RoomObjectName(0x25E, "Suitcase"),
			new RoomObjectName(0x25F, "Bar bottles"),
			new RoomObjectName(0x260, "Arrow game hole (west)"),
			new RoomObjectName(0x261, "Arrow game hole (east)"),
			new RoomObjectName(0x262, "Vitreous goo graphics"),
			new RoomObjectName(0x263, "Fake pressure plate"),
			new RoomObjectName(0x264, "Medusa head"),
			new RoomObjectName(0x265, "4-way shooter block"),
			new RoomObjectName(0x266, "Pit"),
			new RoomObjectName(0x267, "Wall crack (north)"),
			new RoomObjectName(0x268, "Wall crack (south)"),
			new RoomObjectName(0x269, "Wall crack (west)"),
			new RoomObjectName(0x26A, "Wall crack (east)"),
			new RoomObjectName(0x26B, "Large decor"),
			new RoomObjectName(0x26C, "Water grate (north)"),
			new RoomObjectName(0x26D, "Water grate (south)"),
			new RoomObjectName(0x26E, "Water grate (west)"),
			new RoomObjectName(0x26F, "Water grate (east)"),
			new RoomObjectName(0x270, "Window sunlight"),
			new RoomObjectName(0x271, "Floor sunlight"),
			new RoomObjectName(0x272, "Trinexx's shell"),
			new RoomObjectName(0x273, "Layer 2 mask (full)"),
			new RoomObjectName(0x274, "Boss entrance"),
			new RoomObjectName(0x275, "Minigame chest"),
			new RoomObjectName(0x276, "Ganon door"),
			new RoomObjectName(0x277, "Triforce wall ornament"),
			new RoomObjectName(0x278, "Triforce floor tiles"),
			new RoomObjectName(0x279, "Freezor hole"),
			new RoomObjectName(0x27A, "Pile of bones"),
			new RoomObjectName(0x27B, "Vitreous goo damage"),
			new RoomObjectName(0x27C, "Arrow tile ↑"),
			new RoomObjectName(0x27D, "Arrow tile ↓"),
			new RoomObjectName(0x27E, "Arrow tile →"),
			new RoomObjectName(0x27F, "Nothing"),
		};

		public static readonly DoorObjectName[] ListOfDoorObjects =
		{
			new DoorObjectName(0x00, "Normal door"),
			new DoorObjectName(0x02, "Normal door (lower layer)"),
			new DoorObjectName(0x04, "Exit (lower layer)"),
			new DoorObjectName(0x06, "Unused cave exit (lower layer)"),
			new DoorObjectName(0x08, "Waterfall door"),
			new DoorObjectName(0x0A, "Fancy dungeon exit"),
			new DoorObjectName(0x0C, "Fancy dungeon exit (lower layer)"),
			new DoorObjectName(0x0E, "Cave exit"),
			new DoorObjectName(0x10, "Lit cave exit (lower layer)"),
			new DoorObjectName(0x12, "Exit marker"),
			new DoorObjectName(0x14, "Dungeon swap marker"),
			new DoorObjectName(0x16, "Layer swap marker"),
			new DoorObjectName(0x18, "Double sided shutter door"),
			new DoorObjectName(0x1A, "Eye watch door"),
			new DoorObjectName(0x1C, "Small key door"),
			new DoorObjectName(0x1E, "Big key door"),
			new DoorObjectName(0x20, "Small key stairs (upwards)"),
			new DoorObjectName(0x22, "Small key stairs (downwards)"),
			new DoorObjectName(0x24, "Small key stairs (lower layer; upwards)"),
			new DoorObjectName(0x26, "Small key stairs (lower layer; downwards)"),
			new DoorObjectName(0x28, "Dash wall"),
			new DoorObjectName(0x2A, "Bombable cave exit"),
			new DoorObjectName(0x2C, "Unopenable, double-sided big key door"),
			new DoorObjectName(0x2E, "Bombable door"),
			new DoorObjectName(0x30, "Exploding wall"),
			new DoorObjectName(0x32, "Curtain door"),
			new DoorObjectName(0x34, "Unusable bottom-sided shutter door"),
			new DoorObjectName(0x36, "Bottom-sided shutter door"),
			new DoorObjectName(0x38, "Top-sided shutter door"),
			new DoorObjectName(0x3A, "Unusable normal door (lower layer)"),
			new DoorObjectName(0x3C, "Unusable normal door (lower layer)"),
			new DoorObjectName(0x3E, "Unusable normal door (lower layer)"),
			new DoorObjectName(0x40, "Normal door (lower layer; used with one-sided shutters)"),
			new DoorObjectName(0x42, "Unused double-sided shutter"),
			new DoorObjectName(0x44, "Double-sided shutter (lower layer)"),
			new DoorObjectName(0x46, "Explicit room door"),
			new DoorObjectName(0x48, "Bottom-sided shutter door (lower layer)"),
			new DoorObjectName(0x4A, "Top-sided shutter door (lower layer)"),
			new DoorObjectName(0x4C, "Unusable normal door (lower layer)"),
			new DoorObjectName(0x4E, "Unusable normal door (lower layer)"),
			new DoorObjectName(0x50, "Unusable normal door (lower layer)"),
			new DoorObjectName(0x52, "Unusable bombed-open door (lower layer)"),
			new DoorObjectName(0x54, "Unusable glitchy door (lower layer)"),
			new DoorObjectName(0x56, "Unusable glitchy door (lower layer)"),
			new DoorObjectName(0x58, "Unusable normal door (lower layer)"),
			new DoorObjectName(0x5A, "Unusable glitchy/stairs up (lower layer)"),
			new DoorObjectName(0x5C, "Unusable glitchy/stairs up (lower layer)"),
			new DoorObjectName(0x5E, "Unusable glitchy/stairs up (lower layer)"),
			new DoorObjectName(0x60, "Unusable glitchy/stairs up (lower layer)"),
			new DoorObjectName(0x62, "Unusable glitchy/stairs down (lower layer)"),
			new DoorObjectName(0x64, "Unusable glitchy/stairs up (lower layer)"),
			new DoorObjectName(0x66, "Unusable glitchy/stairs down (lower layer)")
		};
		
		public static readonly TileTypeName[] ListOfTileTypes =
		{
			new TileTypeName(0x00, "Nothing (standard floor)"),
			new TileTypeName(0x01, "Collision"),
			new TileTypeName(0x02, "Collision"),
			new TileTypeName(0x03, "Collision"),
			new TileTypeName(0x04, "Collision"),
			new TileTypeName(0x05, "Nothing"),
			new TileTypeName(0x06, "Nothing"),
			new TileTypeName(0x07, "Nothing"),
			new TileTypeName(0x08, "Deep water"),
			new TileTypeName(0x09, "Shallow water"),
			new TileTypeName(0x0A, "Short water ladder"),
			new TileTypeName(0x0B, "Collision (weird deep water in Overworld)"),
			new TileTypeName(0x0C, "Overlay mask"),
			new TileTypeName(0x0D, "Spike floor"),
			new TileTypeName(0x0E, "GT ice"),
			new TileTypeName(0x0F, "Ice palace ice"),
			new TileTypeName(0x10, "Slope ◤"),
			new TileTypeName(0x11, "Slope ◥"),
			new TileTypeName(0x12, "Slope ◣"),
			new TileTypeName(0x13, "Slope ◢"),
			new TileTypeName(0x14, "Nothing"),
			new TileTypeName(0x15, "Nothing"),
			new TileTypeName(0x16, "Nothing"),
			new TileTypeName(0x17, "Nothing"),
			new TileTypeName(0x18, "Slope ◤"),
			new TileTypeName(0x19, "Slope ◥"),
			new TileTypeName(0x1A, "Slope ◣"),
			new TileTypeName(0x1B, "Slope ◢"),
			new TileTypeName(0x1C, "Layer 2 overlay"),
			new TileTypeName(0x1D, "North single-layer auto stairs"),
			new TileTypeName(0x1E, "North layer-swap auto stairs"),
			new TileTypeName(0x1F, "North layer-swap auto stairs"),
			new TileTypeName(0x20, "Pit"),
			new TileTypeName(0x21, "Nothing"),
			new TileTypeName(0x22, "Manual stairs"),
			new TileTypeName(0x23, "Pot switch"),
			new TileTypeName(0x24, "Pressure switch"),
			new TileTypeName(0x25, "Nothing (unused but referenced by somaria blocks)"),
			new TileTypeName(0x26, "Collision (near stairs?)"),
			new TileTypeName(0x27, "Hookshottable object"),
			new TileTypeName(0x28, "North ledge"),
			new TileTypeName(0x29, "South ledge"),
			new TileTypeName(0x2A, "East ledge"),
			new TileTypeName(0x2B, "West ledge"),
			new TileTypeName(0x2C, "◤ ledge"),
			new TileTypeName(0x2D, "◣ ledge"),
			new TileTypeName(0x2E, "◥ ledge"),
			new TileTypeName(0x2F, "◢ ledge"),
			new TileTypeName(0x30, "Straight inter-room stairs south/up 0"),
			new TileTypeName(0x31, "Straight inter-room stairs south/up 1"),
			new TileTypeName(0x32, "Straight inter-room stairs south/up 2"),
			new TileTypeName(0x33, "Straight inter-room stairs south/up 3"),
			new TileTypeName(0x34, "Straight inter-room stairs north/down 0"),
			new TileTypeName(0x35, "Straight inter-room stairs north/down 1"),
			new TileTypeName(0x36, "Straight inter-room stairs north/down 2"),
			new TileTypeName(0x37, "Straight inter-room stairs north/down 3"),
			new TileTypeName(0x38, "Straight inter-room stairs north/down edge"),
			new TileTypeName(0x39, "Straight inter-room stairs south/up edge"),
			new TileTypeName(0x3A, "Star tile (inactive on load)"),
			new TileTypeName(0x3B, "Star tile (active on load)"),
			new TileTypeName(0x3C, "Nothing"),
			new TileTypeName(0x3D, "South single-layer auto stairs"),
			new TileTypeName(0x3E, "South layer-swap auto stairs"),
			new TileTypeName(0x3F, "South layer-swap auto stairs"),
			new TileTypeName(0x40, "Thick grass"),
			new TileTypeName(0x41, "Nothing"),
			new TileTypeName(0x42, "Gravestone"),
			new TileTypeName(0x43, "Skull Woods entrance"),
			new TileTypeName(0x44, "Spike"),
			new TileTypeName(0x45, "Nothing"),
			new TileTypeName(0x46, "Desert Tablet"),
			new TileTypeName(0x47, "Nothing"),
			new TileTypeName(0x48, "Diggable ground"),
			new TileTypeName(0x49, "Nothing"),
			new TileTypeName(0x4A, "Diggable ground"),
			new TileTypeName(0x4B, "Warp tile"),
			new TileTypeName(0x4C, "Nothing / Overworld square corner"),
			new TileTypeName(0x4D, "Nothing / Overworld square corner"),
			new TileTypeName(0x4E, "Nothing / Overworld square corner"),
			new TileTypeName(0x4F, "Nothing / Overworld square corner"),
			new TileTypeName(0x50, "Green bush"),
			new TileTypeName(0x51, "Dark bush"),
			new TileTypeName(0x52, "Gray rock"),
			new TileTypeName(0x53, "Black rock"),
			new TileTypeName(0x54, "Hint tile/Sign"),
			new TileTypeName(0x55, "Big gray rock"),
			new TileTypeName(0x56, "Big black rock"),
			new TileTypeName(0x57, "Bonk rocks"),
			new TileTypeName(0x58, "Chest 0"),
			new TileTypeName(0x59, "Chest 1"),
			new TileTypeName(0x5A, "Chest 2"),
			new TileTypeName(0x5B, "Chest 3"),
			new TileTypeName(0x5C, "Chest 4"),
			new TileTypeName(0x5D, "Chest 5"),
			new TileTypeName(0x5E, "Spiral stairs"),
			new TileTypeName(0x5F, "Spiral stairs"),
			new TileTypeName(0x60, "Rupee tile"),
			new TileTypeName(0x61, "Nothing"),
			new TileTypeName(0x62, "Bombable floor"),
			new TileTypeName(0x63, "Minigame chest"),
			new TileTypeName(0x64, "Nothing"),
			new TileTypeName(0x65, "Nothing"),
			new TileTypeName(0x66, "Crystal peg down"),
			new TileTypeName(0x67, "Crystal peg up"),
			new TileTypeName(0x68, "Upwards conveyor"),
			new TileTypeName(0x69, "Downwards conveyor"),
			new TileTypeName(0x6A, "Leftwards conveyor"),
			new TileTypeName(0x6B, "Rightwards conveyor"),
			new TileTypeName(0x6C, "North vines"),
			new TileTypeName(0x6D, "South vines"),
			new TileTypeName(0x6E, "West vines"),
			new TileTypeName(0x6F, "East vines"),
			new TileTypeName(0x70, "Pot/Hammer peg/Push block 00"),
			new TileTypeName(0x71, "Pot/Hammer peg/Push block 01"),
			new TileTypeName(0x72, "Pot/Hammer peg/Push block 02"),
			new TileTypeName(0x73, "Pot/Hammer peg/Push block 03"),
			new TileTypeName(0x74, "Pot/Hammer peg/Push block 04"),
			new TileTypeName(0x75, "Pot/Hammer peg/Push block 05"),
			new TileTypeName(0x76, "Pot/Hammer peg/Push block 06"),
			new TileTypeName(0x77, "Pot/Hammer peg/Push block 07"),
			new TileTypeName(0x78, "Pot/Hammer peg/Push block 08"),
			new TileTypeName(0x79, "Pot/Hammer peg/Push block 09"),
			new TileTypeName(0x7A, "Pot/Hammer peg/Push block 0A"),
			new TileTypeName(0x7B, "Pot/Hammer peg/Push block 0B"),
			new TileTypeName(0x7C, "Pot/Hammer peg/Push block 0C"),
			new TileTypeName(0x7D, "Pot/Hammer peg/Push block 0D"),
			new TileTypeName(0x7E, "Pot/Hammer peg/Push block 0E"),
			new TileTypeName(0x7F, "Pot/Hammer peg/Push block 0F"),
			new TileTypeName(0x80, "North/South door"),
			new TileTypeName(0x81, "East/West door"),
			new TileTypeName(0x82, "North/South shutter door"),
			new TileTypeName(0x83, "East/West shutter door"),
			new TileTypeName(0x84, "North/South layer 2 door"),
			new TileTypeName(0x85, "East/West layer 2 door"),
			new TileTypeName(0x86, "North/South layer 2 shutter door"),
			new TileTypeName(0x87, "East/West layer 2 shutter door"),
			new TileTypeName(0x88, "Some type of door (?)"),
			new TileTypeName(0x89, "East/West transport door"),
			new TileTypeName(0x8A, "Some type of door (?)"),
			new TileTypeName(0x8B, "Some type of door (?)"),
			new TileTypeName(0x8C, "Some type of door (?)"),
			new TileTypeName(0x8D, "Some type of door (?)"),
			new TileTypeName(0x8E, "Entrance door"),
			new TileTypeName(0x8F, "Entrance door"),
			new TileTypeName(0x90, "Layer toggle shutter door (?)"),
			new TileTypeName(0x91, "Layer toggle shutter door (?)"),
			new TileTypeName(0x92, "Layer toggle shutter door (?)"),
			new TileTypeName(0x93, "Layer toggle shutter door (?)"),
			new TileTypeName(0x94, "Layer toggle shutter door (?)"),
			new TileTypeName(0x95, "Layer toggle shutter door (?)"),
			new TileTypeName(0x96, "Layer toggle shutter door (?)"),
			new TileTypeName(0x97, "Layer toggle shutter door (?)"),
			new TileTypeName(0x98, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0x99, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0x9A, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0x9B, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0x9C, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0x9D, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0x9E, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0x9F, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0xA0, "North/South Dungeon swap door"),
			new TileTypeName(0xA1, "Dungeon toggle door (?)"),
			new TileTypeName(0xA2, "Dungeon toggle door (?)"),
			new TileTypeName(0xA3, "Dungeon toggle door (?)"),
			new TileTypeName(0xA4, "Dungeon toggle door (?)"),
			new TileTypeName(0xA5, "Dungeon toggle door (?)"),
			new TileTypeName(0xA6, "Nothing"),
			new TileTypeName(0xA7, "Nothing"),
			new TileTypeName(0xA8, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0xA9, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0xAA, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0xAB, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0xAC, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0xAD, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0xAE, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0xAF, "Layer+Dungeon toggle shutter door (?)"),
			new TileTypeName(0xB0, "Somaria ─"),
			new TileTypeName(0xB1, "Somaria │"),
			new TileTypeName(0xB2, "Somaria ┌"),
			new TileTypeName(0xB3, "Somaria └"),
			new TileTypeName(0xB4, "Somaria ┐"),
			new TileTypeName(0xB5, "Somaria ┘"),
			new TileTypeName(0xB6, "Somaria ⍰ 1 way"),
			new TileTypeName(0xB7, "Somaria ┬"),
			new TileTypeName(0xB8, "Somaria ┴"),
			new TileTypeName(0xB9, "Somaria ├"),
			new TileTypeName(0xBA, "Somaria ┤"),
			new TileTypeName(0xBB, "Somaria ┼"),
			new TileTypeName(0xBC, "Somaria ⍰ 2 way"),
			new TileTypeName(0xBD, "Somaria ┼ crossover"),
			new TileTypeName(0xBE, "Pipe entrance"),
			new TileTypeName(0xBF, "Nothing"),
			new TileTypeName(0xC0, "Torch 00"),
			new TileTypeName(0xC1, "Torch 01"),
			new TileTypeName(0xC2, "Torch 02"),
			new TileTypeName(0xC3, "Torch 03"),
			new TileTypeName(0xC4, "Torch 04"),
			new TileTypeName(0xC5, "Torch 05"),
			new TileTypeName(0xC6, "Torch 06"),
			new TileTypeName(0xC7, "Torch 07"),
			new TileTypeName(0xC8, "Torch 08"),
			new TileTypeName(0xC9, "Torch 09"),
			new TileTypeName(0xCA, "Torch 0A"),
			new TileTypeName(0xCB, "Torch 0B"),
			new TileTypeName(0xCC, "Torch 0C"),
			new TileTypeName(0xCD, "Torch 0D"),
			new TileTypeName(0xCE, "Torch 0E"),
			new TileTypeName(0xCF, "Torch 0F"),
			new TileTypeName(0xD0, "Nothing"),
			new TileTypeName(0xD1, "Nothing"),
			new TileTypeName(0xD2, "Nothing"),
			new TileTypeName(0xD3, "Nothing"),
			new TileTypeName(0xD4, "Nothing"),
			new TileTypeName(0xD5, "Nothing"),
			new TileTypeName(0xD6, "Nothing"),
			new TileTypeName(0xD7, "Nothing"),
			new TileTypeName(0xD8, "Nothing"),
			new TileTypeName(0xD9, "Nothing"),
			new TileTypeName(0xDA, "Nothing"),
			new TileTypeName(0xDB, "Nothing"),
			new TileTypeName(0xDC, "Nothing"),
			new TileTypeName(0xDD, "Nothing"),
			new TileTypeName(0xDE, "Nothing"),
			new TileTypeName(0xDF, "Nothing"),
			new TileTypeName(0xE0, "Nothing"),
			new TileTypeName(0xE1, "Nothing"),
			new TileTypeName(0xE2, "Nothing"),
			new TileTypeName(0xE3, "Nothing"),
			new TileTypeName(0xE4, "Nothing"),
			new TileTypeName(0xE5, "Nothing"),
			new TileTypeName(0xE6, "Nothing"),
			new TileTypeName(0xE7, "Nothing"),
			new TileTypeName(0xE8, "Nothing"),
			new TileTypeName(0xE9, "Nothing"),
			new TileTypeName(0xEA, "Nothing"),
			new TileTypeName(0xEB, "Nothing"),
			new TileTypeName(0xEC, "Nothing"),
			new TileTypeName(0xED, "Nothing"),
			new TileTypeName(0xEE, "Nothing"),
			new TileTypeName(0xEF, "Nothing"),
			new TileTypeName(0xF0, "Door 0 bottom"),
			new TileTypeName(0xF1, "Door 1 bottom"),
			new TileTypeName(0xF2, "Door 2 bottom"),
			new TileTypeName(0xF3, "Door 3 bottom"),
			new TileTypeName(0xF4, "Door X bottom? (unused?)"),
			new TileTypeName(0xF5, "Door X bottom? (unused?)"),
			new TileTypeName(0xF6, "Door X bottom? (unused?)"),
			new TileTypeName(0xF7, "Door X bottom? (unused?)"),
			new TileTypeName(0xF8, "Door 0 top"),
			new TileTypeName(0xF9, "Door 1 top"),
			new TileTypeName(0xFA, "Door 2 top"),
			new TileTypeName(0xFB, "Door 3 top"),
			new TileTypeName(0xFC, "Door X top? (unused?)"),
			new TileTypeName(0xFD, "Door X top? (unused?)"),
			new TileTypeName(0xFE, "Door X top? (unused?)"),
			new TileTypeName(0xFF, "Door X top? (unused?)")
		};

		public static readonly SecretsName[] ListOfSecrets =
		{
			new SecretsName(0x00, "Nothing"),
			new SecretsName(0x01, "Green rupee"),
			new SecretsName(0x02, "Hoarder"),
			new SecretsName(0x03, "Bee"),
			new SecretsName(0x04, "Health pack"),
			new SecretsName(0x05, "Bomb"),
			new SecretsName(0x06, "Heart"),
			new SecretsName(0x07, "Blue rupee"),
			new SecretsName(0x08, "Key"),
			new SecretsName(0x09, "Arrow"),
			new SecretsName(0x0A, "Bomb"),
			new SecretsName(0x0B, "Heart"),
			new SecretsName(0x0C, "Small magic"),
			new SecretsName(0x0D, "Full magic"),
			new SecretsName(0x0E, "Cucco"),
			new SecretsName(0x0F, "Green soldier"),
			new SecretsName(0x10, "Bush stal"),
			new SecretsName(0x11, "Blue soldier"),
			new SecretsName(0x12, "Landmine"),
			new SecretsName(0x13, "Heart"),
			new SecretsName(0x14, "Fairy"),
			new SecretsName(0x15, "Heart"),
			new SecretsName(0x16, "Nothing"),

			new SecretsName(0x80, "Hole"),
			new SecretsName(0x82, "Warp"),
			new SecretsName(0x84, "Staircase"),
			new SecretsName(0x86, "Bombable"),
			new SecretsName(0x88, "Switch")
		};

		private static readonly MusicName Music0x01 = new MusicName(0x01, "Triforce opening");
		private static readonly MusicName Music0x02 = new MusicName(0x02, "Light world");
		private static readonly MusicName Music0x03 = new MusicName(0x03, "Legend theme(rain state)");
		private static readonly MusicName Music0x04 = new MusicName(0x04, "Bunny link");
		private static readonly MusicName Music0x05 = new MusicName(0x05, "Lost woods");
		private static readonly MusicName Music0x06 = new MusicName(0x06, "Legend theme(attract mode)");
		private static readonly MusicName Music0x07 = new MusicName(0x07, "Kakariko village");
		private static readonly MusicName Music0x08 = new MusicName(0x08, "Mirror warp");
		private static readonly MusicName Music0x09 = new MusicName(0x09, "Dark world");
		private static readonly MusicName Music0x0A = new MusicName(0x0A, "Restoring the master sword");
		private static readonly MusicName Music0x0B = new MusicName(0x0B, "Faerie theme");
		private static readonly MusicName Music0x0C = new MusicName(0x0C, "Chase theme");
		private static readonly MusicName Music0x0D = new MusicName(0x0D, "Skull woods");
		private static readonly MusicName Music0x0E = new MusicName(0x0E, "Game theme");
		private static readonly MusicName Music0x0F = new MusicName(0x0F, "Intro no triforce");
		private static readonly MusicName Music0x10 = new MusicName(0x10, "Hyrule castle");
		private static readonly MusicName Music0x11 = new MusicName(0x11, "Pendant dungeon");
		private static readonly MusicName Music0x12 = new MusicName(0x12, "Caves");
		private static readonly MusicName Music0x13 = new MusicName(0x13, "Fanfare");
		private static readonly MusicName Music0x14 = new MusicName(0x14, "Sanctuary");
		private static readonly MusicName Music0x15 = new MusicName(0x15, "Boss theme");
		private static readonly MusicName Music0x16 = new MusicName(0x16, "Dark world dungeon");
		private static readonly MusicName Music0x17 = new MusicName(0x17, "Fortune teller");
		private static readonly MusicName Music0x18 = new MusicName(0x18, "Caves");
		private static readonly MusicName Music0x19 = new MusicName(0x19, "Zelda rescue");
		private static readonly MusicName Music0x1A = new MusicName(0x1A, "Crystal theme");
		private static readonly MusicName Music0x1B = new MusicName(0x1B, "Faerie theme w/ arpeggio");
		private static readonly MusicName Music0x1C = new MusicName(0x1C, "Pre aga theme");
		private static readonly MusicName Music0x1D = new MusicName(0x1D, "Agahnim escape");
		private static readonly MusicName Music0x1E = new MusicName(0x1E, "Pre ganon theme");
		private static readonly MusicName Music0x1F = new MusicName(0x1F, "Ganondorf the Thief");
		private static readonly MusicName Music0xF2 = new MusicName(0xF2, "Half-volume");
		private static readonly MusicName Music0xFF = new MusicName(0xFF, "Do nothing");



		public static readonly MusicName[] ListOfOverworldMusics =
		{
			Music0x01,
			Music0x02,
			Music0x03,
			Music0x04,
			Music0x05,
			Music0x06,
			Music0x07,
			Music0x08,
			Music0x09,
			Music0x0A,
			Music0x0B,
			Music0x0C,
			Music0x0D,
			Music0x0E,
			Music0x0F,
		};
		
		public static readonly MusicName[] ListOfUnderworldMusics =
		{
			Music0x01,
			Music0x02,
			Music0x03,
			Music0x04,
			Music0x05,
			Music0x06,
			Music0x07,
			Music0x08,
			Music0x09,
			Music0x0A,
			Music0x0B,
			Music0x0C,
			Music0x0D,
			Music0x0E,
			Music0x0F,
			Music0x10,
			Music0x11,
			Music0x12,
			Music0x13,
			Music0x14,
			Music0x15,
			Music0x16,
			Music0x17,
			Music0x18,
			Music0x19,
			Music0x1A,
			Music0x1B,
			Music0x1C,
			Music0x1D,
			Music0x1E,
			Music0x1F,
			Music0xF2,
			Music0xFF,
		};
	}
}
