namespace ZeldaFullEditor
{
	public static class DefaultEntities
	{
		public static string GetNameFromVanillaList(this EntityName[] list, int id)
		{
			return GetObjectFromVanillaList(list, id).Name;
		}

		public static T GetObjectFromVanillaList<T>(this T[] list, int id) where T : EntityName
		{
			return Array.Find(list, s => s.ID == id);
		}

		public static readonly DungeonName[] ListOfDungeons =
		{
			new(0x00, "Sewers"),
			new(0x02, "Hyrule Castle"),
			new(0x04, "Eastern Palace"),
			new(0x06, "Desert Palace"),
			new(0x08, "Agahnim's Tower"),
			new(0x0A, "Swamp Palace"),
			new(0x0C, "Palace of Darkness"),
			new(0x0E, "Misery Mire"),
			new(0x10, "Skull Woods"),
			new(0x12, "Ice Palace"),
			new(0x14, "Tower of Hera"),
			new(0x16, "Thieves' Town"),
			new(0x18, "Turtle Rock"),
			new(0x1A, "Ganon's Tower"),
			new(0xFF, "Cave"),
		};

		public static readonly OverworldScreenName[] ListOfOverworldScreens =
		{
			new(0x00, "Lost Woods"),
			new(0x01, "Lost Woods"),
			new(0x02, "Lumberjacks"),
			new(0x03, "West Death Mountain"),
			new(0x04, "West Death Mountain"),
			new(0x05, "East Death Mountain"),
			new(0x06, "East Death Mountain"),
			new(0x07, "Turtle Rock Portalway"),
			new(0x08, "Lost Woods"),
			new(0x09, "Lost Woods"),
			new(0x0A, "Death Mountain Foot"),
			new(0x0B, "West Death Mountain"),
			new(0x0C, "West Death Mountain"),
			new(0x0D, "East Death Mountain"),
			new(0x0E, "East Death Mountain"),
			new(0x0F, "Waterfall of Wishing"),
			new(0x10, "Lost Woods Alcove"),
			new(0x11, "North of Kakariko"),
			new(0x12, "Northwest Pond"),
			new(0x13, "Sanctuary"),
			new(0x14, "Graveyard"),
			new(0x15, "Hylia River Bend"),
			new(0x16, "Potion Shop"),
			new(0x17, "Octorok Pit"),
			new(0x18, "Kakariko Village"),
			new(0x19, "Kakariko Village"),
			new(0x1A, "Kakariko Orchard"),
			new(0x1B, "Hyrule Castle"),
			new(0x1C, "Hyrule Castle"),
			new(0x1D, "Hylia River Peninsula"),
			new(0x1E, "Eastern Ruins"),
			new(0x1F, "Eastern Ruins"),
			new(0x20, "Kakariko Village"),
			new(0x21, "Kakariko Village"),
			new(0x22, "Smith's House"),
			new(0x23, "Hyrule Castle"),
			new(0x24, "Hyrule Castle"),
			new(0x25, "Boulder Field"),
			new(0x26, "Eastern Ruins"),
			new(0x27, "Eastern Ruins"),
			new(0x28, "Racing Game"),
			new(0x29, "South of Kakariko"),
			new(0x2A, "Haunted Grove"),
			new(0x2B, "West of Link's House"),
			new(0x2C, "Link's House"),
			new(0x2D, "Eastern Bridge"),
			new(0x2E, "Lake Hylia River Bend"),
			new(0x2F, "Eastern Portalway"),
			new(0x30, "Desert"),
			new(0x31, "Desert"),
			new(0x32, "Haunted Grove Entrance"),
			new(0x33, "Marshlands Portalway"),
			new(0x34, "Marshlands Totems"),
			new(0x35, "Lake Hylia"),
			new(0x36, "Lake Hylia"),
			new(0x37, "Lake Hylia River End"),
			new(0x38, "Desert"),
			new(0x39, "Desert"),
			new(0x3A, "Desert Pass"),
			new(0x3B, "Marshlands Dam Entrance"),
			new(0x3C, "Marshlands Ravine"),
			new(0x3D, "Lake Hylia"),
			new(0x3E, "Lake Hylia"),
			new(0x3F, "Lake Hylia Waterfall"),
			new(0x40, "Skull Woods"),
			new(0x41, "Skull Woods"),
			new(0x42, "Dark Lumberjacks"),
			new(0x43, "West Dark Death Mountain"),
			new(0x44, "West Dark Death Mountain"),
			new(0x45, "East Dark Death Mountain"),
			new(0x46, "East Dark Death Mountain"),
			new(0x47, "Turtle Rock"),
			new(0x48, "Skull Woods"),
			new(0x49, "Skull Woods"),
			new(0x4A, "Bumper Ledge"),
			new(0x4B, "West Dark Death Mountain"),
			new(0x4C, "West Dark Death Mountain"),
			new(0x4D, "East Dark Death Mountain"),
			new(0x4E, "East Dark Death Mountain"),
			new(0x4F, "Lake of Bad Omens"),
			new(0x50, "Skull Woods Alcove"),
			new(0x51, "North of Outcasts"),
			new(0x52, "Dark Northwest Pond"),
			new(0x53, "Dark Sanctuary"),
			new(0x54, "Dark Graveyard"),
			new(0x55, "Dark Hylia River Bend"),
			new(0x56, "Dark Northeast Shop"),
			new(0x57, "Dark Octorok Pit"),
			new(0x58, "Village of Outcasts"),
			new(0x59, "Village of Outcasts"),
			new(0x5A, "Outcasts Orchard"),
			new(0x5B, "Pyramid of Power"),
			new(0x5C, "Pyramid of Power"),
			new(0x5D, "Dark Hylia River Peninsula"),
			new(0x5E, "Palace of Darkness Maze"),
			new(0x5F, "Palace of Darkness Maze"),
			new(0x60, "Village of Outcasts"),
			new(0x61, "Village of Outcasts"),
			new(0x62, "Stake Puzzle"),
			new(0x63, "Pyramid of Power"),
			new(0x64, "Pyramid of Power"),
			new(0x65, "Boulder Field"),
			new(0x66, "Palace of Darkness Maze"),
			new(0x67, "Palace of Darkness Maze"),
			new(0x68, "Digging Game"),
			new(0x69, "South of Outcasts"),
			new(0x6A, "Stumpy Grove"),
			new(0x6B, "West of Bomb Shoppe"),
			new(0x6C, "Bomb Shoppe"),
			new(0x6D, "Hammer Bridge"),
			new(0x6E, "Dark Lake Hylia River Bend"),
			new(0x6F, "East Dark World Portalway"),
			new(0x70, "Misery Mire"),
			new(0x71, "Misery Mire"),
			new(0x72, "Stumpy Grove Entrance"),
			new(0x73, "Swamplands Portalway"),
			new(0x74, "Swamplands Totems"),
			new(0x75, "Dark Lake Hylia"),
			new(0x76, "Dark Lake Hylia"),
			new(0x77, "Dark Lake Hylia River End"),
			new(0x78, "Misery Mire"),
			new(0x79, "Misery Mire"),
			new(0x7A, "West of Swamplands"),
			new(0x7B, "Swamplands Palace Entrance"),
			new(0x7C, "Swamplands Ravine"),
			new(0x7D, "Dark Lake Hylia"),
			new(0x7E, "Dark Lake Hylia"),
			new(0x7F, "Dark Lake Hylia Waterfall"),
			new(0x80, "Master Sword Pedestal/Hobo bridge"),
			new(0x81, "Zora's Domain"),
			new(0x82, "Unused"),
			new(0x83, "Unused"),
			new(0x84, "Unused"),
			new(0x85, "Unused"),
			new(0x86, "Unused"),
			new(0x87, "Unused"),
			new(0x88, "Triforce room"),
			new(0x89, "Unused"),
			new(0x8A, "Unused"),
			new(0x8B, "Unused"),
			new(0x8C, "Unused"),
			new(0x8D, "Unused"),
			new(0x8E, "Unused"),
			new(0x8F, "Unused"),
			new(0x90, "Unused"),
			new(0x91, "Unused"),
			new(0x92, "Unused"),
			new(0x93, "Triforce room curtains"),
			new(0x94, "Hobo bridge shadow overlay"),
			new(0x95, "DM overlay"),
			new(0x96, "Pyramid background/No overlay"),
			new(0x97, "Grove fog overlay"),
			new(0x98, "Unused"),
			new(0x99, "Unused"),
			new(0x9A, "Unused"),
			new(0x9B, "Unused"),
			new(0x9C, "Dark DM overlay"),
			new(0x9D, "Woods fog overlay"),
			new(0x9E, "Lost woods clear overlay"),
			new(0x9F, "Rain"),
			new(0xA0, "Unused"),
			new(0xA1, "Unused"),
			new(0xA2, "Unused"),
			new(0xA3, "Unused"),
			new(0xA4, "Unused"),
			new(0xA5, "Unused"),
			new(0xA6, "Unused"),
			new(0xA7, "Unused"),
			new(0xA8, "Unused"),
			new(0xA9, "Unused"),
			new(0xAA, "Unused"),
			new(0xAB, "Unused"),
			new(0xAC, "Unused"),
			new(0xAD, "Unused"),
			new(0xAE, "Unused"),
			new(0xAF, "Unused"),
			new(0xB0, "Unused"),
			new(0xB1, "Unused"),
			new(0xB2, "Unused"),
			new(0xB3, "Unused"),
			new(0xB4, "Unused"),
			new(0xB5, "Garbage overlay"),
			new(0xB6, "Unused"),
			new(0xB7, "Unused"),
			new(0xB8, "Unused"),
			new(0xB9, "Unused"),
			new(0xBA, "Unused"),
			new(0xBB, "Unused"),
			new(0xBC, "Unused"),
			new(0xBD, "Unused"),
			new(0xBE, "Garbage overlay that scrolls"),
			new(0xBF, "Unused"),
			new(0xC0, "Unused"),
			new(0xC1, "Unused"),
			new(0xC2, "Unused"),
			new(0xC3, "Unused"),
			new(0xC4, "Unused"),
			new(0xC5, "Unused"),
			new(0xC6, "Unused"),
			new(0xC7, "Unused"),
			new(0xC8, "Unused"),
			new(0xC9, "Unused"),
			new(0xCA, "Unused"),
			new(0xCB, "Unused"),
			new(0xCC, "Unused"),
			new(0xCD, "Unused"),
			new(0xCE, "Unused"),
			new(0xCF, "Unused"),
			new(0xD0, "Unused"),
			new(0xD1, "Unused"),
			new(0xD2, "Unused"),
			new(0xD3, "Unused"),
			new(0xD4, "Unused"),
			new(0xD5, "Unused"),
			new(0xD6, "Unused"),
			new(0xD7, "Unused"),
			new(0xD8, "Unused"),
			new(0xD9, "Unused"),
			new(0xDA, "Unused"),
			new(0xDB, "Unused"),
			new(0xDC, "Unused"),
			new(0xDD, "Unused"),
			new(0xDE, "Unused"),
			new(0xDF, "Unused"),
			new(0xE0, "Unused"),
			new(0xE1, "Unused"),
			new(0xE2, "Unused"),
			new(0xE3, "Unused"),
			new(0xE4, "Unused"),
			new(0xE5, "Unused"),
			new(0xE6, "Unused"),
			new(0xE7, "Unused"),
			new(0xE8, "Unused"),
			new(0xE9, "Unused"),
			new(0xEA, "Unused"),
			new(0xEB, "Unused"),
			new(0xEC, "Unused"),
			new(0xED, "Unused"),
			new(0xEE, "Unused"),
			new(0xEF, "Unused"),
			new(0xF0, "Unused"),
			new(0xF1, "Unused"),
			new(0xF2, "Unused"),
			new(0xF3, "Unused"),
			new(0xF4, "Unused"),
			new(0xF5, "Unused"),
			new(0xF6, "Unused"),
			new(0xF7, "Unused"),
			new(0xF8, "Unused"),
			new(0xF9, "Unused"),
			new(0xFA, "Unused"),
			new(0xFB, "Unused"),
			new(0xFC, "Unused"),
			new(0xFD, "Unused"),
			new(0xFE, "Unused"),
			new(0xFF, "Unused"),
		};

		public static readonly RoomName[] ListOfRoomNames =
		{
			new(0x000, "Ganon fight"),
			new(0x001, "Hyrule Castle - Back"),
			new(0x002, "Hyrule Castle - sanctuary back"),
			new(0x003, "Houlihan room"),
			new(0x004, "Turtle Rock - Crystaroller"),
			new(0x005, "Empty room"),
			new(0x006, "Swamp Palace - Arrghus"),
			new(0x007, "Tower of Hera - Moldorm"),
			new(0x008, "Fairy east of Sanctuary - Top"),
			new(0x009, "Palace of Darkness - Shooter room"),
			new(0x00A, "Palace of Darkness - Stalfos basement"),
			new(0x00B, "Palace of Darkness - Monster truck room"),
			new(0x00C, "Ganon's Tower - Lobby"),
			new(0x00D, "Ganon's Tower - Agahnim 2"),
			new(0x00E, "Ice Palace - Entrance"),
			new(0x00F, "Empty room - Map Null"),
			new(0x010, "Ganon fight fall"),
			new(0x011, "Hyrule Castle - End of Sewers"),
			new(0x012, "Hyrule Castle - Sanctuary"),
			new(0x013, "Turtle Rock - Pokeys 1"),
			new(0x014, "Turtle Rock - Lava Pipes"),
			new(0x015, "Turtle Rock - Cold Pipes"),
			new(0x016, "Swamp Palace - Current room"),
			new(0x017, "Tower of Hera - Floor 5"),
			new(0x018, "Fairy east of Sanctuary - Bottom"),
			new(0x019, "Palace of Darkness - Dark maze"),
			new(0x01A, "Palace of Darkness - Falling bridge"),
			new(0x01B, "Palace of Darkness - Moving wall"),
			new(0x01C, "Ganon's Tower - Ice Armos"),
			new(0x01D, "Ganon's Tower - Penultima"),
			new(0x01E, "Ice Palace - Bombable floor"),
			new(0x01F, "Ice Palace - Penguin switch"),
			new(0x020, "Agahnim's Tower - Agahnim"),
			new(0x021, "Hyrule Castle - Sewers key rat"),
			new(0x022, "Hyrle Castle - Sewers rat party"),
			new(0x023, "Turtle Rock - Laser camp entrance"),
			new(0x024, "Turtle Rock - Big chest"),
			new(0x025, "Empty room"),
			new(0x026, "Swamp Palace - Switch statue"),
			new(0x027, "Tower of Hera - Floor 4"),
			new(0x028, "Swamp Palace - Lobby"),
			new(0x029, "Skull Woods - Mothula"),
			new(0x02A, "Palace of Darkness - Beetle arena"),
			new(0x02B, "Hookshot cave - Fairies"),
			new(0x02C, "Palace of Darkness - Sexy statue"),
			new(0x02D, "Room of Death"),
			new(0x02E, "Ice Palace - Penguins' chest"),
			new(0x02F, "Kakariko well"),
			new(0x030, "Agahnim's Tower - Sacrificial altar"),
			new(0x031, "Tower of Hera - Floor 3"),
			new(0x032, "Hyrule Castle - Sewers cross"),
			new(0x033, "Desert Palace - Lanmolas"),
			new(0x034, "Swamp Palace - West wing blocks"),
			new(0x035, "Swamp Palace - West wing flood"),
			new(0x036, "Swamp Palace - Big chest lobby"),
			new(0x037, "Swamp Palace - East wing flood"),
			new(0x038, "Swamp Palace - East wing hall"),
			new(0x039, "Skull Woods - Fall to boss"),
			new(0x03A, "Palace of Darkness - Main lobby"),
			new(0x03B, "Palace of Darkness - Hellway"),
			new(0x03C, "Hookshot cave - Booty room"),
			new(0x03D, "Ganon's Tower - Torches 2"),
			new(0x03E, "Ice Palace - Conveyor room"),
			new(0x03F, "Ice Palace - HP room"),
			new(0x040, "Agahnim's Tower - Cat walk"),
			new(0x041, "Hyrule Castle - Secret Sewers"),
			new(0x042, "Hyrule Castle - Sewers snake orgy"),
			new(0x043, "Desert Palace - Moving wall"),
			new(0x044, "Thieves' Town - Basement conveyors"),
			new(0x045, "Thieves' Town - Basement prison"),
			new(0x046, "Swamp Palace - Split O"),
			new(0x047, "Empty room"),
			new(0x048, "Empty room"),
			new(0x049, "Skull Woods - Torches"),
			new(0x04A, "Palace of Darkness - Entrance"),
			new(0x04B, "Palace of Darkness - Mimics warp"),
			new(0x04C, "Ganon's Tower - Bumpy conveyors"),
			new(0x04D, "Ganon's Tower - Moldorm 2"),
			new(0x04E, "Ice Palace - IPBJ"),
			new(0x04F, "Ice Palace - Clone with fairies"),
			new(0x050, "Hyrule Castle - West wing back"),
			new(0x051, "Hyrule Castle - Throne room"),
			new(0x052, "Hyrule Castle - East wing back"),
			new(0x053, "Desert Palace - Popo genocide"),
			new(0x054, "Swamp Palace - Pick a hole"),
			new(0x055, "Hyrule Castle - Secret tunnel"),
			new(0x056, "Skull Woods - West exit"),
			new(0x057, "Skull Woods - Statue puzzle"),
			new(0x058, "Skull Woods - Exploding wall"),
			new(0x059, "Skull Woods - Bridges"),
			new(0x05A, "Palace of Darkness - Helmasaur"),
			new(0x05B, "Ganon's Tower - Spike pegs"),
			new(0x05C, "Ganon's Tower - Cannon bridge"),
			new(0x05D, "Ganon's Tower - Gauntlets 1, 2, 3"),
			new(0x05E, "Ice Palace - Crossroads"),
			new(0x05F, "Ice Palace - Spiked floor"),
			new(0x060, "Hyrule Castle - East wing entrance"),
			new(0x061, "Hyrule Castle - Lobby"),
			new(0x062, "Hyrule Castle - West wing entrance"),
			new(0x063, "Desert Palace - Back entrance"),
			new(0x064, "Thieves' Town - Attic west"),
			new(0x065, "Thieves' Town - Attic east"),
			new(0x066, "Swamp Palace - Waterfalls"),
			new(0x067, "Skull Woods - Firebars"),
			new(0x068, "Skull Woods - Bumper room"),
			new(0x069, "Empty room"),
			new(0x06A, "Palace of Darkness - Dark rupees"),
			new(0x06B, "Ganon's Tower - Mimics fights"),
			new(0x06C, "Ganon's Tower - Lanmolas 2"),
			new(0x06D, "Ganon's Tower - Gauntlets 4, 5"),
			new(0x06E, "Ice Palace - Penguin lineup"),
			new(0x06F, "Empty room"),
			new(0x070, "Hyrule Castle - Prison airlock"),
			new(0x071, "Hyrule Castle - Guarded chests"),
			new(0x072, "Hyrule Castle - Basement entrance"),
			new(0x073, "Desert Palace - Big chest"),
			new(0x074, "Desert Palace - North hall"),
			new(0x075, "Desert Palace - Cannon hall"),
			new(0x076, "Swamp Palace - Drainage rooms"),
			new(0x077, "Tower of Hera - Lobby"),
			new(0x078, "Empty room"),
			new(0x079, "Empty room"),
			new(0x07A, "Empty room"),
			new(0x07B, "Ganon's Tower - Conveyor trolls"),
			new(0x07C, "Ganon's Tower - Falling basement bridge"),
			new(0x07D, "Ganon's Tower - Warp room A"),
			new(0x07E, "Ice Palace - Ice hall"),
			new(0x07F, "Ice Palace - Bari party"),
			new(0x080, "Hyrule Castle - Basement prison"),
			new(0x081, "Hyrule Castle - Basement bridge"),
			new(0x082, "Hyrule Castle - Basement pit"),
			new(0x083, "Desert Palace - West entrance"),
			new(0x084, "Desert Palace - Main lobby"),
			new(0x085, "Desert Palace - East entrance"),
			new(0x086, "Empty room"),
			new(0x087, "Tower of Hera - Floor 1"),
			new(0x088, "Empty room"),
			new(0x089, "Eastern Palace - Fairies"),
			new(0x08A, "Empty room"),
			new(0x08B, "Ganon's Tower - Pit block"),
			new(0x08C, "Ganon's Tower - Basement junction"),
			new(0x08D, "Ganon's Tower - Tile room puzzles"),
			new(0x08E, "Ice Palce - Blob party"),
			new(0x08F, "Empty room"),
			new(0x090, "Misery Mire - Vitreous"),
			new(0x091, "Misery Mire - Basement blobs"),
			new(0x092, "Misery Mire - Dark room pegs"),
			new(0x093, "Misery Mire - Dark room shooters"),
			new(0x094, "Empty room"),
			new(0x095, "Ganon's Tower - Falling guard bridge"),
			new(0x096, "Ganon's Tower - Torches 1"),
			new(0x097, "Mirey Mire - Moving wall"),
			new(0x098, "Misery Mire - Entrance"),
			new(0x099, "Eastern Palace - Dark eyegores"),
			new(0x09A, "Empty room"),
			new(0x09B, "Ganon's Tower - Warp room B"),
			new(0x09C, "Ganon's Tower - Invisible maze"),
			new(0x09D, "Ganon's Tower - E"),
			new(0x09E, "Ice Palace - Puzzle junction"),
			new(0x09F, "Ice Palace - Pottery hunt"),
			new(0x0A0, "Misery Mire - Penultima"),
			new(0x0A1, "Misery Mire - Fish room"),
			new(0x0A2, "Miser Mire - Bridges"),
			new(0x0A3, "Misery Mire - Waluigi bridge"),
			new(0x0A4, "Turtle Rock - Trinexx"),
			new(0x0A5, "Ganon's Tower - Wizzrobe fights"),
			new(0x0A6, "Ganon's Tower - Moldorm fall"),
			new(0x0A7, "Tower of Hera - Fairies"),
			new(0x0A8, "Eastern Palace - Stalfos room"),
			new(0x0A9, "Eastern Palace - Big chest"),
			new(0x0AA, "Eastern Palace - East hall"),
			new(0x0AB, "Thieves' Town - Spike room"),
			new(0x0AC, "Thieves' Town - Blind"),
			new(0x0AD, "Empty room"),
			new(0x0AE, "Ice Palace - Iced T"),
			new(0x0AF, "Ice Palace - Shittiest room"),
			new(0x0B0, "Agahnim's Tower - Circle of pots"),
			new(0x0B1, "Misery Mire - Hourglass"),
			new(0x0B2, "Misery Mire - Sluggula junction"),
			new(0x0B3, "Misery Mire - Spike chest"),
			new(0x0B4, "Turtle Rock - End of the line"),
			new(0x0B5, "Turtle Rock - Dark maze"),
			new(0x0B6, "Turtle Rock - Chomps"),
			new(0x0B7, "Turtle Rock - Roller chests"),
			new(0x0B8, "Eastern Palace - Antifairy chest"),
			new(0x0B9, "Eastern Palace - Cannon hall"),
			new(0x0BA, "Eastern Palace - Dark switch"),
			new(0x0BB, "Thieves' Town - Hellway"),
			new(0x0BC, "Thieves' Town - Toilet"),
			new(0x0BD, "Empty room"),
			new(0x0BE, "Ice Palace - Block switch"),
			new(0x0BF, "Ice Palace - Clone with switch"),
			new(0x0C0, "Agahnim's Tower - Dark pits"),
			new(0x0C1, "Misery Mire - Tile room"),
			new(0x0C2, "Misery Mire - Main lobby"),
			new(0x0C3, "Misery Mire - Falling bridge"),
			new(0x0C4, "Turtle Rock - Peg puzzle"),
			new(0x0C5, "Turtle Rock - Laser strip"),
			new(0x0C6, "Turtle Rock - Main lobby"),
			new(0x0C7, "Turtle Rock - Torch puzzle"),
			new(0x0C8, "Eastern Palace - Armos Knights"),
			new(0x0C9, "Eastern Palace - Entrance"),
			new(0x0CA, "Debug room"),
			new(0x0CB, "Thieves' Town - Northwest lobby"),
			new(0x0CC, "Thieves' Town - Northeast lobby"),
			new(0x0CD, "Empty room"),
			new(0x0CE, "Ice Palace - Fall to boss"),
			new(0x0CF, "Empty room"),
			new(0x0D0, "Agahnim's Tower - Dark maze"),
			new(0x0D1, "Misery Mire - Wall puzzle weekends"),
			new(0x0D2, "Misery Mire - Entry gauntlet"),
			new(0x0D3, "Empty room"),
			new(0x0D4, "Empty room"),
			new(0x0D5, "Turtle Rock - Laser bridge"),
			new(0x0D6, "Turtle Rock - Entrance"),
			new(0x0D7, "Empty room"),
			new(0x0D8, "Eastern Palace - Gauntlet"),
			new(0x0D9, "Eastern Palace - Cannon room"),
			new(0x0DA, "Eastern Palace - Upstairs antifairies"),
			new(0x0DB, "Thieves' Town - Southwest lobby"),
			new(0x0DC, "Thieves' Town - Southeast lobby"),
			new(0x0DD, "Empty room"),
			new(0x0DE, "Ice Palace - Kholdstare"),
			new(0x0DF, "Paradox Cave - Summit exit"),
			new(0x0E0, "Agahnim's Tower - Entrance"),
			new(0x0E1, "Lost Woods cave"),
			new(0x0E2, "Lumberjack Bumpkins' cave"),
			new(0x0E3, "Magic bat cave"),
			new(0x0E4, "Old Man's house cave"),
			new(0x0E5, "Old Man's house cave east"),
			new(0x0E6, "Death Mountain Descent - West"),
			new(0x0E7, "Death Mountain Descent - East"),
			new(0x0E8, "Superbunny cave - Top"),
			new(0x0E9, "Empty room"),
			new(0x0EA, "Spectacle Rock cave - Top"),
			new(0x0EB, "Bumper cave - Top"),
			new(0x0EC, "Empty room"),
			new(0x0ED, "Death Mountain fairy cave - Top"),
			new(0x0EE, "Spiral cave - top"),
			new(0x0EF, "Paradox cave - Moldorm chests"),
			new(0x0F0, "Lost Old Man's cave - West"),
			new(0x0F1, "Lost Old Man's cave - East"),
			new(0x0F2, "Sahasrahla's house - West"),
			new(0x0F3, "Sahasrahla's house - East"),
			new(0x0F4, "Feuding brothers - West"),
			new(0x0F5, "Feuding brothers - East"),
			new(0x0F6, "Empty room"),
			new(0x0F7, "Empty room"),
			new(0x0F8, "Superbunny cave - Bottom"),
			new(0x0F9, "Spectacle Rock cave - Bottom, west"),
			new(0x0FA, "Spectacle Rock cave - Bottom, East"),
			new(0x0FB, "Bumper cave - Bottom"),
			new(0x0FC, "Empty room"),
			new(0x0FD, "Death Mountain fairy cave - Bottom"),
			new(0x0FE, "Spiral cave - Bottom"),
			new(0x0FF, "Paradox cave - Shop"),
			new(0x100, "Boring chest game"),
			new(0x101, "Kakariko houses"),
			new(0x102, "Sick kid's house"),
			new(0x103, "Kakariko hospitality facilities"),
			new(0x104, "Link's house"),
			new(0x105, "Sahasrahlah's hideout"),
			new(0x106, "Fun chest game"),
			new(0x107, "Library and secret pots"),
			new(0x108, "Chicken hut"),
			new(0x109, "Potion shop"),
			new(0x10A, "Aginah's hideout"),
			new(0x10B, "Dam control room"),
			new(0x10C, "Mimic cave"),
			new(0x10D, "Mire shed"),
			new(0x10E, "Two hints"),
			new(0x10F, "Dark World shop"),
			new(0x110, "Dark World shop"),
			new(0x111, "Arrow game"),
			new(0x112, "Dark sanc and shop"),
			new(0x113, "King's tomb"),
			new(0x114, "Waterfall fairy and Watto"),
			new(0x115, "Pond of Happiness"),
			new(0x116, "Fat Fairy"),
			new(0x117, "Spike Cave"),
			new(0x118, "Unfun chest game"),
			new(0x119, "Blind's hideout - Upstairs"),
			new(0x11A, "Broccoli's hideout"),
			new(0x11B, "Grove and Grave caves"),
			new(0x11C, "Bomb shop and C-house"),
			new(0x11D, "Blind's hideout - Basement"),
			new(0x11E, "Fairies and Thief cave"),
			new(0x11F, "Not notable shop"),
			new(0x120, "Ice cave"),
			new(0x121, "Dwarven smithery"),
			new(0x122, "Fortune Tellers x2"),
			new(0x123, "Mini moldorm cave"),
			new(0x124, "Rich pots and Bonk rocks"),
			new(0x125, "Small rupee cache and Mini spike cave"),
			new(0x126, "Big fairy and Checkerboard cave"),
			new(0x127, "Stake puzzle and unused spike cave"),
		};

		public static readonly SpriteName[] ListOfSprites =
		{
			new(0x00, "Raven"),
			new(0x01, "Vulture"),
			new(0x02, "Stalfos head"),
			new(0x03, "Null"),
			new(0x04, "Correct pull switch"),
			new(0x05, "Correct pull switch (unused)"),
			new(0x06, "Wrong pull switch"),
			new(0x07, "Wrong pull switch (unused)"),
			new(0x08, "Octorok"),
			new(0x09, "Moldorm"),
			new(0x0A, "Octorok (4-way)"),
			new(0x0B, "Cucco"),
			new(0x0C, "Octorok stone"),
			new(0x0D, "Buzzblob"),
			new(0x0E, "Snapdragon"),
			new(0x0F, "Octoballoon"),
			new(0x10, "Octobaby"),
			new(0x11, "Hinox"),
			new(0x12, "Moblin"),
			new(0x13, "Mini helmasaur"),
			new(0x14, "Thieves' Town grate"),
			new(0x15, "Antifairy"),
			new(0x16, "Sahasrahla / Aginah"),
			new(0x17, "Hoarder"),
			new(0x18, "Mini moldorm"),
			new(0x19, "Poe"),
			new(0x1A, "Smithy"),
			new(0x1B, "Arrow"),
			new(0x1C, "Statue"),
			new(0x1D, "Flute quest"),
			new(0x1E, "Crystal switch"),
			new(0x1F, "Sick kid"),
			new(0x20, "Sluggula"),
			new(0x21, "Water switch"),
			new(0x22, "Ropa"),
			new(0x23, "Red bari"),
			new(0x24, "Blue bari"),
			new(0x25, "Talking tree"),
			new(0x26, "Hardhat beetle"),
			new(0x27, "Deadrock"),
			new(0x28, "Dark World hint"),
			new(0x29, "Adult"),
			new(0x2A, "Sweeping lady"),
			new(0x2B, "Hobo"),
			new(0x2C, "Lumberjacks"),
			new(0x2D, "Telepathic tile (unused)"),
			new(0x2E, "Flute kid"),
			new(0x2F, "Race game lady"),
			new(0x30, "Race game guy"),
			new(0x31, "Fortune teller"),
			new(0x32, "Argue bros"),
			new(0x33, "Rupee pull"),
			new(0x34, "Young snitch"),
			new(0x35, "Innkeeper"),
			new(0x36, "Witch"),
			new(0x37, "Waterfall"),
			new(0x38, "Eye statue"),
			new(0x39, "Locksmith"),
			new(0x3A, "Magic bat"),
			new(0x3B, "Bonk item"),
			new(0x3C, "Child"),
			new(0x3D, "Old snitch"),
			new(0x3E, "Hoarder"),
			new(0x3F, "Tutorial guard"),
			new(0x40, "Lightning gate"),
			new(0x41, "Blue guard"),
			new(0x42, "Green guard"),
			new(0x43, "Red spear guard"),
			new(0x44, "Charging blue guard"),
			new(0x45, "Charging red guard"),
			new(0x46, "Blue archer"),
			new(0x47, "Green bush guard"),
			new(0x48, "Red javelin guard"),
			new(0x49, "Red bush guard"),
			new(0x4A, "Bomb guard"),
			new(0x4B, "Green knife guard"),
			new(0x4C, "Geldman"),
			new(0x4D, "Toppo"),
			new(0x4E, "Popo"),
			new(0x4F, "Popo"),
			new(0x50, "Cannonball"),
			new(0x51, "Armos statue"),
			new(0x52, "King Zora"),
			new(0x53, "Armos Knight"),
			new(0x54, "Lanmolas"),
			new(0x55, "Zora (fire ball)"),
			new(0x56, "Zora"),
			new(0x57, "Desert statue"),
			new(0x58, "Crab"),
			new(0x59, "Lost woods bird"),
			new(0x5A, "Lost woods squirrel"),
			new(0x5B, "Spark (clockwise)"),
			new(0x5C, "Spark (counterclockwise)"),
			new(0x5D, "Roller (vertical, down)"),
			new(0x5E, "Roller (vertical, up)"),
			new(0x5F, "Roller (horizontal, right)"),
			new(0x60, "Roller (horizontal, left)"),
			new(0x61, "Beamos"),
			new(0x62, "Mastersword"),
			new(0x63, "Debirando"),
			new(0x64, "Debirando"),
			new(0x65, "Archery guy"),
			new(0x66, "Wall cannon (vertical, left)"),
			new(0x67, "Wall cannon (vertical, right)"),
			new(0x68, "Wall cannon (horizontal, top)"),
			new(0x69, "Wall cannon (horizontal, bottom)"),
			new(0x6A, "Ball n chain"),
			new(0x6B, "Cannon guard"),
			new(0x6C, "Mirror portal"),
			new(0x6D, "Rat / cricket"),
			new(0x6E, "Snake"),
			new(0x6F, "Keese"),
			new(0x70, "King Helmasaur fireball"),
			new(0x71, "Leever"),
			new(0x72, "Faerie pond trigger"),
			new(0x73, "Uncle / Priest"),
			new(0x74, "Running man"),
			new(0x75, "Bottle merchant"),
			new(0x76, "Zelda"),
			new(0x77, "Antifairy"),
			new(0x78, "Sahasrahla's wife"),
			new(0x79, "Bee"),
			new(0x7A, "Agahnim"),
			new(0x7B, "Agahnim's balls"),
			new(0x7C, "Green stalfos"),
			new(0x7D, "Big spike"),
			new(0x7E, "Firebar (clockwise)"),
			new(0x7F, "Firebar (counterclockwise)"),
			new(0x80, "Firesnake"),
			new(0x81, "Hover"),
			new(0x82, "Antifairy circle"),
			new(0x83, "Green eyegore/mimic"),
			new(0x84, "Red eyegore/mimic"),
			new(0x85, "Yellow stalfos"),
			new(0x86, "Kodongo"),
			new(0x87, "Kondongo fire"),
			new(0x88, "Mothula"),
			new(0x89, "Mothula beam"),
			new(0x8A, "Spike block"),
			new(0x8B, "Gibdo"),
			new(0x8C, "Arrghus"),
			new(0x8D, "Arrghi"),
			new(0x8E, "Terrorpin"),
			new(0x8F, "Blob"),
			new(0x90, "Wallmaster"),
			new(0x91, "Stalfos knight"),
			new(0x92, "King Helmasaur"),
			new(0x93, "Bumper"),
			new(0x94, "Pirogusu"),
			new(0x95, "Laser eye (left)"),
			new(0x96, "Laser eye (right)"),
			new(0x97, "Laser eye (top)"),
			new(0x98, "Laser eye (bottom)"),
			new(0x99, "Pengator"),
			new(0x9A, "Kyameron"),
			new(0x9B, "Wizzrobe"),
			new(0x9C, "Zoro"),
			new(0x9D, "Babasu"),
			new(0x9E, "Haunted grove ostritch"),
			new(0x9F, "Haunted grove rabbit"),
			new(0xA0, "Haunted grove bird"),
			new(0xA1, "Freezor"),
			new(0xA2, "Kholdstare"),
			new(0xA3, "Kholdstare's shell"),
			new(0xA4, "Falling ice"),
			new(0xA5, "Blue zazak"),
			new(0xA6, "Red zazak"),
			new(0xA7, "Stalfos"),
			new(0xA8, "Green zirro"),
			new(0xA9, "Blue zirro"),
			new(0xAA, "Pikit"),
			new(0xAB, "Crystal maiden"),
			new(0xAC, "Apple"),
			new(0xAD, "Old man"),
			new(0xAE, "Pipe (down)"),
			new(0xAF, "Pipe (up)"),
			new(0xB0, "Pipe (right)"),
			new(0xB1, "Pipe (left)"),
			new(0xB2, "Good bee"),
			new(0xB3, "Pedestal plaque"),
			new(0xB4, "Purple chest"),
			new(0xB5, "Bomb shop guy"),
			new(0xB6, "Kiki"),
			new(0xB7, "Blind maiden"),
			new(0xB8, "Dialogue tester"),
			new(0xB9, "Bully / pink ball"),
			new(0xBA, "Whirlpool"),
			new(0xBB, "Shopkeeper"),
			new(0xBC, "Drunkard"),
			new(0xBD, "Vitreous"),
			new(0xBE, "Vitreous small eye"),
			new(0xBF, "Lightning"),
			new(0xC0, "Catfish"),
			new(0xC1, "Cutscene Agahnim"),
			new(0xC2, "Boulder"),
			new(0xC3, "Gibo"),
			new(0xC4, "Thief"),
			new(0xC5, "Medusa"),
			new(0xC6, "4-way shooter"),
			new(0xC7, "Pokey"),
			new(0xC8, "Big faerie"),
			new(0xC9, "Tektite"),
			new(0xCA, "Chain chomp"),
			new(0xCB, "Trinexx rock head"),
			new(0xCC, "Trinexx fire head"),
			new(0xCD, "Trinexx ice head"),
			new(0xCE, "Blind"),
			new(0xCF, "Swamola"),
			new(0xD0, "Lynel"),
			new(0xD1, "Bunnybeam (UW) / Smoke (OW)"),
			new(0xD2, "Flopping fish"),
			new(0xD3, "Stal"),
			new(0xD4, "Landmine"),
			new(0xD5, "Dig game guy"),
			new(0xD6, "Ganon"),
			new(0xD7, "Ganon"),
			new(0xD8, "Heart"),
			new(0xD9, "Green rupee"),
			new(0xDA, "Blue rupee"),
			new(0xDB, "Red rupee"),
			new(0xDC, "Bomb refill (1)"),
			new(0xDD, "Bomb refill (4)"),
			new(0xDE, "Bomb refill (8)"),
			new(0xDF, "Small magic decanter"),
			new(0xE0, "Large magic decanter"),
			new(0xE1, "Arrow refill (5)"),
			new(0xE2, "Arrow refill (10)"),
			new(0xE3, "Faerie"),
			new(0xE4, "Small key"),
			new(0xE5, "Big key"),
			new(0xE6, "Stolen shield"),
			new(0xE7, "Mushroom"),
			new(0xE8, "Fake master sword"),
			new(0xE9, "Magic shop assistant"),
			new(0xEA, "Heart container"),
			new(0xEB, "Heart piece"),
			new(0xEC, "Thrown item"),
			new(0xED, "Somaria platform"),
			new(0xEE, "Castle mantle"),
			new(0xEF, "Somaria platform (unused)"),
			new(0xF0, "Somaria platform (unused)"),
			new(0xF1, "Somaria platform (unused)"),
			new(0xF2, "Medallion tablet"),
			new(0xF3, "Position target (OW)"),
			new(0xF4, "Boulders (OW)")
		};

		public static readonly SpriteName[] ListOfOverlords =
		{
			new(0x00, "Nothing"),
			new(0x01, "Position target"),
			new(0x02, "Full room cannons"),
			new(0x03, "Vertical cannon"),
			new(0x04, "Stalfos spawner"),
			new(0x05, "Falling stalfos"),
			new(0x06, "Bad switch snake"),
			new(0x07, "Moving floor"),
			new(0x08, "Blob spawner"),
			new(0x09, "Wallmaster"),
			new(0x0A, "Falling square"),
			new(0x0B, "Falling bridge"),
			new(0x0C, "Falling tiles west to easth"),
			new(0x0D, "Falling tiles north to south"),
			new(0x0E, "Falling tiles east to west"),
			new(0x0F, "Falling tiles south to north"),
			new(0x10, "Pirogusu spawner left"),
			new(0x11, "Pirogusu spawner right"),
			new(0x12, "Pirogusu spawner top"),
			new(0x13, "Pirogusu spawner bottom"),
			new(0x14, "Tile room"),
			new(0x15, "Wizzrobe spawner"),
			new(0x16, "Zoro spawner"),
			new(0x17, "Pot trap"),
			new(0x18, "Invisible stalfos"),
			new(0x19, "Armos coordinator"),
			new(0x1A, "Bad switch bomb"),
		};

		public static readonly ItemReceiptName[] ListOfItemReceipts =
		{
			new(0x00, "Fighter sword"),
			new(0x01, "Master sword"),
			new(0x02, "Tempered sword"),
			new(0x03, "Butter sword"),
			new(0x04, "Fighter shield"),
			new(0x05, "Fire shield"),
			new(0x06, "Mirror shield"),
			new(0x07, "Fire rod"),
			new(0x08, "Ice rod"),
			new(0x09, "Hammer"),
			new(0x0A, "Hookshot"),
			new(0x0B, "Bow"),
			new(0x0C, "Boomerang"),
			new(0x0D, "Powder"),
			new(0x0E, "Bottle refill (bee)"),
			new(0x0F, "Bombos"),
			new(0x10, "Ether"),
			new(0x11, "Quake"),
			new(0x12, "Lamp"),
			new(0x13, "Shovel"),
			new(0x14, "Flute"),
			new(0x15, "Somaria"),
			new(0x16, "Bottle"),
			new(0x17, "Heart piece"),
			new(0x18, "Byrna"),
			new(0x19, "Cape"),
			new(0x1A, "Mirror"),
			new(0x1B, "Glove"),
			new(0x1C, "Mitts"),
			new(0x1D, "Book"),
			new(0x1E, "Flippers"),
			new(0x1F, "Pearl"),
			new(0x20, "Crystal"),
			new(0x21, "Net"),
			new(0x22, "Blue mail"),
			new(0x23, "Red mail"),
			new(0x24, "Small key"),
			new(0x25, "Compass"),
			new(0x26, "Heart container from 4/4"),
			new(0x27, "Bomb"),
			new(0x28, "3 Bombs"),
			new(0x29, "Mushroom"),
			new(0x2A, "Red boomerang"),
			new(0x2B, "Full bottle (red)"),
			new(0x2C, "Full bottle (green)"),
			new(0x2D, "Full bottle (blue)"),
			new(0x2E, "Potion refill (red)"),
			new(0x2F, "Potion refill (green)"),
			new(0x30, "Potion refill (blue)"),
			new(0x31, "10 Bombs"),
			new(0x32, "Big key"),
			new(0x33, "Map"),
			new(0x34, "1 Rupee"),
			new(0x35, "5 Rupees"),
			new(0x36, "20 Rupees"),
			new(0x37, "Green pendant"),
			new(0x38, "Blue pendant"),
			new(0x39, "Red pendant"),
			new(0x3A, "Tossed bow"),
			new(0x3B, "Silvers"),
			new(0x3C, "Full bottle (bee)"),
			new(0x3D, "Full bottle (fairy)"),
			new(0x3E, "Boss hc"),
			new(0x3F, "Sanc hc"),
			new(0x40, "100 Rupees"),
			new(0x41, "50 Rupees"),
			new(0x42, "Heart"),
			new(0x43, "Arrow"),
			new(0x44, "10 Arrows"),
			new(0x45, "Small magic"),
			new(0x46, "300 Rupees"),
			new(0x47, "20 Rupees green"),
			new(0x48, "Full bottle (good bee)"),
			new(0x49, "Tossed fighter sword"),
			new(0x4A, "Bottle refill (good bee)"),
			new(0x4B, "Boots"),

			//"Max Bombs(VT)",
			//"Max Arrows(VT)",
			//"Half Magic(VT)",
			//"Quarter Magic(VT)",
			//"L2 master Sword (VT)",
			//"+5 max bombs(VT)",
			//"+10 max bombs(VT)",
			//"+5 max arrows(VT)",
			//"+10 max arrows(VT)",
			//"Trap1(VT)",
			//"Trap2(VT)",
			//"Trap3(VT)",
			//"Silver Arrows(VT)",
			//"Rupoor(VT)",
			//"Null Item?(VT)",
			//"Red Clock(VT)",
			//"Blue Clock(VT)",
			//"Green Clock(VT)",
			//"Progressive Sword(VT)",
			//"Progressive Shield(VT)",
			//"Progressive Armor(VT)",
			//"Progressive Lifting Glove(VT)",
			//"RNG Pool Item (Single)(VT)",
			//"RNG Pool Item (Multi)(VT)" ,// 99
            //"","","","","","","",
			//"Goal Item (Single/Triforce)(VT)", //
            //"Goal Item (Multi/Power Star)(VT)", // 6B
            //"","","",
			//"Escape Map(VT)",
			//"Hyrule Castle Map(VT)",
			//"Eastern Map(VT)",
			//"Desert Map",
			//"Hyrule Castle2 Map(VT)",
			//"Swamp Map(VT)",
			//"Dark Map(VT)",
			//"Mire Map(VT)",
			//"Skull Map(VT)",
			//"Ice Map(VT)",
			//"Hera Map(VT)",
			//"Thieve Map(VT)",
			//"Turtle Map(VT)",
			//"GanonTower Map(VT)",
			//"??? Map(VT)",
			//"??? Map(VT)",
			//"Escape Compass(VT)",
			//"Hyrule Castle Compass(VT)",
			//"Eastern Compass(VT)",
			//"Desert Compass(VT)",
			//"Hyrule Castle2 Compass(VT)",
			//"Swamp Compass(VT)",
			//"Dark Compass(VT)",
			//"Mire Compass(VT)",
			//"Skull Compass(VT)",
			//"Ice Compass(VT)",
			//"Hera Compass(VT)",
			//"Thieve Compass(VT)",
			//"Turtle Compass(VT)",
			//"GanonTower Compass(VT)",
			//"??? Compass(VT)",
			//"??? Compass(VT)",
			//"Escape Big Key(VT)",
			//"Hyrule Castle Big Key(VT)",
			//"Eastern Big Key(VT)",
			//"Desert Big Key(VT)",
			//"Hyrule Castle2 Big Key(VT)",
			//"Swamp Big Key(VT)",
			//"Dark Big Key(VT)",
			//"Mire Big Key(VT)",
			//"Skull Big Key(VT)",
			//"Ice Big Key(VT)",
			//"Hera Big Key(VT)",
			//"Thieve Big Key(VT)",
			//"Turtle Big Key(VT)",
			//"GanonTower Big Key(VT)",
			//"??? Big Key(VT)",
			//"??? Big Key(VT)",
			//"Escape Key(VT)",
			//"Hyrule Castle Key(VT)",
			//"Eastern Key(VT)",
			//"Desert Key(VT)",
			//"Hyrule Castle2 Key(VT)",
			//"Swamp Key(VT)",
			//"Dark Key(VT)",
			//"Mire Key(VT)",
			//"Skull Key(VT)",
			//"Ice Key(VT)",
			//"Hera Key(VT)",
			//"Thieve Key(VT)",
			//"Turtle Key(VT)",
			//"GanonTower Key(VT)",
			//"??? Key(VT)",
			//"??? Key(VT)"
		};

		// TODO rename everything
		public static readonly RoomTagName[] ListOfRoomTags =
		{
			new(0x00, "Nothing"),
			new(0x01, "NW Kill Enemy to Open"),
			new(0x02, "NE Kill Enemy to Open"),
			new(0x03, "SW Kill Enemy to Open"),
			new(0x04, "SE Kill Enemy to Open"),
			new(0x05, "W Kill Enemy to Open"),
			new(0x06, "E Kill Enemy to Open"),
			new(0x07, "N Kill Enemy to Open"),
			new(0x08, "S Kill Enemy to Open"),
			new(0x09, "Clear Quadrant to Open"),
			new(0x0A, "Clear Full Tile to Open"),
			new(0x0B, "NW Push Block to Open"),
			new(0x0C, "NE Push Block to Open"),
			new(0x0D, "SW Push Block to Open"),
			new(0x0E, "SE Push Block to Open"),
			new(0x0F, "W Push Block to Open"),
			new(0x10, "E Push Block to Open"),
			new(0x11, "N Push Block to Open"),
			new(0x12, "S Push Block to Open"),
			new(0x13, "Push Block to Open"),
			new(0x14, "Pull Lever to Open"),
			new(0x15, "Collect Prize to Open"),
			new(0x16, "Hold Switch Open Door"),
			new(0x17, "Toggle Switch to Open Door"),
			new(0x18, "Turn off Water"),
			new(0x19, "Turn on Water"),
			new(0x1A, "Water Gate"),
			new(0x1B, "Water Twin"),
			new(0x1C, "Moving Wall Right"),
			new(0x1D, "Moving Wall Left"),
			new(0x1E, "Crash"),
			new(0x1F, "Crash"),
			new(0x20, "Push Switch Exploding Wall"),
			new(0x21, "Holes 0"),
			new(0x22, "Open Chest (Holes 0)"),
			new(0x23, "Holes 1"),
			new(0x24, "Holes 2"),
			new(0x25, "Defeat Boss for Dungeon Prize"),
			new(0x26, "SE Kill Enemy to Push Block"),
			new(0x27, "Trigger Switch Chest"),
			new(0x28, "Pull Lever Exploding Wall"),
			new(0x29, "NW Kill Enemy for Chest"),
			new(0x2A, "NE Kill Enemy for Chest"),
			new(0x2B, "SW Kill Enemy for Chest"),
			new(0x2C, "SE Kill Enemy for Chest"),
			new(0x2D, "W Kill Enemy for Chest"),
			new(0x2E, "E Kill Enemy for Chest"),
			new(0x2F, "N Kill Enemy for Chest"),
			new(0x30, "S Kill Enemy for Chest"),
			new(0x31, "Clear Quadrant for Chest"),
			new(0x32, "Clear Full Tile for Chest"),
			new(0x33, "Light Torches to Open"),
			new(0x34, "Holes 3"),
			new(0x35, "Holes 4"),
			new(0x36, "Holes 5"),
			new(0x37, "Holes 6"),
			new(0x38, "Agahnim Room"),
			new(0x39, "Holes 7"),
			new(0x3A, "Holes 8"),
			new(0x3B, "Open Chest for Holes 8"),
			new(0x3C, "Push Block for Chest"),
			new(0x3D, "Clear Room for Triforce Door"),
			new(0x3E, "Light Torches for Chest"),
			new(0x3F, "Kill Boss Again")
		};

		public static readonly RoomObjectName[] ListOfSubtype1RoomObjects =
		{
			new(0x000, "Ceiling ↔"),
			new(0x001, "Wall (top, north) ↔"),
			new(0x002, "Wall (top, south) ↔"),
			new(0x003, "Wall (bottom, north) ↔"),
			new(0x004, "Wall (bottom, south) ↔"),
			new(0x005, "Wall columns (north) ↔"),
			new(0x006, "Wall columns (south) ↔"),
			new(0x007, "Deep wall (north) ↔"),
			new(0x008, "Deep wall (south) ↔"),
			new(0x009, "Diagonal wall A ◤ (top) ↔"),
			new(0x00A, "Diagonal wall A ◣ (top) ↔"),
			new(0x00B, "Diagonal wall A ◥ (top) ↔"),
			new(0x00C, "Diagonal wall A ◢ (top) ↔"),
			new(0x00D, "Diagonal wall B ◤ (top) ↔"),
			new(0x00E, "Diagonal wall B ◣ (top) ↔"),
			new(0x00F, "Diagonal wall B ◥ (top) ↔"),
			new(0x010, "Diagonal wall B ◢ (top) ↔"),
			new(0x011, "Diagonal wall C ◤ (top) ↔"),
			new(0x012, "Diagonal wall C ◣ (top) ↔"),
			new(0x013, "Diagonal wall C ◥ (top) ↔"),
			new(0x014, "Diagonal wall C ◢ (top) ↔"),
			new(0x015, "Diagonal wall A ◤ (bottom) ↔"),
			new(0x016, "Diagonal wall A ◣ (bottom) ↔"),
			new(0x017, "Diagonal wall A ◥ (bottom) ↔"),
			new(0x018, "Diagonal wall A ◢ (bottom) ↔"),
			new(0x019, "Diagonal wall B ◤ (bottom) ↔"),
			new(0x01A, "Diagonal wall B ◣ (bottom) ↔"),
			new(0x01B, "Diagonal wall B ◥ (bottom) ↔"),
			new(0x01C, "Diagonal wall B ◢ (bottom) ↔"),
			new(0x01D, "Diagonal wall C ◤ (bottom) ↔"),
			new(0x01E, "Diagonal wall C ◣ (bottom) ↔"),
			new(0x01F, "Diagonal wall C ◥ (bottom) ↔"),
			new(0x020, "Diagonal wall C ◢ (bottom) ↔"),
			new(0x021, "Platform stairs ↔"),
			new(0x022, "Rail ↔"),
			new(0x023, "Pit edge ┏━┓ A (north) ↔"),
			new(0x024, "Pit edge ┏━┓ B (north) ↔"),
			new(0x025, "Pit edge ┏━┓ C (north) ↔"),
			new(0x026, "Pit edge ┏━┓ D (north) ↔"),
			new(0x027, "Pit edge ┏━┓ E (north) ↔"),
			new(0x028, "Pit edge ┗━┛ (south) ↔"),
			new(0x029, "Pit edge ━━━ (south) ↔"),
			new(0x02A, "Pit edge ━━━ (north) ↔"),
			new(0x02B, "Pit edge ━━┛ (south) ↔"),
			new(0x02C, "Pit edge ┗━━ (south) ↔"),
			new(0x02D, "Pit edge ━━┓ (north) ↔"),
			new(0x02E, "Pit edge ┏━━ (north) ↔"),
			new(0x02F, "Rail wall (north) ↔"),
			new(0x030, "Rail wall (south) ↔"),
			new(0x031, "Nothing"),
			new(0x032, "Nothing"),
			new(0x033, "Carpet ↔"),
			new(0x034, "Carpet trim ↔"),
			new(0x035, "Weird door"), // TODO: WEIRD DOOR OBJECT NEEDS INVESTIGATION
			new(0x036, "Drapes (north) ↔"),
			new(0x037, "Drapes (west, odd) ↔"),
			new(0x038, "Statues ↔"),
			new(0x039, "Columns ↔"),
			new(0x03A, "Wall decors (north) ↔"),
			new(0x03B, "Wall decors (south) ↔"),
			new(0x03C, "Chairs in pairs ↔"),
			new(0x03D, "Tall torches ↔"),
			new(0x03E, "Supports (north) ↔"),
			new(0x03F, "Water edge ┏━┓ (concave) ↔"),
			new(0x040, "Water edge ┗━┛ (concave) ↔"),
			new(0x041, "Water edge ┏━┓ (convex) ↔"),
			new(0x042, "Water edge ┗━┛ (convex) ↔"),
			new(0x043, "Water edge ┏━┛ (concave) ↔"),
			new(0x044, "Water edge ┗━┓ (concave) ↔"),
			new(0x045, "Water edge ┗━┓ (convex) ↔"),
			new(0x046, "Water edge ┏━┛ (convex) ↔"),
			new(0x047, "Unknown"), // TODO: NEEDS IN GAME CHECKING
			new(0x048, "Unknown"), // TODO: NEEDS IN GAME CHECKING
			new(0x049, "Unknown"), // TODO: NEEDS IN GAME CHECKING
			new(0x04A, "Unknown"), // TODO: NEEDS IN GAME CHECKING
			new(0x04B, "Supports (south) ↔"),
			new(0x04C, "Bar ↔"),
			new(0x04D, "Shelf A ↔"),
			new(0x04E, "Shelf B ↔"),
			new(0x04F, "Shelf C ↔"),
			new(0x050, "Somaria path ↔"),
			new(0x051, "Cannon hole A (north) ↔"),
			new(0x052, "Cannon hole A (south) ↔"),
			new(0x053, "Pipe path ↔"),
			new(0x054, "Nothing"),
			new(0x055, "Wall torches (north) ↔"),
			new(0x056, "Wall torches (south) ↔"),
			new(0x057, "Nothing"),
			new(0x058, "Nothing"),
			new(0x059, "Nothing"),
			new(0x05A, "Nothing"),
			new(0x05B, "Cannon hole B (north) ↔"),
			new(0x05C, "Cannon hole B (south) ↔"),
			new(0x05D, "Thick rail ↔"),
			new(0x05E, "Blocks ↔"),
			new(0x05F, "Long rail ↔"),
			new(0x060, "Ceiling ↕"),
			new(0x061, "Wall (top, west) ↕"),
			new(0x062, "Wall (top, east) ↕"),
			new(0x063, "Wall (bottom, west) ↕"),
			new(0x064, "Wall (bottom, east) ↕"),
			new(0x065, "Wall columns (west) ↕"),
			new(0x066, "Wall columns (east) ↕"),
			new(0x067, "Deep wall (west) ↕"),
			new(0x068, "Deep wall (east) ↕"),
			new(0x069, "Rail ↕"),
			new(0x06A, "Pit edge (west) ↕"),
			new(0x06B, "Pit edge (east) ↕"),
			new(0x06C, "Rail wall (west) ↕"),
			new(0x06D, "Rail wall (east) ↕"),
			new(0x06E, "Nothing"),
			new(0x06F, "Nothing"),
			new(0x070, "Carpet ↕"),
			new(0x071, "Carpet trim ↕"),
			new(0x072, "Nothing"),
			new(0x073, "Drapes (west) ↕"),
			new(0x074, "Drapes (east) ↕"),
			new(0x075, "Columns ↕"),
			new(0x076, "Wall decors (west) ↕"),
			new(0x077, "Wall decors (east) ↕"),
			new(0x078, "Supports (west) ↕"),
			new(0x079, "Water edge (west) ↕"),
			new(0x07A, "Water edge (east) ↕"),
			new(0x07B, "Supports (east) ↕"),
			new(0x07C, "Somaria path ↕"),
			new(0x07D, "Pipe path ↕"),
			new(0x07E, "Nothing"),
			new(0x07F, "Wall torches (west) ↕"),
			new(0x080, "Wall torches (east) ↕"),
			new(0x081, "Wall decors tight A (west) ↕"),
			new(0x082, "Wall decors tight A (east) ↕"),
			new(0x083, "Wall decors tight B (west) ↕"),
			new(0x084, "Wall decors tight B (east) ↕"),
			new(0x085, "Cannon hole (west) ↕"),
			new(0x086, "Cannon hole (east) ↕"),
			new(0x087, "Tall torches ↕"),
			new(0x088, "Thick rail ↕"),
			new(0x089, "Blocks ↕"),
			new(0x08A, "Long rail ↕"),
			new(0x08B, "Jump ledge (west) ↕"),
			new(0x08C, "Jump ledge (east) ↕"),
			new(0x08D, "Rug trim (west) ↕"),
			new(0x08E, "Rug trim (east) ↕"),
			new(0x08F, "Bar ↕"),
			new(0x090, "Wall flair (west) ↕"),
			new(0x091, "Wall flair (east) ↕"),
			new(0x092, "Blue pegs ↕"),
			new(0x093, "Orange pegs ↕"),
			new(0x094, "Invisible floor ↕"),
			new(0x095, "Fake pots ↕"),
			new(0x096, "Hammer pegs ↕"),
			new(0x097, "Nothing"),
			new(0x098, "Nothing"),
			new(0x099, "Nothing"),
			new(0x09A, "Nothing"),
			new(0x09B, "Nothing"),
			new(0x09C, "Nothing"),
			new(0x09D, "Nothing"),
			new(0x09E, "Nothing"),
			new(0x09F, "Nothing"),
			new(0x0A0, "Diagonal ceiling A ◤"),
			new(0x0A1, "Diagonal ceiling A ◣"),
			new(0x0A2, "Diagonal ceiling A ◥"),
			new(0x0A3, "Diagonal ceiling A ◢"),
			new(0x0A4, "Pit ⇲"),
			new(0x0A5, "Diagonal layer 2 mask A ◤"),
			new(0x0A6, "Diagonal layer 2 mask A ◣"),
			new(0x0A7, "Diagonal layer 2 mask A ◥"),
			new(0x0A8, "Diagonal layer 2 mask A ◢"),
			new(0x0A9, "Diagonal layer 2 mask B ◤"), // TODO: VERIFY
			new(0x0AA, "Diagonal layer 2 mask B ◣"), // TODO: VERIFY
			new(0x0AB, "Diagonal layer 2 mask B ◥"), // TODO: VERIFY
			new(0x0AC, "Diagonal layer 2 mask B ◢"), // TODO: VERIFY
			new(0x0AD, "Nothing"),
			new(0x0AE, "Nothing"),
			new(0x0AF, "Nothing"),
			new(0x0B0, "Jump ledge (north) ↔"),
			new(0x0B1, "Jump ledge (south) ↔"),
			new(0x0B2, "Rug ↔"),
			new(0x0B3, "Rug trim (north) ↔"),
			new(0x0B4, "Rug trim (south) ↔"),
			new(0x0B5, "Archery game curtains ↔"),
			new(0x0B6, "Wall flair (north) ↔"),
			new(0x0B7, "Wall flair (south) ↔"),
			new(0x0B8, "Blue pegs ↔"),
			new(0x0B9, "Orange pegs ↔"),
			new(0x0BA, "Invisible floor ↔"),
			new(0x0BB, "Fake pressure plates ↔"),
			new(0x0BC, "Fake pots ↔"),
			new(0x0BD, "Hammer pegs ↔"),
			new(0x0BE, "Nothing"),
			new(0x0BF, "Nothing"),
			new(0x0C0, "Ceiling (large) ⇲"),
			new(0x0C1, "Chest platform (tall) ⇲"),
			new(0x0C2, "Layer 2 pit mask (large) ⇲"),
			new(0x0C3, "Layer 2 pit mask (medium) ⇲"),
			new(0x0C4, "Floor 1 ⇲"),
			new(0x0C5, "Floor 3 ⇲"),
			new(0x0C6, "Layer 2 mask (large) ⇲"),
			new(0x0C7, "Floor 4 ⇲"),
			new(0x0C8, "Water floor ⇲ "),
			new(0x0C9, "Flood water (medium) ⇲ "),
			new(0x0CA, "Conveyor floor ⇲ "),
			new(0x0CB, "Nothing"),
			new(0x0CC, "Nothing"),
			new(0x0CD, "Moving wall (west) ⇲"),
			new(0x0CE, "Moving wall (east) ⇲"),
			new(0x0CF, "Nothing"),
			new(0x0D0, "Nothing"),
			new(0x0D1, "Icy floor A ⇲"),
			new(0x0D2, "Icy floor B ⇲"),
			new(0x0D3, "Moving wall flag"), // TODO: WTF IS THIS?
			new(0x0D4, "Moving wall flag"), // TODO: WTF IS THIS?
			new(0x0D5, "Moving wall flag"), // TODO: WTF IS THIS?
			new(0x0D6, "Moving wall flag"), // TODO: WTF IS THIS?
			new(0x0D7, "Layer 2 mask (medium) ⇲"),
			new(0x0D8, "Flood water (large) ⇲"),
			new(0x0D9, "Layer 2 swim mask ⇲"),
			new(0x0DA, "Flood water B (large) ⇲"),
			new(0x0DB, "Floor 2 ⇲"),
			new(0x0DC, "Chest platform (short) ⇲"),
			new(0x0DD, "Table / rock ⇲"),
			new(0x0DE, "Spike blocks ⇲"),
			new(0x0DF, "Spiked floor ⇲"),
			new(0x0E0, "Floor 7 ⇲"),
			new(0x0E1, "Tiled floor ⇲"),
			new(0x0E2, "Rupee floor ⇲"),
			new(0x0E3, "Conveyor upwards ⇲"),
			new(0x0E4, "Conveyor downwards ⇲"),
			new(0x0E5, "Conveyor leftwards ⇲"),
			new(0x0E6, "Conveyor rightwards ⇲"),
			new(0x0E7, "Heavy current water ⇲"),
			new(0x0E8, "Floor 10 ⇲"),
			new(0x0E9, "Nothing"),
			new(0x0EA, "Nothing"),
			new(0x0EB, "Nothing"),
			new(0x0EC, "Nothing"),
			new(0x0ED, "Nothing"),
			new(0x0EE, "Nothing"),
			new(0x0EF, "Nothing"),
			new(0x0F0, "Nothing"),
			new(0x0F1, "Nothing"),
			new(0x0F2, "Nothing"),
			new(0x0F3, "Nothing"),
			new(0x0F4, "Nothing"),
			new(0x0F5, "Nothing"),
			new(0x0F6, "Nothing"),
			new(0x0F7, "Nothing"),
		};

		public static readonly RoomObjectName[] ListOfSubtype2RoomObjects =
		{
			new(0x100, "Corner (top, concave) ▛"),
			new(0x101, "Corner (top, concave) ▙"),
			new(0x102, "Corner (top, concave) ▜"),
			new(0x103, "Corner (top, concave) ▟"),
			new(0x104, "Corner (top, convex) ▟"),
			new(0x105, "Corner (top, convex) ▜"),
			new(0x106, "Corner (top, convex) ▙"),
			new(0x107, "Corner (top, convex) ▛"),
			new(0x108, "Corner (bottom, concave) ▛"),
			new(0x109, "Corner (bottom, concave) ▙"),
			new(0x10A, "Corner (bottom, concave) ▜"),
			new(0x10B, "Corner (bottom, concave) ▟"),
			new(0x10C, "Corner (bottom, convex) ▟"),
			new(0x10D, "Corner (bottom, convex) ▜"),
			new(0x10E, "Corner (bottom, convex) ▙"),
			new(0x10F, "Corner (bottom, convex) ▛"),
			new(0x110, "Kinked corner north (bottom) ▜"),
			new(0x111, "Kinked corner south (bottom) ▟"),
			new(0x112, "Kinked corner north (bottom) ▛"),
			new(0x113, "Kinked corner south (bottom) ▙"),
			new(0x114, "Kinked corner west (bottom) ▙"),
			new(0x115, "Kinked corner west (bottom) ▛"),
			new(0x116, "Kinked corner east (bottom) ▟"),
			new(0x117, "Kinked corner east (bottom) ▜"),
			new(0x118, "Deep corner (concave) ▛"),
			new(0x119, "Deep corner (concave) ▙"),
			new(0x11A, "Deep corner (concave) ▜"),
			new(0x11B, "Deep corner (concave) ▟"),
			new(0x11C, "Large brazier"),
			new(0x11D, "Statue"),
			new(0x11E, "Star tile (disabled)"),
			new(0x11F, "Star tile (enabled)"),
			new(0x120, "Small torch (lit)"),
			new(0x121, "Barrel"),
			new(0x122, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x123, "Table"),
			new(0x124, "Fairy statue"),
			new(0x125, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x126, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x127, "Chair"),
			new(0x128, "Bed"),
			new(0x129, "Fireplace"),
			new(0x12A, "Mario portrait"),
			new(0x12B, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x12C, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x12D, "Interroom stairs (up)"),
			new(0x12E, "Interroom stairs (down)"),
			new(0x12F, "Interroom stairs B (down)"),
			new(0x130, "Intraroom stairs north B"), // TODO: VERIFY LAYER HANDLING
            new(0x131, "Intraroom stairs north (separate layers)"),
			new(0x132, "Intraroom stairs north (merged layers)"),
			new(0x133, "Intraroom stairs north (swim layer)"),
			new(0x134, "Block"),
			new(0x135, "Water ladder (north)"),
			new(0x136, "Water ladder (south)"), // TODO: NEEDS IN GAME VERIFICATION
            new(0x137, "Dam floodgate"),
			new(0x138, "Interroom spiral stairs up (top)"),
			new(0x139, "Interroom spiral stairs down (top)"),
			new(0x13A, "Interroom spiral stairs up (bottom)"),
			new(0x13B, "Interroom spiral stairs down (bottom)"),
			new(0x13C, "Sanctuary wall (north)"),
			new(0x13D, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x13E, "Pew"),
			new(0x13F, "Magic bat altar"),
		};

		public static readonly RoomObjectName[] ListOfSubtype3RoomObjects =
		{
			new(0x200, "Waterfall face (empty)"),
			new(0x201, "Waterfall face (short)"),
			new(0x202, "Waterfall face (long)"),
			new(0x203, "Somaria path endpoint"),
			new(0x204, "Somaria path intersection ╋"),
			new(0x205, "Somaria path corner ┏"),
			new(0x206, "Somaria path corner ┗"),
			new(0x207, "Somaria path corner ┓"),
			new(0x208, "Somaria path corner ┛"),
			new(0x209, "Somaria path intersection ┳"),
			new(0x20A, "Somaria path intersection ┻"),
			new(0x20B, "Somaria path intersection ┣"),
			new(0x20C, "Somaria path intersection ┫"),
			new(0x20D, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x20E, "Somaria path 2-way endpoint"),
			new(0x20F, "Somaria path crossover"),
			new(0x210, "Babasu hole (north)"),
			new(0x211, "Babasu hole (south)"),
			new(0x212, "9 blue rupees"),
			new(0x213, "Telepathy tile"),
			new(0x214, "Warp door"), // TODO: NEEDS IN GAME VERIFICATION THAT THIS IS USELESS
            new(0x215, "Kholdstare's shell"),
			new(0x216, "Hammer peg"),
			new(0x217, "Prison cell"),
			new(0x218, "Big key lock"),
			new(0x219, "Chest"),
			new(0x21A, "Chest (open)"),
			new(0x21B, "Intraroom stairs south"), // TODO: VERIFY LAYER HANDLING
            new(0x21C, "Intraroom stairs south (separate layers)"),
			new(0x21D, "Intraroom stairs south (merged layers)"),
			new(0x21E, "Interroom straight stairs up (north, top)"),
			new(0x21F, "Interroom straight stairs down (north, top)"),
			new(0x220, "Interroom straight stairs up (south, top)"),
			new(0x221, "Interroom straight stairs down (south, top)"),
			new(0x222, "Deep corner (convex) ▟"),
			new(0x223, "Deep corner (convex) ▜"),
			new(0x224, "Deep corner (convex) ▙"),
			new(0x225, "Deep corner (convex) ▛"),
			new(0x226, "Interroom straight stairs up (north, bottom)"),
			new(0x227, "Interroom straight stairs down (north, bottom)"),
			new(0x228, "Interroom straight stairs up (south, bottom)"),
			new(0x229, "Interroom straight stairs down (south, bottom)"),
			new(0x22A, "Lamp cones"),
			new(0x22B, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x22C, "Liftable large block"),
			new(0x22D, "Agahnim's altar"),
			new(0x22E, "Agahnim's boss room"),
			new(0x22F, "Pot"),
			new(0x230, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x231, "Big chest"),
			new(0x232, "Big chest (open)"),
			new(0x233, "Intraroom stairs south (swim layer)"),
			new(0x234, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x235, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x236, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x237, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x238, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x239, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x23A, "Pipe end (south)"),
			new(0x23B, "Pipe end (north)"),
			new(0x23C, "Pipe end (east)"),
			new(0x23D, "Pipe end (west)"),
			new(0x23E, "Pipe corner ▛"),
			new(0x23F, "Pipe corner ▙"),
			new(0x240, "Pipe corner ▜"),
			new(0x241, "Pipe corner ▟"),
			new(0x242, "Pipe-rock intersection ⯊"),
			new(0x243, "Pipe-rock intersection ⯋"),
			new(0x244, "Pipe-rock intersection ◖"),
			new(0x245, "Pipe-rock intersection ◗"),
			new(0x246, "Pipe crossover"),
			new(0x247, "Bombable floor"),
			new(0x248, "Fake bombable floor"),
			new(0x249, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x24A, "Warp tile"),
			new(0x24B, "Tool rack"),
			new(0x24C, "Furnace"),
			new(0x24D, "Tub (wide)"),
			new(0x24E, "Anvil"),
			new(0x24F, "Warp tile (disabled)"),
			new(0x250, "Pressure plate"),
			new(0x251, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x252, "Blue peg"),
			new(0x253, "Orange peg"),
			new(0x254, "Fortune teller room"),
			new(0x255, "Unknown"), // TODO: NEEDS IN GAME CHECKING
            new(0x256, "Bar corner ▛"),
			new(0x257, "Bar corner ▙"),
			new(0x258, "Bar corner ▜"),
			new(0x259, "Bar corner ▟"),
			new(0x25A, "Decorative bowl"),
			new(0x25B, "Tub (tall)"),
			new(0x25C, "Bookcase"),
			new(0x25D, "Range"),
			new(0x25E, "Suitcase"),
			new(0x25F, "Bar bottles"),
			new(0x260, "Arrow game hole (west)"),
			new(0x261, "Arrow game hole (east)"),
			new(0x262, "Vitreous goo graphics"),
			new(0x263, "Fake pressure plate"),
			new(0x264, "Medusa head"),
			new(0x265, "4-way shooter block"),
			new(0x266, "Pit"),
			new(0x267, "Wall crack (north)"),
			new(0x268, "Wall crack (south)"),
			new(0x269, "Wall crack (west)"),
			new(0x26A, "Wall crack (east)"),
			new(0x26B, "Large decor"),
			new(0x26C, "Water grate (north)"),
			new(0x26D, "Water grate (south)"),
			new(0x26E, "Water grate (west)"),
			new(0x26F, "Water grate (east)"),
			new(0x270, "Window sunlight"),
			new(0x271, "Floor sunlight"),
			new(0x272, "Trinexx's shell"),
			new(0x273, "Layer 2 mask (full)"),
			new(0x274, "Boss entrance"),
			new(0x275, "Minigame chest"),
			new(0x276, "Ganon door"),
			new(0x277, "Triforce wall ornament"),
			new(0x278, "Triforce floor tiles"),
			new(0x279, "Freezor hole"),
			new(0x27A, "Pile of bones"),
			new(0x27B, "Vitreous goo damage"),
			new(0x27C, "Arrow tile ↑"),
			new(0x27D, "Arrow tile ↓"),
			new(0x27E, "Arrow tile →"),
			new(0x27F, "Nothing"),
		};

		public static readonly TileTypeName[] ListOfTileTypes =
		{
			new(0x00, "Nothing (standard floor)"),
			new(0x01, "Collision"),
			new(0x02, "Collision"),
			new(0x03, "Collision"),
			new(0x04, "Collision"),
			new(0x05, "Nothing"),
			new(0x06, "Nothing"),
			new(0x07, "Nothing"),
			new(0x08, "Deep water"),
			new(0x09, "Shallow water"),
			new(0x0A, "Short water ladder"),
			new(0x0B, "Collision (weird deep water in Overworld)"),
			new(0x0C, "Overlay mask"),
			new(0x0D, "Spike floor"),
			new(0x0E, "GT ice"),
			new(0x0F, "Ice palace ice"),
			new(0x10, "Slope ◤"),
			new(0x11, "Slope ◥"),
			new(0x12, "Slope ◣"),
			new(0x13, "Slope ◢"),
			new(0x14, "Nothing"),
			new(0x15, "Nothing"),
			new(0x16, "Nothing"),
			new(0x17, "Nothing"),
			new(0x18, "Slope ◤"),
			new(0x19, "Slope ◥"),
			new(0x1A, "Slope ◣"),
			new(0x1B, "Slope ◢"),
			new(0x1C, "Layer 2 overlay"),
			new(0x1D, "North single-layer auto stairs"),
			new(0x1E, "North layer-swap auto stairs"),
			new(0x1F, "North layer-swap auto stairs"),
			new(0x20, "Pit"),
			new(0x21, "Nothing"),
			new(0x22, "Manual stairs"),
			new(0x23, "Pot switch"),
			new(0x24, "Pressure switch"),
			new(0x25, "Nothing (unused but referenced by somaria blocks)"),
			new(0x26, "Collision (near stairs?)"),
			new(0x27, "Hookshottable object"),
			new(0x28, "North ledge"),
			new(0x29, "South ledge"),
			new(0x2A, "East ledge"),
			new(0x2B, "West ledge"),
			new(0x2C, "◤ ledge"),
			new(0x2D, "◣ ledge"),
			new(0x2E, "◥ ledge"),
			new(0x2F, "◢ ledge"),
			new(0x30, "Straight inter-room stairs south/up 0"),
			new(0x31, "Straight inter-room stairs south/up 1"),
			new(0x32, "Straight inter-room stairs south/up 2"),
			new(0x33, "Straight inter-room stairs south/up 3"),
			new(0x34, "Straight inter-room stairs north/down 0"),
			new(0x35, "Straight inter-room stairs north/down 1"),
			new(0x36, "Straight inter-room stairs north/down 2"),
			new(0x37, "Straight inter-room stairs north/down 3"),
			new(0x38, "Straight inter-room stairs north/down edge"),
			new(0x39, "Straight inter-room stairs south/up edge"),
			new(0x3A, "Star tile (inactive on load)"),
			new(0x3B, "Star tile (active on load)"),
			new(0x3C, "Nothing"),
			new(0x3D, "South single-layer auto stairs"),
			new(0x3E, "South layer-swap auto stairs"),
			new(0x3F, "South layer-swap auto stairs"),
			new(0x40, "Thick grass"),
			new(0x41, "Nothing"),
			new(0x42, "Gravestone"),
			new(0x43, "Skull Woods entrance"),
			new(0x44, "Spike"),
			new(0x45, "Nothing"),
			new(0x46, "Desert Tablet"),
			new(0x47, "Nothing"),
			new(0x48, "Diggable ground"),
			new(0x49, "Nothing"),
			new(0x4A, "Diggable ground"),
			new(0x4B, "Warp tile"),
			new(0x4C, "Nothing / Overworld square corner"),
			new(0x4D, "Nothing / Overworld square corner"),
			new(0x4E, "Nothing / Overworld square corner"),
			new(0x4F, "Nothing / Overworld square corner"),
			new(0x50, "Green bush"),
			new(0x51, "Dark bush"),
			new(0x52, "Gray rock"),
			new(0x53, "Black rock"),
			new(0x54, "Hint tile/Sign"),
			new(0x55, "Big gray rock"),
			new(0x56, "Big black rock"),
			new(0x57, "Bonk rocks"),
			new(0x58, "Chest 0"),
			new(0x59, "Chest 1"),
			new(0x5A, "Chest 2"),
			new(0x5B, "Chest 3"),
			new(0x5C, "Chest 4"),
			new(0x5D, "Chest 5"),
			new(0x5E, "Spiral stairs"),
			new(0x5F, "Spiral stairs"),
			new(0x60, "Rupee tile"),
			new(0x61, "Nothing"),
			new(0x62, "Bombable floor"),
			new(0x63, "Minigame chest"),
			new(0x64, "Nothing"),
			new(0x65, "Nothing"),
			new(0x66, "Crystal peg down"),
			new(0x67, "Crystal peg up"),
			new(0x68, "Upwards conveyor"),
			new(0x69, "Downwards conveyor"),
			new(0x6A, "Leftwards conveyor"),
			new(0x6B, "Rightwards conveyor"),
			new(0x6C, "North vines"),
			new(0x6D, "South vines"),
			new(0x6E, "West vines"),
			new(0x6F, "East vines"),
			new(0x70, "Pot/Hammer peg/Push block 00"),
			new(0x71, "Pot/Hammer peg/Push block 01"),
			new(0x72, "Pot/Hammer peg/Push block 02"),
			new(0x73, "Pot/Hammer peg/Push block 03"),
			new(0x74, "Pot/Hammer peg/Push block 04"),
			new(0x75, "Pot/Hammer peg/Push block 05"),
			new(0x76, "Pot/Hammer peg/Push block 06"),
			new(0x77, "Pot/Hammer peg/Push block 07"),
			new(0x78, "Pot/Hammer peg/Push block 08"),
			new(0x79, "Pot/Hammer peg/Push block 09"),
			new(0x7A, "Pot/Hammer peg/Push block 0A"),
			new(0x7B, "Pot/Hammer peg/Push block 0B"),
			new(0x7C, "Pot/Hammer peg/Push block 0C"),
			new(0x7D, "Pot/Hammer peg/Push block 0D"),
			new(0x7E, "Pot/Hammer peg/Push block 0E"),
			new(0x7F, "Pot/Hammer peg/Push block 0F"),
			new(0x80, "North/South door"),
			new(0x81, "East/West door"),
			new(0x82, "North/South shutter door"),
			new(0x83, "East/West shutter door"),
			new(0x84, "North/South layer 2 door"),
			new(0x85, "East/West layer 2 door"),
			new(0x86, "North/South layer 2 shutter door"),
			new(0x87, "East/West layer 2 shutter door"),
			new(0x88, "Some type of door (?)"),
			new(0x89, "East/West transport door"),
			new(0x8A, "Some type of door (?)"),
			new(0x8B, "Some type of door (?)"),
			new(0x8C, "Some type of door (?)"),
			new(0x8D, "Some type of door (?)"),
			new(0x8E, "Entrance door"),
			new(0x8F, "Entrance door"),
			new(0x90, "Layer toggle shutter door (?)"),
			new(0x91, "Layer toggle shutter door (?)"),
			new(0x92, "Layer toggle shutter door (?)"),
			new(0x93, "Layer toggle shutter door (?)"),
			new(0x94, "Layer toggle shutter door (?)"),
			new(0x95, "Layer toggle shutter door (?)"),
			new(0x96, "Layer toggle shutter door (?)"),
			new(0x97, "Layer toggle shutter door (?)"),
			new(0x98, "Layer+Dungeon toggle shutter door (?)"),
			new(0x99, "Layer+Dungeon toggle shutter door (?)"),
			new(0x9A, "Layer+Dungeon toggle shutter door (?)"),
			new(0x9B, "Layer+Dungeon toggle shutter door (?)"),
			new(0x9C, "Layer+Dungeon toggle shutter door (?)"),
			new(0x9D, "Layer+Dungeon toggle shutter door (?)"),
			new(0x9E, "Layer+Dungeon toggle shutter door (?)"),
			new(0x9F, "Layer+Dungeon toggle shutter door (?)"),
			new(0xA0, "North/South Dungeon swap door"),
			new(0xA1, "Dungeon toggle door (?)"),
			new(0xA2, "Dungeon toggle door (?)"),
			new(0xA3, "Dungeon toggle door (?)"),
			new(0xA4, "Dungeon toggle door (?)"),
			new(0xA5, "Dungeon toggle door (?)"),
			new(0xA6, "Nothing"),
			new(0xA7, "Nothing"),
			new(0xA8, "Layer+Dungeon toggle shutter door (?)"),
			new(0xA9, "Layer+Dungeon toggle shutter door (?)"),
			new(0xAA, "Layer+Dungeon toggle shutter door (?)"),
			new(0xAB, "Layer+Dungeon toggle shutter door (?)"),
			new(0xAC, "Layer+Dungeon toggle shutter door (?)"),
			new(0xAD, "Layer+Dungeon toggle shutter door (?)"),
			new(0xAE, "Layer+Dungeon toggle shutter door (?)"),
			new(0xAF, "Layer+Dungeon toggle shutter door (?)"),
			new(0xB0, "Somaria ─"),
			new(0xB1, "Somaria │"),
			new(0xB2, "Somaria ┌"),
			new(0xB3, "Somaria └"),
			new(0xB4, "Somaria ┐"),
			new(0xB5, "Somaria ┘"),
			new(0xB6, "Somaria ⍰ 1 way"),
			new(0xB7, "Somaria ┬"),
			new(0xB8, "Somaria ┴"),
			new(0xB9, "Somaria ├"),
			new(0xBA, "Somaria ┤"),
			new(0xBB, "Somaria ┼"),
			new(0xBC, "Somaria ⍰ 2 way"),
			new(0xBD, "Somaria ┼ crossover"),
			new(0xBE, "Pipe entrance"),
			new(0xBF, "Nothing"),
			new(0xC0, "Torch 00"),
			new(0xC1, "Torch 01"),
			new(0xC2, "Torch 02"),
			new(0xC3, "Torch 03"),
			new(0xC4, "Torch 04"),
			new(0xC5, "Torch 05"),
			new(0xC6, "Torch 06"),
			new(0xC7, "Torch 07"),
			new(0xC8, "Torch 08"),
			new(0xC9, "Torch 09"),
			new(0xCA, "Torch 0A"),
			new(0xCB, "Torch 0B"),
			new(0xCC, "Torch 0C"),
			new(0xCD, "Torch 0D"),
			new(0xCE, "Torch 0E"),
			new(0xCF, "Torch 0F"),
			new(0xD0, "Nothing"),
			new(0xD1, "Nothing"),
			new(0xD2, "Nothing"),
			new(0xD3, "Nothing"),
			new(0xD4, "Nothing"),
			new(0xD5, "Nothing"),
			new(0xD6, "Nothing"),
			new(0xD7, "Nothing"),
			new(0xD8, "Nothing"),
			new(0xD9, "Nothing"),
			new(0xDA, "Nothing"),
			new(0xDB, "Nothing"),
			new(0xDC, "Nothing"),
			new(0xDD, "Nothing"),
			new(0xDE, "Nothing"),
			new(0xDF, "Nothing"),
			new(0xE0, "Nothing"),
			new(0xE1, "Nothing"),
			new(0xE2, "Nothing"),
			new(0xE3, "Nothing"),
			new(0xE4, "Nothing"),
			new(0xE5, "Nothing"),
			new(0xE6, "Nothing"),
			new(0xE7, "Nothing"),
			new(0xE8, "Nothing"),
			new(0xE9, "Nothing"),
			new(0xEA, "Nothing"),
			new(0xEB, "Nothing"),
			new(0xEC, "Nothing"),
			new(0xED, "Nothing"),
			new(0xEE, "Nothing"),
			new(0xEF, "Nothing"),
			new(0xF0, "Door 0 bottom"),
			new(0xF1, "Door 1 bottom"),
			new(0xF2, "Door 2 bottom"),
			new(0xF3, "Door 3 bottom"),
			new(0xF4, "Door X bottom? (unused?)"),
			new(0xF5, "Door X bottom? (unused?)"),
			new(0xF6, "Door X bottom? (unused?)"),
			new(0xF7, "Door X bottom? (unused?)"),
			new(0xF8, "Door 0 top"),
			new(0xF9, "Door 1 top"),
			new(0xFA, "Door 2 top"),
			new(0xFB, "Door 3 top"),
			new(0xFC, "Door X top? (unused?)"),
			new(0xFD, "Door X top? (unused?)"),
			new(0xFE, "Door X top? (unused?)"),
			new(0xFF, "Door X top? (unused?)")
		};

		public static readonly SecretsName[] ListOfSecrets =
		{
			new(0x00, "Nothing"),
			new(0x01, "Green rupee"),
			new(0x02, "Hoarder"),
			new(0x03, "Bee"),
			new(0x04, "Health pack"),
			new(0x05, "Bomb"),
			new(0x06, "Heart"),
			new(0x07, "Blue rupee"),
			new(0x08, "Key"),
			new(0x09, "Arrow"),
			new(0x0A, "Bomb"),
			new(0x0B, "Heart"),
			new(0x0C, "Small magic"),
			new(0x0D, "Full magic"),
			new(0x0E, "Cucco"),
			new(0x0F, "Green soldier"),
			new(0x10, "Bush stal"),
			new(0x11, "Blue soldier"),
			new(0x12, "Landmine"),
			new(0x13, "Heart"),
			new(0x14, "Fairy"),
			new(0x15, "Heart"),
			new(0x16, "Nothing"),

			new(0x80, "Hole"),
			new(0x82, "Warp"),
			new(0x84, "Staircase"),
			new(0x86, "Bombable"),
			new(0x88, "Switch")
		};

		private static readonly MusicName Music0x01 = new(0x01, "Triforce opening");
		private static readonly MusicName Music0x02 = new(0x02, "Light world");
		private static readonly MusicName Music0x03 = new(0x03, "Legend theme (rain state)");
		private static readonly MusicName Music0x04 = new(0x04, "Bunny link");
		private static readonly MusicName Music0x05 = new(0x05, "Lost woods");
		private static readonly MusicName Music0x06 = new(0x06, "Legend theme (attract mode)");
		private static readonly MusicName Music0x07 = new(0x07, "Kakariko village");
		private static readonly MusicName Music0x08 = new(0x08, "Mirror warp");
		private static readonly MusicName Music0x09 = new(0x09, "Dark world");
		private static readonly MusicName Music0x0A = new(0x0A, "Restoring the master sword");
		private static readonly MusicName Music0x0B = new(0x0B, "Faerie theme");
		private static readonly MusicName Music0x0C = new(0x0C, "Chase theme");
		private static readonly MusicName Music0x0D = new(0x0D, "Skull woods");
		private static readonly MusicName Music0x0E = new(0x0E, "Game theme");
		private static readonly MusicName Music0x0F = new(0x0F, "Intro no triforce");
		private static readonly MusicName Music0x10 = new(0x10, "Hyrule castle");
		private static readonly MusicName Music0x11 = new(0x11, "Pendant dungeon");
		private static readonly MusicName Music0x12 = new(0x12, "Caves");
		private static readonly MusicName Music0x13 = new(0x13, "Fanfare");
		private static readonly MusicName Music0x14 = new(0x14, "Sanctuary");
		private static readonly MusicName Music0x15 = new(0x15, "Boss theme");
		private static readonly MusicName Music0x16 = new(0x16, "Dark world dungeon");
		private static readonly MusicName Music0x17 = new(0x17, "Fortune teller");
		private static readonly MusicName Music0x18 = new(0x18, "Caves");
		private static readonly MusicName Music0x19 = new(0x19, "Zelda rescue");
		private static readonly MusicName Music0x1A = new(0x1A, "Crystal theme");
		private static readonly MusicName Music0x1B = new(0x1B, "Faerie theme w/ arpeggio");
		private static readonly MusicName Music0x1C = new(0x1C, "Pre aga theme");
		private static readonly MusicName Music0x1D = new(0x1D, "Agahnim escape");
		private static readonly MusicName Music0x1E = new(0x1E, "Pre-Ganon theme");
		private static readonly MusicName Music0x1F = new(0x1F, "Ganondorf the Thief");
		private static readonly MusicName Music0xF2 = new(0xF2, "Half-volume");
		private static readonly MusicName Music0xFF = new(0xFF, "Do nothing");

		public static readonly MusicName[] ListOfOverworldMusics =
		{
			Music0x01,
			Music0x02,
			Music0x03,
			Music0x04,
			Music0x05,
			Music0x06,
			Music0x07,
			Music0x08,
			Music0x09,
			Music0x0A,
			Music0x0B,
			Music0x0C,
			Music0x0D,
			Music0x0E,
			Music0x0F,
		};

		public static readonly MusicName[] ListOfUnderworldMusics =
		{
			Music0x01,
			Music0x02,
			Music0x03,
			Music0x04,
			Music0x05,
			Music0x06,
			Music0x07,
			Music0x08,
			Music0x09,
			Music0x0A,
			Music0x0B,
			Music0x0C,
			Music0x0D,
			Music0x0E,
			Music0x0F,
			Music0x10,
			Music0x11,
			Music0x12,
			Music0x13,
			Music0x14,
			Music0x15,
			Music0x16,
			Music0x17,
			Music0x18,
			Music0x19,
			Music0x1A,
			Music0x1B,
			Music0x1C,
			Music0x1D,
			Music0x1E,
			Music0x1F,
			Music0xF2,
			Music0xFF,
		};
	}
}
