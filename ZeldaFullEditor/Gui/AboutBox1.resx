<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAAd0SU1FB+ELCgMIKhiFTnUAAAFSSURBVFhHzZShccNAEEVVQmCgoMoxDAx0CSrB
        UCWkhEDDFGCQEgIDA8WU2cu8zN733knyjGWBB/Zr9/9PTs3lMj2UUNySUKzRdd1UI7qpEYo1olBPdFMj
        FCMIOAxPGf25TTD7Mkbk5QnFCAx9uHH3Ahj5UIPgEuzNFQlFz2YFdJEZxr5J+BKGBrLHHbr3Msh5fAGE
        n7djgvn79T3BDASU0H0toDn7L6DwvcTc/n4LnI9tYmmRpeCDLzno+yvArAa3oj77K6A/Hl3ohzExjn+o
        Dujsqa6+/z+i3RQAFry5oQVOn2MGuhYAvmteNhgsqsFmBYAD4BktRe+jDCMUDTWIQmrofZRhXAkcfA2H
        DHQCPp7bDA0u3WteNhhzBpsVKMFz0gL6zEpoXjYY0ZFnswKnlxxvsoTSveZlgzFnsJTSveZlg7HWQFl7
        nw3GWgNl3f3U/AJTJ+JZVkQvWgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAI0AAAApCAYAAAAI06pdAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfjAgYAGDJJYwbpAAAXaUlEQVR4Xu2cB5RURdbH
        e2AQMPutCdRFYIakgIJkFVnELKioLEGSuILyoSy6oASHnJ08w0SiIkHENRBdd00EXVclDBlEMbEGpme6
        Z6b71f/733rvdb9+9CRlz/nO2SnP71S9qltVt27dd6veOIynJtWkmlSTalJNqkk16b8tla241yqZSW0c
        OyuQc1MCXmyUgMS4BCSTpGqS3CSSaDIhmhKRcVJRuzw729245N26JFfSX9qd8pXOVwnOsfR4UWR+E9SP
        +6SyOiWozc/MtLZRJ7X8Lqt0hhLS2lgllhddP9fIvP5fKrER1LzLFeZfDmPhlcCCBlDzr4RacIUL1juZ
        b9Xb+YKGkYTqTRm4oUyI+UIF7afRIBLdn7qXi3s+11wal/xvwjmWEKnvabay7VRFYOcc1+DeyR4is92n
        KrPjHGt7PUhtYZV+ZVJJja0SB8vqNA8pzYHEJkqtvR/4aAbUwZVQX22A8e1W4MTfoL7drHN8Q+z8m3dc
        ULZCtrjKTpxyZ4qK5nC3VRfaoyJOROFrJxwjBPXRMptcbKwAaZc+Fl9vIBthHP8r1IHlwAcJUKt7A0mN
        lEqJBxZ1mGttt8d4sYlVqmZSbw6qpdb07o7Epp8yfANb/hfq+JvA8bf1xDj+BvM3oL58nTnrj70BfMn6
        CKTOibvdwbEoHHXyeuUcc2HXRWtzc3R9FF6rEHVkfQQ4InVsO/Iq83W6XB4iG8k6F2spZ2KWZcwwUofD
        Zlt01oQ5vAbqqOjDXMY+uhbGkdVQx0QXtm98HCqpKYykxv9Uq/vdrP76pxjLDaqekNY2BmnX3oLU5lB5
        XWHsX2FurBhSG5gciWZoLj7CqKKoia47ZsloI7GsjWM/S1mMYeNsc7ZLHg0a87AJJJdnGs9p+IqNTNiu
        xMAaKVeEbAgNT2RjJFdHVlmw7vCqKEh9ORxiv0OvuHDWsb9+NpEyWI9D0p/lg/bzyurD/mpPDoy8jtAn
        SkbL7shsVXXHCbwxNCa4tu/tPN9gLLuVm8zNPUYj6Q2T3DSw3oyQgaMb2tyEcNncHJGzDHWEi7Q5LHDh
        TlztBo1iI4YUI4WNKvDItNAGFEOGEHmrXiPll8vnIDnwUhh5rgR18CUNrNwIIW188X4LPFLkWLHBgWW6
        zqxfYcHywaUaHCD7BcpVgOI4SmQPLCHUc1kPKAkWq+/vpV4bWLHjYNkdVonlxMYfqvyu2lEUN8+ggQ3m
        6jA3xEGEtwpivGgbIIjhKCPjSSQIR4NysGUs7D6hvoJL3umwGtu5y8Mhq53aUY4qXxGOMapC1DGqhayb
        LyA3Wx3IA/blRyEXKMhhXgEFIpPH02Qxx1lMx8mHyu0iR9UHljt4sOQPVilKQlbXWljUeSZS42HszqYh
        5K2Wt5QeLW+Q5dmml9peXLk3m4gcF8ixFJ1IHeLbKE6ky9FwOWgUJ7XrozpwNMpzal3vkgvVWTKnIXJh
        IvS2xwlFNTsKhtenx7D1cc9fJcR+3J+CLKi9i3i8lMPeDJM9mYBVB5bNdmkTmSw6UDawl85H58FnSTCS
        mwFZ7Wcg+4ZalntEJkYVq0TH4bGk3ubFSM5lWZAOexLCGL72kf304BDireLlFuK14t36WXLbmy1Yp7RH
        S0ilI+lxo6PDr9Mxpf6gtC2HwXBqysk4Vps4pC4L4tyiq/StLjKnIGX7BXG/KMSaV+YxeBwERaeIvi75
        SjH7VwtZ5+4MkkbSgV3MNVJOjYQyandqCC0nfcRxtBPRqayoJHbGW4P1/cZyC08wt7NVcqRgWotaZIZK
        o9OIMejJ4jDm5tH7QuGOHimIZ9plYS8n014bHdhox7KcbL/tZFGQNiesU1a9Yji1HVPtl3HydK4dUiN1
        oq8tZxFy6qogfWQMG3m22ji/EuPqOtpGh3h5NvVRWl/7RflPwvm1E6RA7UoGvkiGioD1IZx1lN2Vop1J
        iTNZEcfYx4gj6yjgEbWXe5rcEoG0FtPL0lpEv9uoZbfGqqW3wsi/nuGSjiKXIv0GSISxjGY5yOnOQC8l
        tseWh4RF6FAoRnY4XDlI2BTlTcwQenJbJtZmz8ZqIWs2Xs+bhQNbaISDNKL0kfArsnvY14keq5ro0B/O
        Za2hdXNMsN7/RQZ+3JmKXz7OQNluWZ85vzlGWD6SyDbnuFXFnkc236DDhJ2iahh0FpN0GLI/XIuMZ3Cf
        BfXe4zAyrwIW82No8W2RR5T621SrpH+gx0/sRjBe78YjgA5zUEK85TT6LbU30ly0fUZqp9Bnp3NhmTBY
        Z6O9mVTVQKZRTGcMsW8RVuXMQEyjwbig1XCc3Wwozm05HPWaD0e3u0bj4/ULqbPoyHkK7DHOHPZ9wFw3
        5ziWjWmTJlKfIRj5xF/w/UcM+9TRlglh97ew68VGuk6/TGG5KiP95Gii4wTpOJFInRN3WyqdJQ3BPZbT
        8CUIcky1NxfBbc8imHs+VOYlMBKbho4ovPuCVWIyNk2IMTaMmy8/4FF5l/NT+zKoNe1oeH678+xEAUM+
        Hceg40hYljAWlE3RoUxyc9G2UaKhvdhyOHvRzigUDW1Y2/DcDHmjp0yYiLOaDsMDA8di/5ZEZC1IQKub
        RqF+/FDc/fDTOPEho84+9t3PN59R4OPXFzAqzcCO9fP5zDOcbaJPKdt+3plO0hDYlYF9mxfi9fxZOPYP
        hu39lm6MHEffTcKby2ZjZeZ0bH1pNuXpGAdMvQo/ScGQEePguWowkmZPwU87U+D/jJvIuVGQgc/fXKjn
        3vrybHj/yX60lblB6SR8lzAJv1hVg5tdkMYIR/2/SNVO4ESxzomhYZQRZ5Eyj7Qg7z6yRlmLvNgoWILA
        u8NRtqgOAlm1EcioDyU/2N30zDxsHh95RCGnfQyy202XSBPMvwiB/AsRWHwhv9npQNvG8qLHyzA90ETe
        ZLm/COIQfOaxYN7iIzFEGRdumaqC/dk4+E4K7un3NBq2H4GkmZP5pvNIOpCN13JnITZuKNr2GIVXc2YB
        R/Pw1tK5aN5tFGo3HYr6jEh1mfe8bwz+9Raj0Zc52LBsLpp2eQxX3TACrW8eiQuveRT14ofh5rtH48NX
        FwDf5mHe9CmIaTwEsU2G4Ozmw3AuaXjdo1hP5zr+fgru6PsU6scNw6VtHmXUG66j3paVc7CTjtr59tGo
        03QI6sYPQT3KxHd7HB+snWc6HF8AedmcL5WgbSR5ZVhy2EPbf8Fowc0P8mJbMSJD6CRBXp6NXRxj9yIe
        qeI43L/P01CytgNK0mJQmlEb/rRYlKXH8l7TFMjsMA2LOkY6jZEcF0OmIzkOZTl1Eciuj7LsegjknINg
        1lkIvBwHtX0iL8grqCwjjdwRdkvkyEZA3hqG2SC93+kcbkxleWSxrJ0gdGepGnJn2cHj58r2j6F9zyew
        +eW5/Nzm3edQLra+Mh+XXfeYjjiv5s7Ee2sX4Ip2pjMsTZmJz95KxMODnkFtOsD4cZOAb5YgO2kq6sYN
        wXU9R2HBzBcw8dmJuk/Tzo/hleyZdLxcbFwxV4/3E6PRZ4waffr/GZ5GQzF36hT8e3saZiZMwtUdR6Dj
        7U9yjCn4++p52PLSfNza+2lc2nYE8pOm4UfKPT5yPM6m4zw/YQKjJaOgRHBtF9Medh5t3eXDfozwAUZM
        4wvadpeQYeEsmxghOe4b84Dsxa5c03HeuBe+tDooTanDPBa+1Fj4U+g4qbV0pDGS46eRSKdRLzaOUYmN
        p6vkJtrLStJray+Tcmkm4XNJugeleZcg8MZdMN4fh8BnC6m4/FDoZcLPTvkU5sW5IoL8ZJfjrrrI56Vc
        zl9bPJ9HwSDc8SCPoW28mB/i193RZVi/eB7vFYPQvfcYrMtfiOfGT0KdJkPx7PgpwAl+BXLuF+dMh+eK
        wXjif5/Hqc/z8MLEKXSAIZg1bTpwciU2r0rEdT2eQOc7x+Af63iUfL0cP2xPx0sZMzH+mefx4KA/I77r
        nxhRhmFpOiPGj69gwaxpOI93q6fHTsHJndTn25WY+PxknN9yGO588ClMmzwZybMTcH//p3Bhq2EYN24K
        vt9BOa7FvUaxTXUw9tEuxChYzudlCBQsjUDqIlnBKwVzOlDZzhdQsnkISla2Q3GKB9602ijW0GlSYlCc
        WhtFabV0rpLjgcTG04gr0iTFx6ikeEaaJvSuWJSk1NJeJrkTv4Uv2QNfkgf+xEh8L55Z/JJz3BLO9f1c
        DxIGXofazZ9E/3t4o6cTB6jH0Zl1MOq+G1n/BB7p3RMfT7oIt/W8C3E3DEb+E3Fa7sf5Hkwe0B6eZmPw
        3IAOODwjFg/ccTsatR+K5U/yzM7yIHdkHM5tNQID7/0DTsyNxbJRv8eVbQbi8jbD0PeuuzC4Ty806zAI
        13Xth01/uQxI82Dk/TfC02QMUh5riWAqXyrqOuSeW1C/xUh0vOkh3HnbvbitVx/SG916PIBVTzVB0ULL
        VpbNfi3R7FUlpK/sHZ1D9thPxwhjP1u5HFEp5/KIip+G5GauSJPdOUZld5qOpDjtceIY4mU+dq4O0udM
        4iMSJsu48XtnXYD77rybd4rhmDf8en4GevBTYj1MGNBFb9INNz6ELc83xOfTL8bNPe5Hs46DsGxMcyDX
        gw8mN0Snmx9EfMdHsGpsPN6f1ABtOvfHjd374u+TGvLTkk71SCd4Go/F1MEdsW/WhZzrTlzcZgSWyxhL
        Pcyb4ap2Q9H3zrtQwHbhbjqF6LN+XGPteCV8Owf1uRWepmOQ9nhrKOqNbJLjwbE55+GHhXXhZwQv4osZ
        bb3/n/BxLV7avjTlfARzukwL5nRzXYQ3jI7BW6Pmi9P4Uupq4SJ29KbERiCLjawTmTDSXiRyZwCvzE8H
        9spZm1kLH01pgOadBnAjh6NJ+8FofMMQXHTtCJzTchSu6TIA654xI8bhuedh1IM9UKfZE+hKpxjX/0Z0
        7v4Q6lPuqX43aZm80S0Ry8g0qE9PfL3gbByccz4GcrMvaj0Ci0e3wBfTf4dejA7nXvMYo8wdut+1XQYi
        Nn60dlJvah1see5K7XTntHoc/e69DdOHdsCB2Rcg6U9t0ajdI/gdx5Io89h9PXB914dxzx334NNpF/MF
        MMO/23a/hl9tb72P0ccMoR27Fp3mf6DeGjUPb48OOw3enWCVWObxVELP8lLYdJroFLJN0OX/ENppBN7m
        JVxunXgFN78vet16H+mD23vdi0G9e2HRky31xpek18IpLrQ0w4M9My/E0Pt76o2rxyh0fbeH6QzNtSF+
        Sj4LaSOvZWTqh5TH2+hIsPOFSzD8vp4YwPHen9wAgUUx3PzWuLT1o7i8Le8s/bphTL8b0e2WvlhrRZXv
        E+viz/274YJWIxHbbLTuu4fRpywzBrmjW6EdI9/ZLUfivGtGom3X/ljxVLyeu0heBNk0sWGUdVcLaw9C
        e+Js+42IjoUkmHx56Oc06p3nrJKVjKV/iDWW9kBZcgMUcmGFPKJs57CxFYyGW7YitMGqSTHDpTiEEx/f
        2uhj8Uxmm+LmygYHePx42d9uk35lVv9TrJNLXwmfBSmL0aRNLfJoZCxB5hQ97Hn8cvxYc8h4MoeMJ7nM
        abdJWY9r9TtjVNPu1eEU7VTIr6nA4s4ILOka/X9aIrVFLaQ2nyG/pedNP4uOU4edTU6xLOg64k2TdpJe
        16KeRX2ccpJxNjHzQuLNPJecg8JMebbbq4rIh5HxCjPOI+eGOOWgMEPmcWHJCV5SxP423kyORbR+1vi2
        7lXB1MdG+kfOJ0To59bNCdtFP7eOTiLnEx0q0lX0idTFPWdYL8um3Kvi9AtgpDeabqRfHXmfkYSsjlaJ
        ISilBd+oq+DNaYiinAbMSS6jT25DFObZXAFv3pUhivIoT4ryWV7MXPN70iiEV8Ovh8WNzbp8Puf/vkKc
        /U2udiDjiQxlQ3M522We8vGSwiVNQnhtdF9zzGg6hYjQy4JrCsHn0/VzEl0vG9HFqZ8b71LqST1M3LZ0
        zyXYeth59HmFYu5T8ZI4BDLiwv8LITv8DwwikpHbuZaR03EmEvkVtaINvPyON2mPolc6oGglkdwur+qI
        YlK0qhO8qzozF7poild3Jd1QtOZGcpPOi9feRG6Gj8/SZso4WOMs230lj4Y5XpEg41ljmzif7bKjbk13
        cksERWtvgfdV5mvYLrrZujD3cT7RJ6QbiarPauqisdbM+aLrF00vR7vWT5CyjUtnyhWJHlofS1+toyDz
        u21nznG6PnbZxEc7FL/aA8aiVjxa289AVjm/TyMpuCz8b1/kN/eM9Fbwv9EHxW8+gOK3HoCfSF70dl+W
        H4aPFG14CMUb+pE/avwb+sO3sT+KNw4gA8NsGgTf5sHkEfg2PaKfiyjj28A2Fz7K20SO4WaQC3Pc4s02
        5lwaXeb8m4ZYuYXWyYZtW4bqcYr0eriODQO0nlpXWyd7fuvZx7JvI+fTba5167owIhsui03CuhVr3ZxI
        nbRH0ZPt0ubnGH7OIXa0bSm6+DfSFhF6mHUmnNe2i2U3v+iwZTBzjr31UQRe6QUjqUn4N/eW3m6VyklB
        63eEjbRmULmd4H//GZS+9yx8HzwL/wfjUfL+eJ2XfjgBJR9NgJ+5/8PnyPN8nmgxCf5tk8kUlGyfonP/
        thdQsi0BpduJ1FPORznfNpG15LfbmPJmf/azMOtMSmxEVtp3JLCcECHj57PUleyYarbJGPrZkrXbdkyD
        n5RsJzIm9TKRNUymntZaSKjs0lX6lWpkfRyX+B1Iu62TZtvUiDaf1k3WIzqxPgTldor+gqUj8fM5ZDPq
        o/VwIPqZmHqbelJ/1vm0jD3mVPh2UG+p+2QOAq89BCOtJdSaB3qp9YNOv8uUl5DSNgYprW+RXzBGVjuU
        frIQpbtyUPZ5Jkp3Z5EclOzOJjko3ZNL8lC6N9+RLyZLWF6Csr1LUVawTFO6bzlKC14iLO9djDItF6ZM
        6nQfs6zrJbew2wMF1rh7Oa7OTeTH5+Zcyy3MeUPz2+37TEojEN1WaJ1lHWV78k39dnM9FmWC1MuzQ2+t
        u8C1h7F1NPPwGsQuVr2sw0J0CyHr0rqGCbeLrIxJdlPP3bR/CNpf9kAj+5Jr6ivzah3Zx8oDeykjNqGu
        Qc4XPLgKxrqBQBqPpYzW3ZHZpuoOY6fga4/GGKv/2EPldwe/qJSx4UkEj21B4MQ7CBx/B8aXWxEkxld/
        Mzn+LgJfmQS//jv5R4jAifcQ+OZ9K38PQZaDJz5ivh2Bb8MEhe92hAh89zFz8r3NP2H88GmYk59ZfB4i
        eHKXyb/Jj8Julvcw3wPjp70wftxnsZ/P5GeWNfsR/PkAgr8chPHLIZNThzVKc4TlozAKjzn4Moz3OFTR
        V1DerzVGEfGeYH6C9cK3UMXfAcXfa5T/exj+H2D4TBSB7yTrT7L+36z7kXU/8flnoOQXqBKWNT8TPpcy
        J0bpKagywQsVsCkCykip5MUmQR8QIMFiKF0uAWBQ1gf10UKoxCZQed2ANf1uwevDq+8wktSaP1ol+brq
        MF8lx0ElNVZqTT8EP0mD8Q03vfAIF3qCenzLRX6HoN/GNIgqITSCohE0pTSEE20AGqX0F425eBOjrBCG
        GCDohREs0ogxFHMYsvBi1vmZCz4Yhh+GKmEeRgmqVGOoMgSVQYImNJjzP8X/7BQulZ9EpjLsVFHZLetM
        znZbxll2J7dstKTbvd8A+9ZBvfYoneVqpeTXH7JumGdtt0etftgq/cqElPC/71WLbpiLjLb/wotXQ825
        TGHuZTDmNQTmNSCXk8sqQNorRrnAXCeXQVlIWcZULnS9ox3zLq0Yp3ylROsvRJM19YzQbQ5l5zhk9BiX
        hNFjlYf0EZmLHUS2q3kXu7jUgdUuY8zRcykj8Wog8/pPsaid499yx1mlM5Sw/G6rZCZs+sssI6dTgkqJ
        T1BJcQkMb6f/pYLK/hKCu70y3P0rxPVXHSr7KxBOkgVn3yi4/koE39YEI5qcTWV/VSJaHyeVyVfWLvql
        NEtATucE9fbY/+xfjahJNakm1aSaVJNqUk2qSTWpJtWk//Lk8fwf1Ee3xoPCRCwAAAAASUVORK5CYII=
</value>
  </data>
</root>